{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"test/","text":"This is an tag This is an tag This is an tag This text will be italic This will also be italic This text will be bold This will also be bold You can combine them Item 1 Item 2 Item 2a Item 2b Item 1 Item 2 Item 3 Item 3a Item 3b Format: http://github.com - automatic! GitHub As Kanye West said: We're living the future so the present is our past. I think you should use an <addr> element here instead. 1 2 3 4 5 function fancyAlert ( arg ) { if ( arg ) { $ . facebox ({ div : '#foo' }) } } [x] @mentions, #refs, links , formatting , and tags supported [x] list syntax required (any unordered or ordered list supported) [x] this is a complete item [ ] this is an incomplete item First Header Second Header Content from cell 1 Content from cell 2 Content in the first column Content in the second column It's very easy to make some words bold and other words italic with Markdown. You can even link to Google!","title":"This is an <h1> tag"},{"location":"test/#this-is-an-tag","text":"","title":"This is an  tag"},{"location":"test/#this-is-an-tag_1","text":"","title":"This is an  tag"},{"location":"test/#this-is-an-tag_2","text":"","title":"This is an  tag"},{"location":"api/curl/","text":"api with curl metdata enged\u00e9ly van e az oldalon 1 PUT /1.3/server/server-UUID/ metadata lek\u00e9rdez\u00e9se szerveren 1 curl http://169.254.169.254/metadata/v1.json","title":"api with curl"},{"location":"api/curl/#api-with-curl","text":"","title":"api with curl"},{"location":"api/curl/#metdata-engedely-van-e-az-oldalon","text":"1 PUT /1.3/server/server-UUID/","title":"metdata enged\u00e9ly van e az oldalon"},{"location":"api/curl/#metadata-lekerdezese-szerveren","text":"1 curl http://169.254.169.254/metadata/v1.json","title":"metadata lek\u00e9rdez\u00e9se szerveren"},{"location":"egy%C3%A9b/alapparancsok/","text":"simple commands \"find hol mit keressen\" \"rm -rf valamit\" rekurzivan t\u00f6r\u00f6l grep sz\u00f6vegben keres \"dig domain\" dns-n\u00e9v kiszolg\u00e1l\u00f3 ellen\u0151rz\u00e9sre watch [options] command egyszer\u0171bben lehet megfigyelni a fut\u00e1st \u00e9s a hib\u00e1t \"watch docker ps\" wc -l : A f\u00e1jl sor\u00e1nak sz\u00e1m\u00e1t nyomtatja ki. wc -w : kinyomtatja a szavak sz\u00e1m\u00e1t a f\u00e1jlban. wc -c : Megjelen\u00edti a f\u00e1jlban l\u00e9v\u0151 byte-ok sz\u00e1m\u00e1t. wc -m : kinyomtatja a karakterek sz\u00e1m\u00e1t egy f\u00e1jlb\u00f3l. wc -L : a f\u00e1jl leghosszabb sor\u00e1nak csak a hossz\u00fas\u00e1g\u00e1t nyomtatja ki. wc tecmint.txt : param\u00e9ter n\u00e9lk\u00fcl megjeleniti az alap adatokat egy f\u00e1jlr\u00f3l a sorok \u00e9s szavak sz\u00e1m\u00e1t \u00e9s mennyi byte van benne f\u00e1jlba \u00edr\u00e1s szerkeszt\u0151 program n\u00e9lk\u00fcl 1 echo \"# ls bash by ati\" >> README.md stop and rm a cont\u00e9nerekre mindre 1 docker stop $( docker ps -a -q ) 1 docker rm $( docker ps -a -q ) imageket mindent t\u00f6r\u00f6l 1 docker system prune t\u00f6rli a cont\u00e9nereket 1 docker volume rm $( docker volume ls | awk '{print $2}' ) semmivel \u00edrja fel\u00fcl 1 > defaul password gener\u00e1l\u00e1s 1 2 apt install pwgen pwgen -1ysc 32 2 port hallgat\u00e1s, h haszn\u00e1latban van e lsof -i:80 megtisztitja a portott fuser -k 80/tcp bead\u00f3s jelsz\u00f3 shban echo thePassword | passwd theUsername --stdin","title":"simple commands"},{"location":"egy%C3%A9b/alapparancsok/#simple-commands","text":"","title":"simple commands"},{"location":"egy%C3%A9b/alapparancsok/#find-hol-mit-keressen","text":"","title":"\"find hol mit keressen\""},{"location":"egy%C3%A9b/alapparancsok/#rm-rf-valamit-rekurzivan-torol","text":"","title":"\"rm -rf valamit\" rekurzivan t\u00f6r\u00f6l"},{"location":"egy%C3%A9b/alapparancsok/#grep-szovegben-keres","text":"","title":"grep sz\u00f6vegben keres"},{"location":"egy%C3%A9b/alapparancsok/#dig-domain-dns-nev-kiszolgalo-ellenorzesre","text":"","title":"\"dig domain\" dns-n\u00e9v kiszolg\u00e1l\u00f3 ellen\u0151rz\u00e9sre"},{"location":"egy%C3%A9b/alapparancsok/#watch-options-command-egyszerubben-lehet-megfigyelni-a-futast-es-a-hibat-watch-docker-ps","text":"","title":"watch [options] command egyszer\u0171bben lehet megfigyelni a fut\u00e1st \u00e9s a hib\u00e1t \"watch docker ps\""},{"location":"egy%C3%A9b/alapparancsok/#wc-l-a-fajl-soranak-szamat-nyomtatja-ki","text":"","title":"wc -l : A f\u00e1jl sor\u00e1nak sz\u00e1m\u00e1t nyomtatja ki."},{"location":"egy%C3%A9b/alapparancsok/#wc-w-kinyomtatja-a-szavak-szamat-a-fajlban","text":"","title":"wc -w : kinyomtatja a szavak sz\u00e1m\u00e1t a f\u00e1jlban."},{"location":"egy%C3%A9b/alapparancsok/#wc-c-megjeleniti-a-fajlban-levo-byte-ok-szamat","text":"","title":"wc -c : Megjelen\u00edti a f\u00e1jlban l\u00e9v\u0151 byte-ok sz\u00e1m\u00e1t."},{"location":"egy%C3%A9b/alapparancsok/#wc-m-kinyomtatja-a-karakterek-szamat-egy-fajlbol","text":"","title":"wc -m : kinyomtatja a karakterek sz\u00e1m\u00e1t egy f\u00e1jlb\u00f3l."},{"location":"egy%C3%A9b/alapparancsok/#wc-l-a-fajl-leghosszabb-soranak-csak-a-hosszusagat-nyomtatja-ki","text":"","title":"wc -L : a f\u00e1jl leghosszabb sor\u00e1nak csak a hossz\u00fas\u00e1g\u00e1t nyomtatja ki."},{"location":"egy%C3%A9b/alapparancsok/#wc-tecminttxt-parameter-nelkul-megjeleniti-az-alap-adatokat-egy-fajlrol-a-sorok-es-szavak-szamat-es-mennyi-byte-van-benne","text":"","title":"wc tecmint.txt : param\u00e9ter n\u00e9lk\u00fcl megjeleniti az alap adatokat egy f\u00e1jlr\u00f3l a sorok \u00e9s szavak sz\u00e1m\u00e1t \u00e9s mennyi byte van benne"},{"location":"egy%C3%A9b/alapparancsok/#fajlba-iras-szerkeszto-program-nelkul","text":"1 echo \"# ls bash by ati\" >> README.md","title":"f\u00e1jlba \u00edr\u00e1s szerkeszt\u0151 program n\u00e9lk\u00fcl"},{"location":"egy%C3%A9b/alapparancsok/#stop-and-rm-a-contenerekre-mindre","text":"1 docker stop $( docker ps -a -q ) 1 docker rm $( docker ps -a -q )","title":"stop and rm a cont\u00e9nerekre mindre"},{"location":"egy%C3%A9b/alapparancsok/#imageket-mindent-torol","text":"1 docker system prune","title":"imageket mindent t\u00f6r\u00f6l"},{"location":"egy%C3%A9b/alapparancsok/#torli-a-contenereket","text":"1 docker volume rm $( docker volume ls | awk '{print $2}' )","title":"t\u00f6rli a cont\u00e9nereket"},{"location":"egy%C3%A9b/alapparancsok/#semmivel-irja-felul","text":"1 > defaul","title":"semmivel \u00edrja fel\u00fcl"},{"location":"egy%C3%A9b/alapparancsok/#password-generalas","text":"1 2 apt install pwgen pwgen -1ysc 32 2","title":"password gener\u00e1l\u00e1s"},{"location":"egy%C3%A9b/alapparancsok/#port-hallgatas-h-hasznalatban-van-e","text":"lsof -i:80","title":"port hallgat\u00e1s, h haszn\u00e1latban van e"},{"location":"egy%C3%A9b/alapparancsok/#megtisztitja-a-portott","text":"fuser -k 80/tcp bead\u00f3s jelsz\u00f3 shban echo thePassword | passwd theUsername --stdin","title":"megtisztitja a portott"},{"location":"install/Jenkins/","text":"Jenkins Jenkisn docker hub instal docker and docker-compose pull jenkins and run adduser jenkins, su jenkins, mkdir jenk, cd \u00e9s ott futatt 1 docker pull jenkins 1 docker run --name jenkins -p 8080 :8080 -p 50000 :50000 -v 'pwd' :/var/jenkins_home jenkins ki \u00edrja termin\u00e1lon az admin jelsz\u00f3t b\u00f6ng\u00e9sz\u0151ben ip:8080 on kell beilleszteni azt dockerben Jenkin_Home/secrets/initialAdminPassword-ban van folytat\u00e1s majd pluginek telep\u00edt\u00e9se admin user create r\u00e9szleges megold\u00e1s de att\u00f3l \u00e9rdekes 1 2 3 4 5 mkdir $ PWD / jenkins sudo chown - R 1000 : 1000 $ PWD / jenkins docker run - d - p 8080 : 8080 - p 50000 : 50000 - v $ PWD / jenkins : / var / jenkins_home --name jenkins jenkins lts hosszan t\u00e1mogatot form\u00e1tum \u00fagyan az az elj\u00e1r\u00e1s adduser stb 1 docker run -it -p 8080 :8080 -p 50000 :50000 -v ` pwd ` :/var/jenkins_home --name jenkins jenkins/jenkins:lts fejleszett jenkins 1 docker run -it -p 8080 :8080 -p 50000 :50000 -v ` pwd ` :/var/jenkins_home --name blue jenkinsci/blueocean","title":"Jenkins"},{"location":"install/Jenkins/#jenkins","text":"Jenkisn docker hub","title":"Jenkins"},{"location":"install/Jenkins/#instal-docker-and-docker-compose","text":"","title":"instal docker and docker-compose"},{"location":"install/Jenkins/#pull-jenkins-and-run","text":"","title":"pull jenkins and run"},{"location":"install/Jenkins/#adduser-jenkins-su-jenkins-mkdir-jenk-cd-es-ott-futatt","text":"1 docker pull jenkins 1 docker run --name jenkins -p 8080 :8080 -p 50000 :50000 -v 'pwd' :/var/jenkins_home jenkins","title":"adduser jenkins, su jenkins, mkdir jenk, cd \u00e9s ott futatt"},{"location":"install/Jenkins/#ki-irja-terminalon-az-admin-jelszot","text":"b\u00f6ng\u00e9sz\u0151ben ip:8080 on kell beilleszteni azt dockerben Jenkin_Home/secrets/initialAdminPassword-ban van folytat\u00e1s majd pluginek telep\u00edt\u00e9se admin user create","title":"ki \u00edrja termin\u00e1lon az admin jelsz\u00f3t"},{"location":"install/Jenkins/#reszleges-megoldas-de-attol-erdekes","text":"1 2 3 4 5 mkdir $ PWD / jenkins sudo chown - R 1000 : 1000 $ PWD / jenkins docker run - d - p 8080 : 8080 - p 50000 : 50000 - v $ PWD / jenkins : / var / jenkins_home --name jenkins jenkins","title":"r\u00e9szleges megold\u00e1s de att\u00f3l \u00e9rdekes"},{"location":"install/Jenkins/#lts-hosszan-tamogatot-formatum","text":"","title":"lts hosszan t\u00e1mogatot form\u00e1tum"},{"location":"install/Jenkins/#ugyan-az-az-eljaras-adduser-stb","text":"1 docker run -it -p 8080 :8080 -p 50000 :50000 -v ` pwd ` :/var/jenkins_home --name jenkins jenkins/jenkins:lts","title":"\u00fagyan az az elj\u00e1r\u00e1s adduser stb"},{"location":"install/Jenkins/#fejleszett-jenkins","text":"1 docker run -it -p 8080 :8080 -p 50000 :50000 -v ` pwd ` :/var/jenkins_home --name blue jenkinsci/blueocean","title":"fejleszett jenkins"},{"location":"install/bitwarden/","text":"bitwarden docker & docker compose install install bitwarden web minimum 2 mag 4gb ram 25gb rom script let\u00f6lt\u00e9se \u00e9s ind\u00edt\u00e1sa 1 2 curl -Lso bitwarden.sh https://go.btwrdn.co/bw-sh \\ && chmod +x bitwarden.sh 1 ./bitwarden.sh install url bitwarden.keikami.tk letsencrypt eld\u00f6nt\u00f6d n instal id and key, te cre\u00e1lj magadnak :P 1 111aed8a-f087-421b-9af1-ac02008504d3 1 Skgan9zL9H3SyoK9YWwD do u have a ssl certificate to use n want to generate ssl y scriptel ind\u00edt\u00e1s 1 ./bitwarden.sh start","title":"Bitwarden"},{"location":"install/bitwarden/#bitwarden","text":"","title":"bitwarden"},{"location":"install/bitwarden/#docker-docker-compose-install","text":"install bitwarden web","title":"docker &amp; docker compose install"},{"location":"install/bitwarden/#minimum","text":"2 mag 4gb ram 25gb rom","title":"minimum"},{"location":"install/bitwarden/#script-letoltese-es-inditasa","text":"1 2 curl -Lso bitwarden.sh https://go.btwrdn.co/bw-sh \\ && chmod +x bitwarden.sh 1 ./bitwarden.sh install","title":"script let\u00f6lt\u00e9se \u00e9s ind\u00edt\u00e1sa"},{"location":"install/bitwarden/#url","text":"bitwarden.keikami.tk","title":"url"},{"location":"install/bitwarden/#letsencrypt-eldontod","text":"n","title":"letsencrypt eld\u00f6nt\u00f6d"},{"location":"install/bitwarden/#instal-id-and-key-te-crealj-magadnak-p","text":"1 111aed8a-f087-421b-9af1-ac02008504d3 1 Skgan9zL9H3SyoK9YWwD","title":"instal id and key, te cre\u00e1lj magadnak :P"},{"location":"install/bitwarden/#do-u-have-a-ssl-certificate-to-use","text":"n","title":"do u have a ssl certificate to use"},{"location":"install/bitwarden/#want-to-generate-ssl","text":"y","title":"want to generate ssl"},{"location":"install/bitwarden/#scriptel-inditas","text":"1 ./bitwarden.sh start","title":"scriptel ind\u00edt\u00e1s"},{"location":"install/certbot/","text":"certbot install certbot install to ubuntu with apache 1 2 3 4 apt-get update apt-get install software-properties-common add-apt-repository universe add-apt-repository ppa:certbot/certbot certbot apache package apt install python-certbot-apache 1 apt-get install certbot python3-certbot-apache automatical start 1 certbot --apache config certbot with hand 1 certbot --apache -d keitest.ml -d www.keitest.ml ssl test website test for the certbot auto restart 1 certbot renew --dry-run .yml-ben a web r\u00e9szhez becsatolni volumes: - ./default.conf:/etc/nginx/conf.d/default.conf - ./letsencrypt/:/etc/letsencrypt script in the docker 1 docker run -it --name letsencrypt -v ` pwd ` /wp_data/.well-known/:/var/www/html/.well-known -v ` pwd ` /letsencrypt/:/etc/letsencrypt --entrypoint sh --rm certbot/certbot futtat\u00e1s -it n\u00e9lk\u00fcl 1 certbot certonly --no-bootstrap --webroot -w /var/www/html/ -d letsencrypt.keikami.tk --non-interactive --agree-tos --email m.peti@irdmeg.hu \u00fajra k\u00e9ri a tanus\u00edtv\u00e1nyt 1 certbot renew","title":"certbot install"},{"location":"install/certbot/#certbot-install","text":"","title":"certbot install"},{"location":"install/certbot/#certbot-install-to-ubuntu-with-apache","text":"1 2 3 4 apt-get update apt-get install software-properties-common add-apt-repository universe add-apt-repository ppa:certbot/certbot","title":"certbot install to ubuntu with apache"},{"location":"install/certbot/#certbot-apache-package","text":"","title":"certbot apache package"},{"location":"install/certbot/#apt-install-python-certbot-apache","text":"1 apt-get install certbot python3-certbot-apache","title":"apt install python-certbot-apache"},{"location":"install/certbot/#automatical-start","text":"1 certbot --apache","title":"automatical start"},{"location":"install/certbot/#config-certbot-with-hand","text":"1 certbot --apache -d keitest.ml -d www.keitest.ml","title":"config certbot with hand"},{"location":"install/certbot/#ssl-test-website","text":"","title":"ssl test website"},{"location":"install/certbot/#test-for-the-certbot-auto-restart","text":"1 certbot renew --dry-run","title":"test for the certbot auto restart"},{"location":"install/certbot/#yml-ben-a-web-reszhez-becsatolni","text":"volumes: - ./default.conf:/etc/nginx/conf.d/default.conf - ./letsencrypt/:/etc/letsencrypt","title":".yml-ben a web r\u00e9szhez becsatolni"},{"location":"install/certbot/#script-in-the-docker","text":"1 docker run -it --name letsencrypt -v ` pwd ` /wp_data/.well-known/:/var/www/html/.well-known -v ` pwd ` /letsencrypt/:/etc/letsencrypt --entrypoint sh --rm certbot/certbot","title":"script in the docker"},{"location":"install/certbot/#futtatas-it-nelkul","text":"1 certbot certonly --no-bootstrap --webroot -w /var/www/html/ -d letsencrypt.keikami.tk --non-interactive --agree-tos --email m.peti@irdmeg.hu","title":"futtat\u00e1s -it n\u00e9lk\u00fcl"},{"location":"install/certbot/#ujra-keri-a-tanusitvanyt","text":"1 certbot renew","title":"\u00fajra k\u00e9ri a tanus\u00edtv\u00e1nyt"},{"location":"install/code-server/","text":"code szerver 94.237.98.101 code.keikami.tk minimum elv\u00e1r\u00e1s 1 mag 2gb ram 10gb rom nginx telep\u00edt\u00e9se apt install nginx -y service nginx start service nginx reload nano /etc/nginx/sites-enabled/default /etc/nginx/sites-enabled/default nano /etc/nginx/sites-enabled/default server { listen 94.237.98.101:80 default_server; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 server_name code . keikami . tk ; client_max_body_size 10m ; location / . well-known / { root /usr/share/nginx/html/ ; } location / { proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; proxy_set_header X-Forwarded-Proto $scheme ; proxy_set_header X-Real-IP $remote_addr ; proxy_set_header Host $http_host ; proxy_pass http : // 127.0.0.1 : 80 ; proxy_redirect off ; } } server { listen 94.237.98.101:443 default ssl; server_name code.keikami.tk; client_max_body_size 10m; ssl_certificate_key /etc/letsencrypt/live/code.keikami.tk/privkey.pem; ssl_certificate /etc/letsencrypt/live/code.keikami.tk/fullchain.pem; location / { proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header X-Real-IP $remote_addr; proxy_set_header Host $http_host; proxy_pass http://127.0.0.1:80; proxy_redirect off; } } letsencrypt el\u0151tte \u00e1llitsd le az ngnx-et \u00e1ll\u00edtsd be milyen szoftverrel \u00e9s op-vel akarod haszn\u00e1lni certbot nginx ubuntu20.04 apt-get update apt-get install software-properties-common add-apt-repository universe apt-get update install certbot apt-get install certbot python3-certbot-nginx -y \u00edgy szerkeszti az nginx configj\u00e1t certbot --nginx \u00edgy neked kell certbot certonly --nginx automatikus \u00fajj\u00edt\u00e1s certbot piken --dry-run /etc/letsencrypt/live/code.keikami.tk/fullchain.pem /etc/letsencrypt/live/code.keikami.tk/privkey.pem code-szerver install \u00fatmutat\u00f3 mkdir ~/code-server cd ~/code-server https://github.com/cdr/code-server.git wget https://github.com/cdr/code-server/releases/download/3.4.1/code-server-3.4.1-linux-amd64.tar.gz tar -xzvf code-server-3.4.1-linux-amd64.tar.gz cp -r code-server-3.4.1-linux-amd64 /usr/lib/code-server ln -s /usr/lib/code-server/bin/code-server /usr/bin/code-server mkdir /var/lib/code-server nano /lib/systemd/system/code-server.service","title":"Code server"},{"location":"install/code-server/#code-szerver","text":"","title":"code szerver"},{"location":"install/code-server/#9423798101","text":"","title":"94.237.98.101"},{"location":"install/code-server/#codekeikamitk","text":"","title":"code.keikami.tk"},{"location":"install/code-server/#minimum-elvaras","text":"1 mag 2gb ram 10gb rom","title":"minimum elv\u00e1r\u00e1s"},{"location":"install/code-server/#nginx-telepitese","text":"apt install nginx -y service nginx start service nginx reload nano /etc/nginx/sites-enabled/default /etc/nginx/sites-enabled/default nano /etc/nginx/sites-enabled/default server { listen 94.237.98.101:80 default_server; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 server_name code . keikami . tk ; client_max_body_size 10m ; location / . well-known / { root /usr/share/nginx/html/ ; } location / { proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; proxy_set_header X-Forwarded-Proto $scheme ; proxy_set_header X-Real-IP $remote_addr ; proxy_set_header Host $http_host ; proxy_pass http : // 127.0.0.1 : 80 ; proxy_redirect off ; } }","title":"nginx telep\u00edt\u00e9se"},{"location":"install/code-server/#server","text":"","title":"server {"},{"location":"install/code-server/#listen-9423798101443-default-ssl","text":"","title":"listen 94.237.98.101:443 default ssl;"},{"location":"install/code-server/#_1","text":"","title":""},{"location":"install/code-server/#server_name-codekeikamitk","text":"","title":"server_name code.keikami.tk;"},{"location":"install/code-server/#client_max_body_size-10m","text":"","title":"client_max_body_size 10m;"},{"location":"install/code-server/#_2","text":"","title":""},{"location":"install/code-server/#ssl_certificate_key-etcletsencryptlivecodekeikamitkprivkeypem","text":"","title":"ssl_certificate_key /etc/letsencrypt/live/code.keikami.tk/privkey.pem;"},{"location":"install/code-server/#_3","text":"","title":""},{"location":"install/code-server/#ssl_certificate-etcletsencryptlivecodekeikamitkfullchainpem","text":"","title":"ssl_certificate /etc/letsencrypt/live/code.keikami.tk/fullchain.pem;"},{"location":"install/code-server/#_4","text":"","title":""},{"location":"install/code-server/#location","text":"","title":"location / {"},{"location":"install/code-server/#proxy_set_header-x-forwarded-for-proxy_add_x_forwarded_for","text":"","title":"proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;"},{"location":"install/code-server/#proxy_set_header-x-forwarded-proto-scheme","text":"","title":"proxy_set_header X-Forwarded-Proto $scheme;"},{"location":"install/code-server/#proxy_set_header-x-real-ip-remote_addr","text":"","title":"proxy_set_header X-Real-IP $remote_addr;"},{"location":"install/code-server/#proxy_set_header-host-http_host","text":"","title":"proxy_set_header Host $http_host;"},{"location":"install/code-server/#proxy_pass-http12700180","text":"","title":"proxy_pass http://127.0.0.1:80;"},{"location":"install/code-server/#proxy_redirect-off","text":"","title":"proxy_redirect off;"},{"location":"install/code-server/#_5","text":"","title":"}"},{"location":"install/code-server/#_6","text":"","title":"}"},{"location":"install/code-server/#letsencrypt","text":"","title":"letsencrypt"},{"location":"install/code-server/#elotte-allitsd-le-az-ngnx-et","text":"","title":"el\u0151tte \u00e1llitsd le az ngnx-et"},{"location":"install/code-server/#allitsd-be-milyen-szoftverrel-es-op-vel-akarod-hasznalnicertbot","text":"","title":"\u00e1ll\u00edtsd be milyen szoftverrel \u00e9s op-vel akarod haszn\u00e1lnicertbot"},{"location":"install/code-server/#nginx-ubuntu2004","text":"apt-get update apt-get install software-properties-common add-apt-repository universe apt-get update","title":"nginx ubuntu20.04"},{"location":"install/code-server/#install-certbot","text":"apt-get install certbot python3-certbot-nginx -y","title":"install certbot"},{"location":"install/code-server/#igy-szerkeszti-az-nginx-configjat","text":"certbot --nginx","title":"\u00edgy szerkeszti az nginx configj\u00e1t"},{"location":"install/code-server/#igy-neked-kell","text":"certbot certonly --nginx","title":"\u00edgy neked kell"},{"location":"install/code-server/#automatikus-ujjitas","text":"certbot piken --dry-run /etc/letsencrypt/live/code.keikami.tk/fullchain.pem /etc/letsencrypt/live/code.keikami.tk/privkey.pem","title":"automatikus \u00fajj\u00edt\u00e1s"},{"location":"install/code-server/#code-szerver_1","text":"","title":"code-szerver"},{"location":"install/code-server/#install-utmutato","text":"mkdir ~/code-server cd ~/code-server https://github.com/cdr/code-server.git wget https://github.com/cdr/code-server/releases/download/3.4.1/code-server-3.4.1-linux-amd64.tar.gz tar -xzvf code-server-3.4.1-linux-amd64.tar.gz cp -r code-server-3.4.1-linux-amd64 /usr/lib/code-server ln -s /usr/lib/code-server/bin/code-server /usr/bin/code-server mkdir /var/lib/code-server nano /lib/systemd/system/code-server.service","title":"install \u00fatmutat\u00f3"},{"location":"install/convos/","text":"Convos install docker install Convos in docker 1 2 3 4 5 docker pull nordaaker/convos:stable docker run -it -p 8080 :3000 \\ -v $HOME /convos/data:/data \\ nordaaker/convos:stable","title":"Convos"},{"location":"install/convos/#convos","text":"install docker install Convos in docker 1 2 3 4 5 docker pull nordaaker/convos:stable docker run -it -p 8080 :3000 \\ -v $HOME /convos/data:/data \\ nordaaker/convos:stable","title":"Convos"},{"location":"install/gitter/","text":"Gitter Gitter install - choose Operating System 1 wget https://update.gitter.im/linux64/gitter_5.0.1_amd64.deb 1 dpkg -i gitter_5.0.1_amd64.deb 1 2 apt-get update apt install snapd 1 snap install gitter-desktop Gitter install in docker Docker & Docker-compose install Install node 10.x 1 curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash 1 apt-get install build-essential libssl-dev -y 1 source ~/.profile nvm will install the latest 1 nvm install 10 /* Install npm 6.x 1 npm install npm@^5 -g Clone this repo: git clone https://gitlab.com/gitlab-org/gitter/webapp.git 1 cd /webapp Run 1 npm install docker-compose 1 docker-compose up -d --no-recreate npm start rosszul indul nem siker\u00fclt elind\u00edtani.","title":"[Gitter](https://gitter.im/)"},{"location":"install/gitter/#gitter","text":"Gitter install - choose Operating System 1 wget https://update.gitter.im/linux64/gitter_5.0.1_amd64.deb 1 dpkg -i gitter_5.0.1_amd64.deb 1 2 apt-get update apt install snapd 1 snap install gitter-desktop","title":"Gitter"},{"location":"install/gitter/#gitter-install-in-docker","text":"Docker & Docker-compose install Install node 10.x 1 curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash 1 apt-get install build-essential libssl-dev -y 1 source ~/.profile nvm will install the latest 1 nvm install 10 /* Install npm 6.x 1 npm install npm@^5 -g Clone this repo: git clone https://gitlab.com/gitlab-org/gitter/webapp.git 1 cd /webapp Run 1 npm install docker-compose 1 docker-compose up -d --no-recreate npm start rosszul indul nem siker\u00fclt elind\u00edtani.","title":"Gitter install in docker"},{"location":"install/guacamole/","text":"Guacamole install with script on ubuntu youtube videos help 1 wget https://raw.githubusercontent.com/MysticRyuujin/guac-install/master/guac-install.sh chmod +x guac-install.sh ./guac-install.sh totp, kihagyhat\u00f3 2 faktoros bel\u00e9ptet\u00e9st cs\u00edn\u00e1l -y mysql -y root_pw:teszt user_pw:tesztuser telep\u00edt\u00e9s ut\u00e1n b\u00f6ng\u00e9sz\u0151ben ny\u00edsd meg a linket, localhost hely\u00e9re az ip Default login (username/password) 2 faktoros bel\u00e9ptet\u00e9s, google hitteles\u00edt\u0151 appal http://localhost:8080/guacamole install linken megadott folyamatott k\u00f6vettem, kiv\u00e9tel, hogy bel\u00e9ptet\u00e9shez ssh-rsa-t haszn\u00e1ltam nem jelsz\u00f3t.","title":"Guacamole"},{"location":"install/guacamole/#guacamole","text":"install with script on ubuntu youtube videos help 1 wget https://raw.githubusercontent.com/MysticRyuujin/guac-install/master/guac-install.sh chmod +x guac-install.sh ./guac-install.sh totp, kihagyhat\u00f3 2 faktoros bel\u00e9ptet\u00e9st cs\u00edn\u00e1l -y mysql -y root_pw:teszt user_pw:tesztuser telep\u00edt\u00e9s ut\u00e1n b\u00f6ng\u00e9sz\u0151ben ny\u00edsd meg a linket, localhost hely\u00e9re az ip Default login (username/password) 2 faktoros bel\u00e9ptet\u00e9s, google hitteles\u00edt\u0151 appal http://localhost:8080/guacamole install linken megadott folyamatott k\u00f6vettem, kiv\u00e9tel, hogy bel\u00e9ptet\u00e9shez ssh-rsa-t haszn\u00e1ltam nem jelsz\u00f3t.","title":"Guacamole"},{"location":"install/homelabos/","text":"Homelabos youtube link a telep\u00edt\u00e9shez One command deployment: 1 bash < ( curl -s https://gitlab.com/NickBusey/HomelabOS/-/raw/master/install_homelabos.sh ) el\u00e9g k\u00f6vetni amit \u00edr a program: 1 cd /var/homelabos/install 1 make set miniflux.enable true ha nem fogadja el, telep\u00edtsd a fel a make-t, telep\u00edt\u00e9s ut\u00e1na ism\u00e9t add ki a parancsot 1 apt install make -k\u00e9rni fog hogy ad be neki a k\u00f6vetkez\u0151 parancsot: 1 make url c\u00edm l\u00e9trehoz\u00e1s\u00e1n\u00e1l sz\u00fcks\u00e9g van whitecardos url-re ex: *.homelabos.keikami.tk ezek ut\u00e1n \u00e9rtelem szer\u00fcen add meg az adatokat amiket k\u00e9r: felhaszn\u00e1l\u00f3nevet adminhoz, jelsz\u00f3t, letsencrypthez webc\u00edmet, valid emailt.","title":"Homelabos"},{"location":"install/homelabos/#homelabos","text":"youtube link a telep\u00edt\u00e9shez One command deployment: 1 bash < ( curl -s https://gitlab.com/NickBusey/HomelabOS/-/raw/master/install_homelabos.sh ) el\u00e9g k\u00f6vetni amit \u00edr a program: 1 cd /var/homelabos/install 1 make set miniflux.enable true ha nem fogadja el, telep\u00edtsd a fel a make-t, telep\u00edt\u00e9s ut\u00e1na ism\u00e9t add ki a parancsot 1 apt install make -k\u00e9rni fog hogy ad be neki a k\u00f6vetkez\u0151 parancsot: 1 make url c\u00edm l\u00e9trehoz\u00e1s\u00e1n\u00e1l sz\u00fcks\u00e9g van whitecardos url-re ex: *.homelabos.keikami.tk ezek ut\u00e1n \u00e9rtelem szer\u00fcen add meg az adatokat amiket k\u00e9r: felhaszn\u00e1l\u00f3nevet adminhoz, jelsz\u00f3t, letsencrypthez webc\u00edmet, valid emailt.","title":"Homelabos"},{"location":"install/kanboard/","text":"Kanboard install docker docker run kanboard important basic user & pw:admin; admin. 1 docker run -d --name kanboard -p 80 :80 -t kanboard/kanboard:v1.2.8 -docker-compose.yml kanboard with mariadb bash version: '3' services: kanboard: image: kanboard/kanboard:latest ports: - \"80:80\" - \"443:443\" volumes: - kanboard_data:/var/www/app/data - kanboard_plugins:/var/www/app/plugins - kanboard_ssl:/etc/nginx/ssl environment: DATABASE_URL: mysql://kanboard:kanboard-secret@db/kanboard db: image: mariadb:latest command: --default-authentication-plugin=mysql_native_password environment: MYSQL_ROOT_PASSWORD: secret MYSQL_DATABASE: kanboard MYSQL_USER: kanboard MYSQL_PASSWORD: kanboard-secret volumes: kanboard_data: kanboard_plugins: kanboard_ssl:","title":"Kanboard"},{"location":"install/kanboard/#kanboard","text":"install docker docker run kanboard important basic user & pw:admin; admin. 1 docker run -d --name kanboard -p 80 :80 -t kanboard/kanboard:v1.2.8 -docker-compose.yml kanboard with mariadb bash version: '3' services: kanboard: image: kanboard/kanboard:latest ports: - \"80:80\" - \"443:443\" volumes: - kanboard_data:/var/www/app/data - kanboard_plugins:/var/www/app/plugins - kanboard_ssl:/etc/nginx/ssl environment: DATABASE_URL: mysql://kanboard:kanboard-secret@db/kanboard db: image: mariadb:latest command: --default-authentication-plugin=mysql_native_password environment: MYSQL_ROOT_PASSWORD: secret MYSQL_DATABASE: kanboard MYSQL_USER: kanboard MYSQL_PASSWORD: kanboard-secret volumes: kanboard_data: kanboard_plugins: kanboard_ssl:","title":"Kanboard"},{"location":"install/passbolt/","text":"passbolt docker & docker compose install k\u00e9rte 1 apt install rng-tools passbolt install utmutat\u00f3, m\u00e1s k\u00e9p lett megoldva github repob\u00f3l let\u00f6lt\u0151 link szerkessz\u00fck a docker-compose.yml-t, fakesmtp hozz\u00e1 ad\u00e1sa passbolt r\u00e9szn\u00e9l: 1 2 3 depends_on: - db - fakesmtp bel\u00fclre mutassanak a portok 1 2 3 ports: - \"127.0.0.1:80:80\" - \"127.0.0.1:443:443\" fakesmtp image, volume, port megad\u00e1sa 1 2 3 4 5 6 fakesmtp : image : munkyboy / fakesmtp volumes : - /tmp/fakemail:/var/ mail ports : - \"2525:25\" szerkessz\u00fck az /env/passbolt.env-et email k\u00fcld\u0151 r\u00e9sszel lett b\u0151v\u00edtve 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 APP_FULL_BASE_URL = https://passbolt.keikami.tk # Database settings DATASOURCES_DEFAULT_HOST = db DATASOURCES_DEFAULT_USERNAME = passbolt DATASOURCES_DEFAULT_PASSWORD = P4ssb0lt DATASOURCES_DEFAULT_DATABASE = passbolt DATASOURCES_DEFAULT_PORT = 3306 DATASOURCES_QUOTE_IDENTIFIER = true # Registration PASSBOLT_REGISTRATION_PUBLIC = true EMAIL_TRANSPORT_DEFAULT_HOST = fakesmtp # EMAIL_TRANSPORT_DEFAULT_USERNAME=mailUser@mydomain.com EMAIL_DEFAULT_FROM = mailUser@mydomain.com # EMAIL_TRANSPORT_DEFAULT_PASSWORD=mailUserPassword EMAIL_TRANSPORT_DEFAULT_TLS = true PASSBOLT_SSL_FORCE = false weboldal valid\u00e1l\u00e1s 1 docker run -it --name letsencrypt -v /usr/share/nginx/html/.well-known/:/var/www/html/.well-known -v /etc/letsencrypt/:/etc/letsencrypt --entrypoint sh --rm certbot/certbot dockeren bel\u00fcli parancs 1 certbot certonly --no-bootstrap --webroot -w /var/www/html/ -d passbolt.keikami.tk --non-interactive --agree-tos --email m.peti@irdmeg.hu kulcsok el\u00e9r\u00e9si hely 1 2 /etc/letsencrypt/live/passbolt.keikami.tk/privkey.pem /etc/letsencrypt/live/passbolt.keikami.tk/fullchain.pem nginx telep\u00edt\u00e9se \u00e9s ind\u00edt\u00e1sa 1 apt install nginx 1 service nginx start ehhez le\u00e1ll\u00edtjuk az nginx-et 1 service nginx stop 1 nano /etc/nginx/sites-enabled/default tartalm\u00e1t cser\u00e9lj\u00fck, ip-t cser\u00e9lni 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 server { listen 94 .237.92.239:80 default_server ; server_name passbolt.keikami.tk ; client_max_body_size 10m ; location /.well-known/ { root /usr/share/nginx/html/ ; } location / { proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; proxy_set_header X-Forwarded-Proto $scheme ; proxy_set_header X-Real-IP $remote_addr ; proxy_set_header Host $http_host ; proxy_pass http://127.0.0.1:80 ; proxy_redirect off ; } } server { listen 94 .237.92.239:443 default ssl ; server_name passbolt.keikami.tk ; client_max_body_size 10m ; ssl_certificate_key /etc/letsencrypt/live/passbolt.keikami.tk/privkey.pem ; ssl_certificate /etc/letsencrypt/live/passbolt.keikami.tk/fullchain.pem ; location / { proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; proxy_set_header X-Forwarded-Proto $scheme ; proxy_set_header X-Real-IP $remote_addr ; proxy_set_header Host $http_host ; proxy_pass http://127.0.0.1:80 ; proxy_redirect off ; } } ellen\u0151rizz\u00fck h nincs e hiba, majd ism\u00e9t ind\u00edtjuk az nginx-et 1 nginx -t 1 service nginx start plusz ellen\u0151rz\u00e9s, de ezt nem musz\u00e1j 1 ifconfig ha nem \u00e1ll\u00edtottuk le az nginx-et a config cser\u00e9j\u00e9hez 1 service nginx reload","title":"passbolt"},{"location":"install/passbolt/#passbolt","text":"","title":"passbolt"},{"location":"install/passbolt/#docker-docker-compose-install","text":"","title":"docker &amp; docker compose install"},{"location":"install/passbolt/#kerte","text":"1 apt install rng-tools","title":"k\u00e9rte"},{"location":"install/passbolt/#passbolt-install-utmutato-mas-kep-lett-megoldva","text":"","title":"passbolt install utmutat\u00f3, m\u00e1s k\u00e9p lett megoldva"},{"location":"install/passbolt/#github-repobol-letolto-link","text":"","title":"github repob\u00f3l let\u00f6lt\u0151 link"},{"location":"install/passbolt/#szerkesszuk-a-docker-composeyml-t-fakesmtp-hozza-adasa","text":"passbolt r\u00e9szn\u00e9l: 1 2 3 depends_on: - db - fakesmtp bel\u00fclre mutassanak a portok 1 2 3 ports: - \"127.0.0.1:80:80\" - \"127.0.0.1:443:443\" fakesmtp image, volume, port megad\u00e1sa 1 2 3 4 5 6 fakesmtp : image : munkyboy / fakesmtp volumes : - /tmp/fakemail:/var/ mail ports : - \"2525:25\"","title":"szerkessz\u00fck a docker-compose.yml-t, fakesmtp hozz\u00e1 ad\u00e1sa"},{"location":"install/passbolt/#szerkesszuk-az-envpassboltenv-et","text":"email k\u00fcld\u0151 r\u00e9sszel lett b\u0151v\u00edtve 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 APP_FULL_BASE_URL = https://passbolt.keikami.tk # Database settings DATASOURCES_DEFAULT_HOST = db DATASOURCES_DEFAULT_USERNAME = passbolt DATASOURCES_DEFAULT_PASSWORD = P4ssb0lt DATASOURCES_DEFAULT_DATABASE = passbolt DATASOURCES_DEFAULT_PORT = 3306 DATASOURCES_QUOTE_IDENTIFIER = true # Registration PASSBOLT_REGISTRATION_PUBLIC = true EMAIL_TRANSPORT_DEFAULT_HOST = fakesmtp # EMAIL_TRANSPORT_DEFAULT_USERNAME=mailUser@mydomain.com EMAIL_DEFAULT_FROM = mailUser@mydomain.com # EMAIL_TRANSPORT_DEFAULT_PASSWORD=mailUserPassword EMAIL_TRANSPORT_DEFAULT_TLS = true PASSBOLT_SSL_FORCE = false","title":"szerkessz\u00fck az /env/passbolt.env-et"},{"location":"install/passbolt/#weboldal-validalas","text":"1 docker run -it --name letsencrypt -v /usr/share/nginx/html/.well-known/:/var/www/html/.well-known -v /etc/letsencrypt/:/etc/letsencrypt --entrypoint sh --rm certbot/certbot","title":"weboldal valid\u00e1l\u00e1s"},{"location":"install/passbolt/#dockeren-beluli-parancs","text":"1 certbot certonly --no-bootstrap --webroot -w /var/www/html/ -d passbolt.keikami.tk --non-interactive --agree-tos --email m.peti@irdmeg.hu","title":"dockeren bel\u00fcli parancs"},{"location":"install/passbolt/#kulcsok-eleresi-hely","text":"1 2 /etc/letsencrypt/live/passbolt.keikami.tk/privkey.pem /etc/letsencrypt/live/passbolt.keikami.tk/fullchain.pem","title":"kulcsok el\u00e9r\u00e9si hely"},{"location":"install/passbolt/#nginx-telepitese-es-inditasa","text":"1 apt install nginx 1 service nginx start","title":"nginx telep\u00edt\u00e9se \u00e9s ind\u00edt\u00e1sa"},{"location":"install/passbolt/#ehhez-leallitjuk-az-nginx-et","text":"1 service nginx stop 1 nano /etc/nginx/sites-enabled/default","title":"ehhez le\u00e1ll\u00edtjuk az nginx-et"},{"location":"install/passbolt/#tartalmat-csereljuk-ip-t-cserelni","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 server { listen 94 .237.92.239:80 default_server ; server_name passbolt.keikami.tk ; client_max_body_size 10m ; location /.well-known/ { root /usr/share/nginx/html/ ; } location / { proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; proxy_set_header X-Forwarded-Proto $scheme ; proxy_set_header X-Real-IP $remote_addr ; proxy_set_header Host $http_host ; proxy_pass http://127.0.0.1:80 ; proxy_redirect off ; } } server { listen 94 .237.92.239:443 default ssl ; server_name passbolt.keikami.tk ; client_max_body_size 10m ; ssl_certificate_key /etc/letsencrypt/live/passbolt.keikami.tk/privkey.pem ; ssl_certificate /etc/letsencrypt/live/passbolt.keikami.tk/fullchain.pem ; location / { proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; proxy_set_header X-Forwarded-Proto $scheme ; proxy_set_header X-Real-IP $remote_addr ; proxy_set_header Host $http_host ; proxy_pass http://127.0.0.1:80 ; proxy_redirect off ; } }","title":"tartalm\u00e1t cser\u00e9lj\u00fck, ip-t cser\u00e9lni"},{"location":"install/passbolt/#ellenorizzuk-h-nincs-e-hiba-majd-ismet-inditjuk-az-nginx-et","text":"1 nginx -t 1 service nginx start","title":"ellen\u0151rizz\u00fck h nincs e hiba, majd ism\u00e9t ind\u00edtjuk az nginx-et"},{"location":"install/passbolt/#plusz-ellenorzes-de-ezt-nem-muszaj","text":"1 ifconfig","title":"plusz ellen\u0151rz\u00e9s, de ezt nem musz\u00e1j"},{"location":"install/passbolt/#ha-nem-allitottuk-le-az-nginx-et-a-config-cserejehez","text":"1 service nginx reload","title":"ha nem \u00e1ll\u00edtottuk le az nginx-et a config cser\u00e9j\u00e9hez"},{"location":"install/privatebin/","text":"PrivateBin -docker run -d --restart=\"always\" --read-only -p 8080:8080 -v privatebin-data:/srv/data privatebin/nginx-fpm-alpine user privatebin; worker_processes auto; pid /var/run/nginx.pid; daemon off; events { worker_connections 1024; use epoll; } http { include /etc/nginx/mime.types; default_type application/octet-stream; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 access_log / dev / stdout ; error_log / dev / stderr error ; sendfile on ; keepalive_timeout 15 ; keepalive_disable msie6 ; keepalive_requests 100 ; tcp_nopush on ; tcp_nodelay off ; server_tokens off ; client_max_body_size 10M ; gzip on ; gzip_comp_level 5 ; gzip_min_length 512 ; gzip_buffers 4 8k ; gzip_proxied any ; gzip_vary on ; gzip_disable \"msie6\" ; gzip_types text / css text / javascript text / xml text / plain text / x-component application / javascript application / x-javascript application / json application / xml application / rss + xml application / vnd . ms-fontobject font / truetype font / opentype image / svg + xml ; server { listen 80 ; root /var/www ; index index.php index.html ; location ~* \\.(jpg|jpeg|gif|css|png|js|map|woff|woff2|ttf|svg|eot)$ { expires 30d ; access_log off ; } location ~ ^/( data | cfg | tmp ) { deny all ; } location ~* /(.*) \\ .(? : markdown | md | twig | yaml | yml | ht | htaccess | ini )$ { deny all ; } location ~ / \\ . { deny all ; } location / { try_files $uri $uri/ /index.php ; } location ~ \\ . php $ { fastcgi_index index.php ; fastcgi_pass unix : / var / run / php-fpm . sock ; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name ; include /etc/nginx/fastcgi_params ; } } } docker run --restart=always -d \\ --read-only \\ -p 80:80 \\ --hostname=privatebin \\ --name=privatebin \\ -v /root/privatebin/data:/privatebin/data \\ -v /root/privatebin/cfg:/privatebin/cfg \\ jgeusebroek/privatebin","title":"PrivateBin"},{"location":"install/privatebin/#privatebin","text":"-docker run -d --restart=\"always\" --read-only -p 8080:8080 -v privatebin-data:/srv/data privatebin/nginx-fpm-alpine user privatebin; worker_processes auto; pid /var/run/nginx.pid; daemon off; events { worker_connections 1024; use epoll; } http { include /etc/nginx/mime.types; default_type application/octet-stream; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 access_log / dev / stdout ; error_log / dev / stderr error ; sendfile on ; keepalive_timeout 15 ; keepalive_disable msie6 ; keepalive_requests 100 ; tcp_nopush on ; tcp_nodelay off ; server_tokens off ; client_max_body_size 10M ; gzip on ; gzip_comp_level 5 ; gzip_min_length 512 ; gzip_buffers 4 8k ; gzip_proxied any ; gzip_vary on ; gzip_disable \"msie6\" ; gzip_types text / css text / javascript text / xml text / plain text / x-component application / javascript application / x-javascript application / json application / xml application / rss + xml application / vnd . ms-fontobject font / truetype font / opentype image / svg + xml ; server { listen 80 ; root /var/www ; index index.php index.html ; location ~* \\.(jpg|jpeg|gif|css|png|js|map|woff|woff2|ttf|svg|eot)$ { expires 30d ; access_log off ; } location ~ ^/( data | cfg | tmp ) { deny all ; } location ~* /(.*) \\ .(? : markdown | md | twig | yaml | yml | ht | htaccess | ini )$ { deny all ; } location ~ / \\ . { deny all ; } location / { try_files $uri $uri/ /index.php ; } location ~ \\ . php $ { fastcgi_index index.php ; fastcgi_pass unix : / var / run / php-fpm . sock ; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name ; include /etc/nginx/fastcgi_params ; } } } docker run --restart=always -d \\ --read-only \\ -p 80:80 \\ --hostname=privatebin \\ --name=privatebin \\ -v /root/privatebin/data:/privatebin/data \\ -v /root/privatebin/cfg:/privatebin/cfg \\ jgeusebroek/privatebin","title":"PrivateBin"},{"location":"install/rsync/","text":"rsync passbolt, bitwarden k\u00f6lt\u00f6ztet\u00e9se rsync weblap ez mind2 esetre alkalmazand\u00f3 somekey l\u00e9trehoz\u00e1sa a forr\u00e1s szerveren haszn\u00e1latban l\u00e9v\u0151 public key belem\u00e1sol\u00e1sa chmod 600 somekey; m\u00e1sk\u00e9p s\u00edrna h nem biztons\u00e1gos command fel\u00e9p\u00edt\u00e9se: rsync : command -arvpz : command kapcsol\u00f3k --progress : mutassa h h\u00f3l j\u00e1r a f\u00e1jl \u00e1t vitel -e \"ssh : meghat\u00e1rozza, h ssh-val akarsz kapcsolodni -o StrictHostKeyChecking=no : kinyomja a kulcsal kapcsolatos y/n-t -o UserKnownHostsFile=/dev/null : a hibadatot mindent a dev/nullba \u00edr -i $HOME/.ssh/somekey \" : hol keresse \u00e9s milyen n\u00e9ven a kulcsot ~/passbolt_docker : mit m\u00e1solunk; ~ helyetesiti a hely\u00e9t most pl a root mapp\u00e1t, de ki is lehet \u00edrni root@passboltnew.keikami.tk:/root/ : hova csatlakozunk \u00e9s ott hova m\u00e1solja a kijel\u00f6lt f\u00e1jlt passboltnew.keikami.tk : ip helyet van mert van dns-felold\u00e1sunk passbolt \u00e1tk\u00f6lt\u00f6ztet\u00e9se el\u0151tte le\u00e1ll\u00edtjuk a passboltot, hib\u00e1kat okozhat ha futt\u00f3 \u00e1llapotban k\u00f6lt\u00f6ztetj\u00fck 1 docker-compose -f passbolt_docker/docker-compose.yml down a passbolt eg\u00e9sz mapp\u00e1j\u00e1t vissz\u00fck 1 rsync -arvpz --progress -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $HOME /.ssh/somekey \" ~/passbolt_docker root@passboltnew.keikami.tk:/root/ a c\u00e9l szerveren elind\u00edtjuk a docker-compost -f az\u00e9rt kell mert f\u00e1jlb\u00f3l ind\u00edtjuk; nem vagyunk a mapp\u00e1j\u00e1ban 1 docker-compose -f passbolt_docker/docker-compose.yml up ekkor let\u00f6lti a kont\u00e9nerhez imageseket ha ez sikeresen megt\u00f6rt\u00e9nt le downoljuk a docker-compost 1 docker-compose -f passbolt_docker/docker-compose.yml down ezutn\u00e1n t\u00f6r\u00f6ln\u00fcnk kell amit voljumokon l\u00e9tre hozott mag\u00e1nak adatb\u00e1zis adatokat ezt az\u00e9rt kell mert a ymlben benne van h mag\u00e1nak hozza ezeket l\u00e9tre ha nem \u00edgy lenne bes\u00edrna h m\u00e1r ott van, de \u00edgy nem pr\u00f3bl\u00e9ma ha fel\u00fcl \u00edrjuk, lecser\u00e9lj\u00f6k \u0151ket. ymlben a volumes deklar\u00e1l\u00e1s jelen esetben \u00edgy n\u00e9zett ki 1 2 3 4 volumes : database_volume : gpg_volume : images_volume : ezzel bele l\u00e9p\u00fcnk minden mapp\u00e1ba amit a /var/lib/docker/volumes/ tartalmaz, majd azokban t\u00f6r\u00f6li a _data-t tartalmaz\u00f3 f\u00e1jlokat \u00e9s azok tartalm\u00e1t 1 rm -rf */_data/* \u00e1t m\u00e1soljuk a sz\u00fcks\u00e9ges adatb\u00e1zis adatokat 1 rsync -arvpz --progress -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $HOME /.ssh/somekey \" /var/lib/docker/volumes/passbolt* root@passboltnew.keikami.tk:/var/lib/docker/volumes/ a weblap valid\u00e1l\u00e1shoz sz\u00fcks\u00e9g volt nginx-re \u00edgy azt is \u00e1t m\u00e1soljuk 1 rsync -arvpz --progress -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $HOME /.ssh/somekey \" /etc/nginx/* root@passboltnew.keikami.tk:/etc/nginx/ valamint a tanus\u00edtv\u00e1nyokat is amit a letsencrypt gener\u00e1lt 1 rsync -arvpz --progress -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $HOME /.ssh/somekey \" /etc/letsencrypt/* root@passboltnew.keikami.tk:/etc/letsencrypt/ majd a c\u00e9l g\u00e9pen telep\u00edtj\u00fck, majd el is ind\u00edtjuk azt 1 apt install nginx 1 service nginx start v\u00e9g\u00fcl a docker-compose up-ot ism\u00e9t kiadjuk 1 docker-compose -f passbolt_docker/docker-compose.yml up BITWARDEN k\u00f6lt\u00f6ztet\u00e9se El\u0151sz\u0151r is ezt is le kell \u00e1ll\u00edtani 1 docker-compose down itt egyszer\u0171bb a helyzet mert a voljumok helye mindenhol pontosan meg van adva bwdata m\u00e1sol\u00e1s, itt ip-vel 1 rsync -arvpz --progress -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $HOME /.ssh/somekey \" ~/bwdata root@94.237.99.43:/root/ pr\u00f3b\u00e1lhatjuk ind\u00edtani, de ezt scriptb\u0151l kell le is lehet t\u00f6lteni a bitwarden.sh-t de azt is m\u00e1soltam 1 rsync -arvpz --progress -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $HOME /.ssh/somekey \" ~/bwdata ~/bitwarden.sh root@94.237.99.43:/root/ inditjuk a scriptet 1 ./bitwarden.sh start","title":"rsync"},{"location":"install/rsync/#rsync","text":"","title":"rsync"},{"location":"install/rsync/#passbolt-bitwarden-koltoztetese","text":"rsync weblap","title":"passbolt, bitwarden k\u00f6lt\u00f6ztet\u00e9se"},{"location":"install/rsync/#ez-mind2-esetre-alkalmazando","text":"somekey l\u00e9trehoz\u00e1sa a forr\u00e1s szerveren haszn\u00e1latban l\u00e9v\u0151 public key belem\u00e1sol\u00e1sa chmod 600 somekey; m\u00e1sk\u00e9p s\u00edrna h nem biztons\u00e1gos","title":"ez mind2 esetre alkalmazand\u00f3"},{"location":"install/rsync/#command-felepitese","text":"rsync : command -arvpz : command kapcsol\u00f3k --progress : mutassa h h\u00f3l j\u00e1r a f\u00e1jl \u00e1t vitel -e \"ssh : meghat\u00e1rozza, h ssh-val akarsz kapcsolodni -o StrictHostKeyChecking=no : kinyomja a kulcsal kapcsolatos y/n-t -o UserKnownHostsFile=/dev/null : a hibadatot mindent a dev/nullba \u00edr -i $HOME/.ssh/somekey \" : hol keresse \u00e9s milyen n\u00e9ven a kulcsot ~/passbolt_docker : mit m\u00e1solunk; ~ helyetesiti a hely\u00e9t most pl a root mapp\u00e1t, de ki is lehet \u00edrni root@passboltnew.keikami.tk:/root/ : hova csatlakozunk \u00e9s ott hova m\u00e1solja a kijel\u00f6lt f\u00e1jlt passboltnew.keikami.tk : ip helyet van mert van dns-felold\u00e1sunk","title":"command fel\u00e9p\u00edt\u00e9se:"},{"location":"install/rsync/#passbolt-atkoltoztetese","text":"","title":"passbolt \u00e1tk\u00f6lt\u00f6ztet\u00e9se"},{"location":"install/rsync/#elotte-leallitjuk-a-passboltot-hibakat-okozhat-ha-futto-allapotban-koltoztetjuk","text":"1 docker-compose -f passbolt_docker/docker-compose.yml down","title":"el\u0151tte le\u00e1ll\u00edtjuk a passboltot, hib\u00e1kat okozhat ha futt\u00f3 \u00e1llapotban k\u00f6lt\u00f6ztetj\u00fck"},{"location":"install/rsync/#a-passbolt-egesz-mappajat-visszuk","text":"1 rsync -arvpz --progress -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $HOME /.ssh/somekey \" ~/passbolt_docker root@passboltnew.keikami.tk:/root/","title":"a passbolt eg\u00e9sz mapp\u00e1j\u00e1t vissz\u00fck"},{"location":"install/rsync/#a-cel-szerveren-elinditjuk-a-docker-compost","text":"","title":"a c\u00e9l szerveren elind\u00edtjuk a docker-compost"},{"location":"install/rsync/#-f-azert-kell-mert-fajlbol-inditjuk-nem-vagyunk-a-mappajaban","text":"1 docker-compose -f passbolt_docker/docker-compose.yml up","title":"-f az\u00e9rt kell mert f\u00e1jlb\u00f3l ind\u00edtjuk; nem vagyunk a mapp\u00e1j\u00e1ban"},{"location":"install/rsync/#ekkor-letolti-a-kontenerhez-imageseket","text":"","title":"ekkor let\u00f6lti a kont\u00e9nerhez imageseket"},{"location":"install/rsync/#ha-ez-sikeresen-megtortent-le-downoljuk-a-docker-compost","text":"1 docker-compose -f passbolt_docker/docker-compose.yml down","title":"ha ez sikeresen megt\u00f6rt\u00e9nt le downoljuk a docker-compost"},{"location":"install/rsync/#ezutnan-torolnunk-kell-amit-voljumokon-letre-hozott-maganak-adatbazis-adatokat","text":"","title":"ezutn\u00e1n t\u00f6r\u00f6ln\u00fcnk kell amit voljumokon l\u00e9tre hozott mag\u00e1nak adatb\u00e1zis adatokat"},{"location":"install/rsync/#ezt-azert-kell-mert-a-ymlben-benne-van-h-maganak-hozza-ezeket-letre","text":"","title":"ezt az\u00e9rt kell mert a ymlben benne van h mag\u00e1nak hozza ezeket l\u00e9tre"},{"location":"install/rsync/#ha-nem-igy-lenne-besirna-h-mar-ott-van-de-igy-nem-problema-ha-felul-irjuk-lecsereljok-oket","text":"","title":"ha nem \u00edgy lenne bes\u00edrna h m\u00e1r ott van, de \u00edgy nem pr\u00f3bl\u00e9ma ha fel\u00fcl \u00edrjuk, lecser\u00e9lj\u00f6k \u0151ket."},{"location":"install/rsync/#ymlben-a-volumes-deklaralas-jelen-esetben-igy-nezett-ki","text":"1 2 3 4 volumes : database_volume : gpg_volume : images_volume :","title":"ymlben a volumes deklar\u00e1l\u00e1s jelen esetben \u00edgy n\u00e9zett ki"},{"location":"install/rsync/#ezzel-bele-lepunk-minden-mappaba-amit-a-varlibdockervolumes-tartalmaz-majd-azokban-toroli-a-_data-t-tartalmazo-fajlokat-es-azok-tartalmat","text":"1 rm -rf */_data/*","title":"ezzel bele l\u00e9p\u00fcnk minden mapp\u00e1ba amit a /var/lib/docker/volumes/ tartalmaz, majd azokban t\u00f6r\u00f6li a _data-t tartalmaz\u00f3 f\u00e1jlokat \u00e9s azok tartalm\u00e1t"},{"location":"install/rsync/#at-masoljuk-a-szukseges-adatbazis-adatokat","text":"1 rsync -arvpz --progress -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $HOME /.ssh/somekey \" /var/lib/docker/volumes/passbolt* root@passboltnew.keikami.tk:/var/lib/docker/volumes/","title":"\u00e1t m\u00e1soljuk a sz\u00fcks\u00e9ges adatb\u00e1zis adatokat"},{"location":"install/rsync/#a-weblap-validalashoz-szukseg-volt-nginx-re-igy-azt-is-at-masoljuk","text":"1 rsync -arvpz --progress -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $HOME /.ssh/somekey \" /etc/nginx/* root@passboltnew.keikami.tk:/etc/nginx/","title":"a weblap valid\u00e1l\u00e1shoz sz\u00fcks\u00e9g volt nginx-re \u00edgy azt is \u00e1t m\u00e1soljuk"},{"location":"install/rsync/#valamint-a-tanusitvanyokat-is-amit-a-letsencrypt-generalt","text":"1 rsync -arvpz --progress -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $HOME /.ssh/somekey \" /etc/letsencrypt/* root@passboltnew.keikami.tk:/etc/letsencrypt/","title":"valamint a tanus\u00edtv\u00e1nyokat is amit a letsencrypt gener\u00e1lt"},{"location":"install/rsync/#majd-a-cel-gepen-telepitjuk-majd-el-is-inditjuk-azt","text":"1 apt install nginx 1 service nginx start","title":"majd a c\u00e9l g\u00e9pen telep\u00edtj\u00fck, majd el is ind\u00edtjuk azt"},{"location":"install/rsync/#vegul-a-docker-compose-up-ot-ismet-kiadjuk","text":"1 docker-compose -f passbolt_docker/docker-compose.yml up","title":"v\u00e9g\u00fcl a docker-compose up-ot ism\u00e9t kiadjuk"},{"location":"install/rsync/#bitwarden-koltoztetese","text":"","title":"BITWARDEN k\u00f6lt\u00f6ztet\u00e9se"},{"location":"install/rsync/#eloszor-is-ezt-is-le-kell-allitani","text":"1 docker-compose down","title":"El\u0151sz\u0151r is ezt is le kell \u00e1ll\u00edtani"},{"location":"install/rsync/#itt-egyszerubb-a-helyzet-mert-a-voljumok-helye-mindenhol-pontosan-meg-van-adva","text":"","title":"itt egyszer\u0171bb a helyzet mert a voljumok helye mindenhol pontosan meg van adva"},{"location":"install/rsync/#bwdata-masolas-itt-ip-vel","text":"1 rsync -arvpz --progress -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $HOME /.ssh/somekey \" ~/bwdata root@94.237.99.43:/root/","title":"bwdata m\u00e1sol\u00e1s, itt ip-vel"},{"location":"install/rsync/#probalhatjuk-inditani-de-ezt-scriptbol-kell","text":"","title":"pr\u00f3b\u00e1lhatjuk ind\u00edtani, de ezt scriptb\u0151l kell"},{"location":"install/rsync/#le-is-lehet-tolteni-a-bitwardensh-t-de-azt-is-masoltam","text":"1 rsync -arvpz --progress -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $HOME /.ssh/somekey \" ~/bwdata ~/bitwarden.sh root@94.237.99.43:/root/","title":"le is lehet t\u00f6lteni a bitwarden.sh-t de azt is m\u00e1soltam"},{"location":"install/rsync/#inditjuk-a-scriptet","text":"1 ./bitwarden.sh start","title":"inditjuk a scriptet"},{"location":"install/vsftpd/","text":"vsftpd Vftpd install tutrial Install & start 1 2 3 apt-get update apt-get install apt-get install vsftpd -y 1 2 systemctl start vsftpd systemctl enable vsftpd Creat user, write password. 1 adduser vsftp creat dir. add grupp & chmod 1 2 3 mkdir /home/vsftp/ftp chown nobody:nogroup /home/vsftp/ftp chmod a-w /home/vsftp/ftp creat dir. where files can be upload and give ownership to vstp user 1 2 mkdir /home/vsftp/ftp/test chown vsftp:vsftp /home/vsftp/ftp/test First, create a backup of original config file 1 cp /etc/vsftpd.conf /etc/vsftpd.conf.bak 1 nano /etc/vsftpd.conf quick content deletion 1 > /etc/vsftpd.conf vsftpd.conf: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 listen = NO listen_ipv6 = YES anonymous_enable = NO local_enable = YES write_enable = YES local_umask = 022 dirmessage_enable = YES use_localtime = YES xferlog_enable = YES connect_from_port_20 = YES chroot_local_user = YES secure_chroot_dir = /var/run/vsftpd/empty pam_service_name = vsftpd pasv_enable = Yes pasv_min_port = 10000 pasv_max_port = 11000 user_sub_token = $USER local_root = /home/ $USER /ftp userlist_enable = YES userlist_file = /etc/vsftpd.userlist userlist_deny = NO Add the use for the vftpd userlist 1 nano /etc/vsftpd.userlist vftpd restart 1 systemctl restart vsftpd Install vsftpd, MySQL And phpMyAdmin Need root privileges, use sudo or 1 sudo su 1 apt-get -y install vsftpd libpam-mysql mysql-server mysql-client phpmyadmin libpam-ldap You will be asked the following questions: New password for the MySQL \"root\" user: <-- yourrootsqlpassword Repeat password for the MySQL \"root\" user: <-- yourrootsqlpassword LDAP server Uniform Resource Identifier: <-- ENTER Distinguished name of the search base: <-- ENTER LDAP version to use: <-- 3 Make local root Database admin: <-- Yes Does the LDAP database require login? <-- No LDAP account for root: <-- ENTER LDAP root account password: <-- ldaprootpw Web server to configure automatically: <-- Select the option: apache2 Configure database for phpmyadmin with dbconfig-common? <-- Yes Password of the database's administrative user: <-- Enter the MariaDB root password MySQL application password for phpmyadmin: <-- Press enter, - apt will create a random password automatically. Create the MySQL Database for vsftpd 1 mysql --defaults-file = /etc/mysql/debian.cnf 1 2 3 4 5 6 CREATE DATABASE vsftpd ; nem m\u0171k\u00f6d\u00f6tt ez ut\u00e1n GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP ON vsftpd.* TO 'vsftpd' @ 'localhost' IDENTIFIED BY 'ftpdpass' ; GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP ON vsftpd.* TO 'vsftpd' @ 'localhost.localdomain' IDENTIFIED BY 'ftpdpass' ; FLUSH PRIVILEGES ; eddig 1 USE vsftpd ; 1 2 3 4 5 6 7 8 CREATE TABLE ` accounts ` ( ` id ` INT NOT NULL AUTO_INCREMENT PRIMARY KEY , ` username ` VARCHAR ( 30 ) NOT NULL , ` pass ` VARCHAR ( 50 ) NOT NULL , UNIQUE ( ` username ` ) ) ; 1 quit ; Configure vsftpd 1 useradd --home /home/vsftpd --gid nogroup -m --shell /bin/false vsftpd 1 2 3 cp /etc/vsftpd.conf /etc/vsftpd.conf_orig cat /dev/null > /etc/vsftpd.conf nano /etc/vsftpd.conf Example conf.: Readme for conf. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 listen = YES anonymous_enable = NO local_enable = YES write_enable = YES local_umask = 022 dirmessage_enable = YES xferlog_enable = YES connect_from_port_20 = YES nopriv_user = vsftpd chroot_local_user = YES secure_chroot_dir = /var/run/vsftpd pam_service_name = vsftpd rsa_cert_file = /etc/ssl/certs/vsftpd.pem guest_enable = YES guest_username = vsftpd local_root = /home/vsftpd/ $USER user_sub_token = $USER virtual_use_local_privs = YES user_config_dir = /etc/vsftpd_user_conf With the user_config_dir option you can specify a directory for per-user configuration files that override parts of the global settings. This is totally optional and up to you if you want to use this feature. However, we should create that directory now: 1 mkdir /etc/vsftpd_user_conf Now we must configure PAM so that it uses the MySQL database to authenticate our virtual FTP users instead of /etc/passwd and /etc/shadow. The PAM configuration for vsftpd is in /etc/pam.d/vsftpd. We make a backup of the original file and create a new one like this: 1 2 3 cp /etc/pam.d/vsftpd /etc/pam.d/vsftpd_orig cat /dev/null > /etc/pam.d/vsftpd nano /etc/pam.d/vsftpd 1 2 auth required pam_mysql.so user = vsftpd passwd = ftpdpass host = localhost db = vsftpd table = accounts usercolumn = username passwdcolumn = pass crypt = 2 account required pam_mysql.so user = vsftpd passwd = ftpdpass host = localhost db = vsftpd table = accounts usercolumn = username passwdcolumn = pass crypt = 2 Afterwards, we restart vsftpd: 1 service vsftpd restart Create the first Virtual User 1 mysql --defaults-file = /etc/mysql/debian.cnf 1 USE vsftpd ; Now we create the virtual user testuser with the password secret (which will be stored encrypted using MySQL's PASSWORD function): 1 2 INSERT INTO accounts ( username, pass ) VALUES ( 'testuser' , PASSWORD ( 'secret' )) ; quit ; testuser's homedir is /home/vsftpd/testuser; unfortunately, vsftpd doesn't create that directory automatically if it doesn't exist. Therefore, we create it manually now and make it owned by the vsftpd user and the nogroup group: 1 2 3 mkdir /home/vsftpd/testuser chown vsftpd:nogroup /home/vsftpd/testuser chmod a-w /home/vsftpd/testuser SFTP install ssh server 1 apt-get install openssh-server kikomentelni a k\u00f6vetkez\u0151 sort: 1 #subsystem sftp /usr/libexec/openssh/sftp-server 1 nano /etc/ssh/sshd_config hozz\u00e1 adni m\u00e9g sorokat: 1 2 3 4 5 6 Subsystem sftp internal-sftp Match group sftp ChrootDirectory %h X11Forwarding no AllowTcpForwarding no ForceCommand internal-sftp Save and exit that file. Quick explanations on the settings above +ChrootDirectory you can use /home/%u or %h as in ChrootDirectory %h This is the pattern for SSHD to know what directories should be locked down. +TCP forwarding allows one to use SSH to set up a VPN which they can use to tunnel into a network. Someone can bypass firewall as a result, this can be a security risk, so it should be disabled unless it is explicitly required. +X11 forwarding is useful if you have a GUI for linux, otherwise leave disabled The rest you can find more information at http://man.openbsd.org/sshd_config.5 Next we\u2019ll give some permission, for ChrootDirectory %h or ChrootDirectory /home/%u to work the home directory and its user directory must be owned by root user. This prevents the user from wandering around the server. 1 2 3 4 5 chown root:root /home/vsftp chmod 755 /home chmod 755 /home/vsftp chown vsftp:ftpusersonlygroup /home/vsftp/* chmod 775 -R /home/vsftp/* creat new group 1 sudo addgroup sftp new user add the group 1 useradd -m sftpuser -g sftp set passwd 1 passwd sftpuser 1 chmod 700 /home/sftpuser/ edit passwd file 1 nano /etc/passwd change sftpuser dir to vsftp dir in location 1 sftpuser:x:1001:1001::/home/vsftp:/bin/sh restart vsftpd 1 systemctl restart vsftpd teszt 1 sftp sftpuser@bels\u0151ipc\u00edm","title":"Vsftpd"},{"location":"install/vsftpd/#vsftpd","text":"Vftpd install tutrial Install & start 1 2 3 apt-get update apt-get install apt-get install vsftpd -y 1 2 systemctl start vsftpd systemctl enable vsftpd Creat user, write password. 1 adduser vsftp creat dir. add grupp & chmod 1 2 3 mkdir /home/vsftp/ftp chown nobody:nogroup /home/vsftp/ftp chmod a-w /home/vsftp/ftp creat dir. where files can be upload and give ownership to vstp user 1 2 mkdir /home/vsftp/ftp/test chown vsftp:vsftp /home/vsftp/ftp/test First, create a backup of original config file 1 cp /etc/vsftpd.conf /etc/vsftpd.conf.bak 1 nano /etc/vsftpd.conf quick content deletion 1 > /etc/vsftpd.conf vsftpd.conf: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 listen = NO listen_ipv6 = YES anonymous_enable = NO local_enable = YES write_enable = YES local_umask = 022 dirmessage_enable = YES use_localtime = YES xferlog_enable = YES connect_from_port_20 = YES chroot_local_user = YES secure_chroot_dir = /var/run/vsftpd/empty pam_service_name = vsftpd pasv_enable = Yes pasv_min_port = 10000 pasv_max_port = 11000 user_sub_token = $USER local_root = /home/ $USER /ftp userlist_enable = YES userlist_file = /etc/vsftpd.userlist userlist_deny = NO Add the use for the vftpd userlist 1 nano /etc/vsftpd.userlist vftpd restart 1 systemctl restart vsftpd","title":"vsftpd"},{"location":"install/vsftpd/#install-vsftpd-mysql-and-phpmyadmin","text":"Need root privileges, use sudo or 1 sudo su 1 apt-get -y install vsftpd libpam-mysql mysql-server mysql-client phpmyadmin libpam-ldap You will be asked the following questions: New password for the MySQL \"root\" user: <-- yourrootsqlpassword Repeat password for the MySQL \"root\" user: <-- yourrootsqlpassword LDAP server Uniform Resource Identifier: <-- ENTER Distinguished name of the search base: <-- ENTER LDAP version to use: <-- 3 Make local root Database admin: <-- Yes Does the LDAP database require login? <-- No LDAP account for root: <-- ENTER LDAP root account password: <-- ldaprootpw Web server to configure automatically: <-- Select the option: apache2 Configure database for phpmyadmin with dbconfig-common? <-- Yes Password of the database's administrative user: <-- Enter the MariaDB root password MySQL application password for phpmyadmin: <-- Press enter, - apt will create a random password automatically. Create the MySQL Database for vsftpd 1 mysql --defaults-file = /etc/mysql/debian.cnf 1 2 3 4 5 6 CREATE DATABASE vsftpd ; nem m\u0171k\u00f6d\u00f6tt ez ut\u00e1n GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP ON vsftpd.* TO 'vsftpd' @ 'localhost' IDENTIFIED BY 'ftpdpass' ; GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP ON vsftpd.* TO 'vsftpd' @ 'localhost.localdomain' IDENTIFIED BY 'ftpdpass' ; FLUSH PRIVILEGES ; eddig 1 USE vsftpd ; 1 2 3 4 5 6 7 8 CREATE TABLE ` accounts ` ( ` id ` INT NOT NULL AUTO_INCREMENT PRIMARY KEY , ` username ` VARCHAR ( 30 ) NOT NULL , ` pass ` VARCHAR ( 50 ) NOT NULL , UNIQUE ( ` username ` ) ) ; 1 quit ; Configure vsftpd 1 useradd --home /home/vsftpd --gid nogroup -m --shell /bin/false vsftpd 1 2 3 cp /etc/vsftpd.conf /etc/vsftpd.conf_orig cat /dev/null > /etc/vsftpd.conf nano /etc/vsftpd.conf Example conf.: Readme for conf. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 listen = YES anonymous_enable = NO local_enable = YES write_enable = YES local_umask = 022 dirmessage_enable = YES xferlog_enable = YES connect_from_port_20 = YES nopriv_user = vsftpd chroot_local_user = YES secure_chroot_dir = /var/run/vsftpd pam_service_name = vsftpd rsa_cert_file = /etc/ssl/certs/vsftpd.pem guest_enable = YES guest_username = vsftpd local_root = /home/vsftpd/ $USER user_sub_token = $USER virtual_use_local_privs = YES user_config_dir = /etc/vsftpd_user_conf With the user_config_dir option you can specify a directory for per-user configuration files that override parts of the global settings. This is totally optional and up to you if you want to use this feature. However, we should create that directory now: 1 mkdir /etc/vsftpd_user_conf Now we must configure PAM so that it uses the MySQL database to authenticate our virtual FTP users instead of /etc/passwd and /etc/shadow. The PAM configuration for vsftpd is in /etc/pam.d/vsftpd. We make a backup of the original file and create a new one like this: 1 2 3 cp /etc/pam.d/vsftpd /etc/pam.d/vsftpd_orig cat /dev/null > /etc/pam.d/vsftpd nano /etc/pam.d/vsftpd 1 2 auth required pam_mysql.so user = vsftpd passwd = ftpdpass host = localhost db = vsftpd table = accounts usercolumn = username passwdcolumn = pass crypt = 2 account required pam_mysql.so user = vsftpd passwd = ftpdpass host = localhost db = vsftpd table = accounts usercolumn = username passwdcolumn = pass crypt = 2 Afterwards, we restart vsftpd: 1 service vsftpd restart Create the first Virtual User 1 mysql --defaults-file = /etc/mysql/debian.cnf 1 USE vsftpd ; Now we create the virtual user testuser with the password secret (which will be stored encrypted using MySQL's PASSWORD function): 1 2 INSERT INTO accounts ( username, pass ) VALUES ( 'testuser' , PASSWORD ( 'secret' )) ; quit ; testuser's homedir is /home/vsftpd/testuser; unfortunately, vsftpd doesn't create that directory automatically if it doesn't exist. Therefore, we create it manually now and make it owned by the vsftpd user and the nogroup group: 1 2 3 mkdir /home/vsftpd/testuser chown vsftpd:nogroup /home/vsftpd/testuser chmod a-w /home/vsftpd/testuser","title":"Install vsftpd, MySQL And phpMyAdmin"},{"location":"install/vsftpd/#sftp","text":"install ssh server 1 apt-get install openssh-server kikomentelni a k\u00f6vetkez\u0151 sort: 1 #subsystem sftp /usr/libexec/openssh/sftp-server 1 nano /etc/ssh/sshd_config hozz\u00e1 adni m\u00e9g sorokat: 1 2 3 4 5 6 Subsystem sftp internal-sftp Match group sftp ChrootDirectory %h X11Forwarding no AllowTcpForwarding no ForceCommand internal-sftp Save and exit that file. Quick explanations on the settings above +ChrootDirectory you can use /home/%u or %h as in ChrootDirectory %h This is the pattern for SSHD to know what directories should be locked down. +TCP forwarding allows one to use SSH to set up a VPN which they can use to tunnel into a network. Someone can bypass firewall as a result, this can be a security risk, so it should be disabled unless it is explicitly required. +X11 forwarding is useful if you have a GUI for linux, otherwise leave disabled The rest you can find more information at http://man.openbsd.org/sshd_config.5 Next we\u2019ll give some permission, for ChrootDirectory %h or ChrootDirectory /home/%u to work the home directory and its user directory must be owned by root user. This prevents the user from wandering around the server. 1 2 3 4 5 chown root:root /home/vsftp chmod 755 /home chmod 755 /home/vsftp chown vsftp:ftpusersonlygroup /home/vsftp/* chmod 775 -R /home/vsftp/* creat new group 1 sudo addgroup sftp new user add the group 1 useradd -m sftpuser -g sftp set passwd 1 passwd sftpuser 1 chmod 700 /home/sftpuser/ edit passwd file 1 nano /etc/passwd change sftpuser dir to vsftp dir in location 1 sftpuser:x:1001:1001::/home/vsftp:/bin/sh restart vsftpd 1 systemctl restart vsftpd teszt 1 sftp sftpuser@bels\u0151ipc\u00edm","title":"SFTP"},{"location":"provider/upcloud/","text":"upcload run.sh -curl command 1 curl -X POST -H \"Authorization: Basic ***TOKEN***\" -H \"Content-Type: application/json\" -d @./servercreate.json https://api.upcloud.com/1.3/server -servercreate.json 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 { \"server\" : { \"user_data\" : \"#!/bin/bash\\napt-get update\\napt-get install -y \\\\\\n apt-transport-https \\\\\\n ca-certificates \\\\\\n curl \\\\\\n gnupg-agent \\\\\\n software-properties-common\\n\\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\\nadd-apt-repository \\\\\\n \\\"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\\\\n $( lsb_release -cs ) \\\\\\n stable\\\"\\napt-get install docker-ce -y\\ncurl -L \\\"https://github.com/docker/compose/releases/download/1.26.1/docker-compose- $( uname -s ) - $( uname -m ) \\\" -o /usr/local/bin/docker-compose\\nchmod +x /usr/local/bin/docker-compose\" , \"zone\" : \"fi-hel1\" , \"title\" : \"My Debian server\" , \"hostname\" : \"debian.example.com\" , \"plan\" : \"1xCPU-1GB\" , \"storage_devices\" : { \"storage_device\" : [ { \"action\" : \"clone\" , \"storage\" : \"01000000-0000-4000-8000-000030080200\" , \"title\" : \"Ubuntu Server 18.04 LTS (Bionic Beaver)\" , \"size\" : 25 , \"tier\" : \"maxiops\" } ] } , \"networking\" : { \"interfaces\" : { \"interface\" : [ { \"ip_addresses\" : { \"ip_address\" : [{ \"family\" : \"IPv4\" }] } , \"type\" : \"public\" } , { \"ip_addresses\" : { \"ip_address\" : [{ \"family\" : \"IPv4\" }] } , \"type\" : \"utility\" } ] } } , \"login_user\" : { \"username\" : \"upclouduser\" , \"ssh_keys\" : { \"ssh_key\" : [ \"SSH-PUB-KEY-1\" , \"SSH-PUB-KEY-2\" ] } } } }","title":"Upcloud"},{"location":"provider/upcloud/#upcload","text":"","title":"upcload"},{"location":"provider/upcloud/#runsh","text":"-curl command 1 curl -X POST -H \"Authorization: Basic ***TOKEN***\" -H \"Content-Type: application/json\" -d @./servercreate.json https://api.upcloud.com/1.3/server -servercreate.json 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 { \"server\" : { \"user_data\" : \"#!/bin/bash\\napt-get update\\napt-get install -y \\\\\\n apt-transport-https \\\\\\n ca-certificates \\\\\\n curl \\\\\\n gnupg-agent \\\\\\n software-properties-common\\n\\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\\nadd-apt-repository \\\\\\n \\\"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\\\\n $( lsb_release -cs ) \\\\\\n stable\\\"\\napt-get install docker-ce -y\\ncurl -L \\\"https://github.com/docker/compose/releases/download/1.26.1/docker-compose- $( uname -s ) - $( uname -m ) \\\" -o /usr/local/bin/docker-compose\\nchmod +x /usr/local/bin/docker-compose\" , \"zone\" : \"fi-hel1\" , \"title\" : \"My Debian server\" , \"hostname\" : \"debian.example.com\" , \"plan\" : \"1xCPU-1GB\" , \"storage_devices\" : { \"storage_device\" : [ { \"action\" : \"clone\" , \"storage\" : \"01000000-0000-4000-8000-000030080200\" , \"title\" : \"Ubuntu Server 18.04 LTS (Bionic Beaver)\" , \"size\" : 25 , \"tier\" : \"maxiops\" } ] } , \"networking\" : { \"interfaces\" : { \"interface\" : [ { \"ip_addresses\" : { \"ip_address\" : [{ \"family\" : \"IPv4\" }] } , \"type\" : \"public\" } , { \"ip_addresses\" : { \"ip_address\" : [{ \"family\" : \"IPv4\" }] } , \"type\" : \"utility\" } ] } } , \"login_user\" : { \"username\" : \"upclouduser\" , \"ssh_keys\" : { \"ssh_key\" : [ \"SSH-PUB-KEY-1\" , \"SSH-PUB-KEY-2\" ] } } } }","title":"run.sh"},{"location":"scripts/apachebackup/","text":"apachebackup 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #!/bin/bash TIMESTAMP = $( date + \"%Y%m%d%H%M%S\" ) BACKUP_DIR = \"/home/ubuntu/backup/ $TIMESTAMP \" MYSQL_USER = \"root\" MYSQL = /usr/bin/mysql MYSQL_PASSWORD = \"titok123\" MYSQLDUMP = /usr/bin/mysqldump mkdir -p \" $BACKUP_DIR \" databases = ` $MYSQL --user = $MYSQL_USER -p $MYSQL_PASSWORD -e \"SHOW DATABASES;\" | grep -Ev \"(Database|information_schema|performance_schema)\" ` for db in $databases ; do $MYSQLDUMP --force --opt --user = $MYSQL_USER -p $MYSQL_PASSWORD --databases $db | gzip > \" $BACKUP_DIR /mysql/ $db .gz\" done","title":"apachebackup"},{"location":"scripts/apachebackup/#apachebackup","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #!/bin/bash TIMESTAMP = $( date + \"%Y%m%d%H%M%S\" ) BACKUP_DIR = \"/home/ubuntu/backup/ $TIMESTAMP \" MYSQL_USER = \"root\" MYSQL = /usr/bin/mysql MYSQL_PASSWORD = \"titok123\" MYSQLDUMP = /usr/bin/mysqldump mkdir -p \" $BACKUP_DIR \" databases = ` $MYSQL --user = $MYSQL_USER -p $MYSQL_PASSWORD -e \"SHOW DATABASES;\" | grep -Ev \"(Database|information_schema|performance_schema)\" ` for db in $databases ; do $MYSQLDUMP --force --opt --user = $MYSQL_USER -p $MYSQL_PASSWORD --databases $db | gzip > \" $BACKUP_DIR /mysql/ $db .gz\" done","title":"apachebackup"},{"location":"scripts/backupsimple/","text":"backup simple script 1 2 3 4 5 6 7 8 #!/bin/bash BACKUPTIME = ` date +%b-%d-%y ` # hova DESTINATION = /home/ubuntu/backup/- $BACKUPTIME .tar.gz # mit SOURCEFOLDER = /var/www/wordpress/ tar -cpzf $DESTINATION $SOURCEFOLDER","title":"Backupsimple"},{"location":"scripts/backupsimple/#backup-simple-script","text":"1 2 3 4 5 6 7 8 #!/bin/bash BACKUPTIME = ` date +%b-%d-%y ` # hova DESTINATION = /home/ubuntu/backup/- $BACKUPTIME .tar.gz # mit SOURCEFOLDER = /var/www/wordpress/ tar -cpzf $DESTINATION $SOURCEFOLDER","title":"backup simple script"},{"location":"scripts/bashcommands/","text":"bash alapok ki\u00edrat\u00e1s 1 2 #!/bin/bash echo \"hello bash script\" futtat\u00e1si jog chmod +x script.sh cat-tal sz\u00f6veget lehet bek\u00e9rni cat > file.txt m\u00e9g hozz\u00e1 f\u00fczni sz\u00f6veget cat >> file.txt ki\u00edrat\u00e1s cat << kreativ sz\u00f6veg stb asd kreativ comment 1 line = # ; more line= :' word, lines until ' if if ((meghat\u00e1roz\u00e1s)) then valami elif((k\u00f6vi ha els\u0151re nem igaz)) valami else valami fi while while [meddig] do valamit l\u00e9ptet\u00e9s done for for i {0..20} /((i=0; i<5; i++)) do lehet ifet be\u00e9p\u00edteni 1 valami done car=('bmw' 'toyota' 'honda') echo \"{car[1]}\" { z\u00e1rt k\u00f6rnyezet \u00e9s az iteni v\u00e1ltoz\u00f3 k\u00fcl\u00f6n kezhelhet\u0151 } function funCheck() { returningValue=\"i love linux\" } returningValue=\"I love Mac\" echo $returningValue\u00fa funCheck echo $returningValue","title":"bash alapok"},{"location":"scripts/bashcommands/#bash-alapok","text":"","title":"bash alapok"},{"location":"scripts/bashcommands/#kiiratas","text":"1 2 #!/bin/bash echo \"hello bash script\"","title":"ki\u00edrat\u00e1s"},{"location":"scripts/bashcommands/#futtatasi-jog","text":"chmod +x script.sh","title":"futtat\u00e1si jog"},{"location":"scripts/bashcommands/#cat-tal-szoveget-lehet-bekerni","text":"cat > file.txt","title":"cat-tal sz\u00f6veget lehet bek\u00e9rni"},{"location":"scripts/bashcommands/#meg-hozza-fuzni-szoveget","text":"cat >> file.txt","title":"m\u00e9g hozz\u00e1 f\u00fczni sz\u00f6veget"},{"location":"scripts/bashcommands/#kiiratas_1","text":"cat << kreativ sz\u00f6veg stb asd kreativ","title":"ki\u00edrat\u00e1s"},{"location":"scripts/bashcommands/#comment-1-line-more-line-word-lines-until","text":"","title":"comment 1 line = # ; more line= :' word, lines until '"},{"location":"scripts/bashcommands/#if","text":"if ((meghat\u00e1roz\u00e1s)) then valami elif((k\u00f6vi ha els\u0151re nem igaz)) valami else valami fi","title":"if"},{"location":"scripts/bashcommands/#while","text":"while [meddig] do valamit l\u00e9ptet\u00e9s done","title":"while"},{"location":"scripts/bashcommands/#for","text":"for i {0..20} /((i=0; i<5; i++)) do","title":"for"},{"location":"scripts/bashcommands/#lehet-ifet-beepiteni","text":"1 valami done car=('bmw' 'toyota' 'honda') echo \"{car[1]}\"","title":"lehet ifet be\u00e9p\u00edteni"},{"location":"scripts/bashcommands/#zart-kornyezet-es-az-iteni-valtozo-kulon-kezhelheto","text":"function funCheck() { returningValue=\"i love linux\" } returningValue=\"I love Mac\" echo $returningValue\u00fa funCheck echo $returningValue","title":"{ z\u00e1rt k\u00f6rnyezet \u00e9s az iteni v\u00e1ltoz\u00f3 k\u00fcl\u00f6n kezhelhet\u0151 }"},{"location":"scripts/emailpy/","text":"emailt k\u00fcld\u0151 script run command 1 python3 test.py test.py tartalma 1 2 3 4 5 6 7 8 9 import smtplib server = smtplib.SMTP ( '127.0.0.1' , 2525 ) #Next, log in to the server server.login ( \"info@doamin.hu\" , \"PASSWORD\" ) #Send the mail msg = \"Hello DOMAIN!\" # The /n separates the message from the headers server.sendmail ( \"info@doamin.hu\" , \"XY@domain.com\" , msg )","title":"emailt k\u00fcld\u0151 script"},{"location":"scripts/emailpy/#emailt-kuldo-script","text":"","title":"emailt k\u00fcld\u0151 script"},{"location":"scripts/emailpy/#run-command","text":"1 python3 test.py","title":"run command"},{"location":"scripts/emailpy/#testpy-tartalma","text":"1 2 3 4 5 6 7 8 9 import smtplib server = smtplib.SMTP ( '127.0.0.1' , 2525 ) #Next, log in to the server server.login ( \"info@doamin.hu\" , \"PASSWORD\" ) #Send the mail msg = \"Hello DOMAIN!\" # The /n separates the message from the headers server.sendmail ( \"info@doamin.hu\" , \"XY@domain.com\" , msg )","title":"test.py tartalma"},{"location":"scripts/sorszam/","text":"sorszam 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 at /usr/local/bin/test.sh #!/bin/bash function hello (){ echo \"Create a new project: $1 \" } hello $1 echo -e \"\\nIFS megv\u00e1ltoztatva\" sorszam = 1 IFS_old = \" $IFS \" IFS = $'\\n' for i in ` ls / ` ; do echo \" ${ sorszam } . ${ i } \" let \"sorszam+=1\" done echo -e \"\\nRossz for\" sorszam = 1 IFS = \" $IFS_old \" for i in ` ls / ` ; do echo \" ${ sorszam } . ${ i } \" let \"sorszam+=1\" done echo -e \"\\nWhile\" sorszam = 1 while IFS = $'\\n' read -r i ; do echo \" ${ sorszam } . ${ i } \" let \"sorszam+=1\" done < < ( ls / ) echo -e \"\\nEgy sorban a parancs\" sorszam = 1 while read i ; do echo \" $sorszam . ${ i } \" ; let \"sorszam+=1\" ; done < < ( ls / )","title":"sorszam"},{"location":"scripts/sorszam/#sorszam","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 at /usr/local/bin/test.sh #!/bin/bash function hello (){ echo \"Create a new project: $1 \" } hello $1 echo -e \"\\nIFS megv\u00e1ltoztatva\" sorszam = 1 IFS_old = \" $IFS \" IFS = $'\\n' for i in ` ls / ` ; do echo \" ${ sorszam } . ${ i } \" let \"sorszam+=1\" done echo -e \"\\nRossz for\" sorszam = 1 IFS = \" $IFS_old \" for i in ` ls / ` ; do echo \" ${ sorszam } . ${ i } \" let \"sorszam+=1\" done echo -e \"\\nWhile\" sorszam = 1 while IFS = $'\\n' read -r i ; do echo \" ${ sorszam } . ${ i } \" let \"sorszam+=1\" done < < ( ls / ) echo -e \"\\nEgy sorban a parancs\" sorszam = 1 while read i ; do echo \" $sorszam . ${ i } \" ; let \"sorszam+=1\" ; done < < ( ls / )","title":"sorszam"},{"location":"scripts/while/","text":"!/bin/bash echo $# exit 12 i=1 while [ $i -lt 10 ] do echo $i i=$(( i + 1 )) done i=1 until [ $i -gt 10 ] do echo $i i=$(( i + 1 )) done","title":"While"},{"location":"scripts/while/#binbash","text":"echo $# exit 12 i=1 while [ $i -lt 10 ] do echo $i i=$(( i + 1 )) done i=1 until [ $i -gt 10 ] do echo $i i=$(( i + 1 )) done","title":"!/bin/bash"},{"location":"swarm/Teleport/","text":"Teleport Coudban \u00faj g\u00e9pet ind\u00edtunk a swarmon k\u00edv\u00fcl Teleport telep\u00edt\u0151 file Let\u00f6ltj\u00fck a megfelel\u0151t, jelen esetben a 64-es debi\u00e1nt 1 curl https://get.gravitational.com/teleport_4.3.2_amd64.deb Futtatjuk 1 dpkg teleport_4.3.2_amd64.deb Elind\u00edtjuk 1 teleport start User l\u00e9trehoz\u00e1sa rootk\u00e9nt 1 tctl users add keikami root L\u00e9trehoz egy regisztr\u00e1ci\u00f3s url-t, abban a bels\u0151 ip-t cser\u00e9lj\u00fck k\u00fcls\u0151re \u00e9s regisztr\u00e1ljunk. Sz\u00fcks\u00e9g lesz m\u00e9g egy telefonos appra: Google hiteles\u00edt\u0151-re QR-k\u00f3dot beolvassuk, weben megadjuk a kapott 6 tag\u00fa k\u00f3dott Kliens hozz\u00e1ad\u00e1si url cre\u00e1l\u00e1sa 1 tctl nodes add --ttl = 5m --roles = node,proxy --token = secret-value","title":"Teleport"},{"location":"swarm/Teleport/#teleport","text":"Coudban \u00faj g\u00e9pet ind\u00edtunk a swarmon k\u00edv\u00fcl Teleport telep\u00edt\u0151 file Let\u00f6ltj\u00fck a megfelel\u0151t, jelen esetben a 64-es debi\u00e1nt 1 curl https://get.gravitational.com/teleport_4.3.2_amd64.deb Futtatjuk 1 dpkg teleport_4.3.2_amd64.deb Elind\u00edtjuk 1 teleport start User l\u00e9trehoz\u00e1sa rootk\u00e9nt 1 tctl users add keikami root L\u00e9trehoz egy regisztr\u00e1ci\u00f3s url-t, abban a bels\u0151 ip-t cser\u00e9lj\u00fck k\u00fcls\u0151re \u00e9s regisztr\u00e1ljunk. Sz\u00fcks\u00e9g lesz m\u00e9g egy telefonos appra: Google hiteles\u00edt\u0151-re QR-k\u00f3dot beolvassuk, weben megadjuk a kapott 6 tag\u00fa k\u00f3dott Kliens hozz\u00e1ad\u00e1si url cre\u00e1l\u00e1sa 1 tctl nodes add --ttl = 5m --roles = node,proxy --token = secret-value","title":"Teleport"},{"location":"swarm/swarm/","text":"swarm Swarm start Cloudban l\u00e9trehozzuk a g\u00e9peket L\u00e9tre hozzuk a swarmot az egyik g\u00e9pen 1 docker swarm init --advertise-addr 'bels\u0151 ip c\u00edm' K\u00e9r\u00fcnk manager tokent, mert alapb\u00f3l workert add 1 docker swarm join-token manager Ezt a tokent haszn\u00e1ljuk a t\u00f6bbi g\u00e9pen m\u00edg minimum 3 manager nincs, t\u00f6bbi lehet sim\u00e1n worker Ellen\u0151rizhetj\u00fck a swarban l\u00e9v\u0151 tagokat 1 docker node ls visualizer Run in swarm. 1 2 3 4 5 6 docker service create \\ --name = viz \\ --publish = 8080 :8080/tcp \\ --constraint = node.role == manager \\ --mount = type = bind,src = /var/run/docker.sock,dst = /var/run/docker.sock \\ dockersamples/visualizer Atseashop Github repo. 1 git clone https://github.com/dockersamples/atsea-sample-shop-app.git Deploy command. 1 docker stack deploy -c docker-stack.yml atsea Ha sz\u00fcks\u00e9ges akkor nano nginx.conf 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 user nginx ; worker_processes 1 ; error_log /var/log/nginx/error.log warn ; pid /var/run/nginx.pid ; events { worker_connections 1024 ; } http { include /etc/nginx/mime.types ; default_type application/octet-stream ; log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"' ; access_log /var/log/nginx/access.log main ; sendfile on ; #tcp_nopush on; keepalive_timeout 65 ; gzip on ; include /etc/nginx/conf.d/*.conf ; server { listen 80 ; server_name atseashop.com ; return 301 https:// $host$request_uri ; } server { listen 443 ssl ; ssl_certificate /run/secrets/revprox_cert ; ssl_certificate_key /run/secrets/revprox_key ; server_name atseashop.com ; access_log /dev/stdout ; error_log /dev/stderr ; location / { proxy_pass http://appserver:8080 ; } } } nano Dockerfile 1 2 FROM dockersamples/atseasampleshopapp_reverse_proxy ADD nginx.conf /etc/nginx/nginx.conf buildelj\u00fck, push, login kell 1 docker build -t keikami/demo:atsea . 1 docker push keikami/demo:atsea 1 docker login keikami nano docker-stack.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 version: \"3.2\" services: reverse_proxy: image: keikami/demo:atsea ports: - \"80:80\" - \"443:443\" secrets: - source: revprox_cert target: revprox_cert - source: revprox_key target: revprox_key networks: - front-tier database: image: dockersamples/atsea_db environment: POSTGRES_USER: gordonuser POSTGRES_DB_PASSWORD_FILE: /run/secrets/postgres_password POSTGRES_DB: atsea networks: - back-tier secrets: - postgres_password deploy: placement: constraints: - 'node.role == manager' appserver: image: dockersamples/atsea_app networks: - front-tier - back-tier - payment deploy: replicas: 2 update_config: parallelism: 2 failure_action: rollback placement: constraints: - 'node.role == manager' restart_policy: condition: on-failure delay: 5s max_attempts: 3 window: 120s secrets: - postgres_password visualizer: image: dockersamples/visualizer:stable ports: - \"8001:8080\" stop_grace_period: 1m30s volumes: - \"/var/run/docker.sock:/var/run/docker.sock\" deploy: update_config: failure_action: rollback placement: constraints: - 'node.role == manager' payment_gateway: image: dockersamples/atseasampleshopapp_payment_gateway secrets: - source: staging_token target: payment_token networks: - payment deploy: update_config: failure_action: rollback placement: constraints: - 'node.role == manager' - 'node.labels.pcidss == yes' networks: front-tier: back-tier: payment: driver: overlay driver_opts: encrypted: 'yes' secrets: postgres_password: external: true staging_token: external: true revprox_key: external: true revprox_cert: external: true V\u00e9g\u00fcl ism\u00e9t deploy. MySQL Create, egy webes kezel\u0151 fel\u00fcletett is tartalmaz. nano stack.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 version: '3.1' services: db: image: mysql command: --default-authentication-plugin = mysql_native_password restart: always environment: MYSQL_ROOT_PASSWORD: titok123 adminer: image: adminer restart: always ports: - 8080 :8080 Depololtatjuk: 1 docker stack deploy -c stack.yml mysql User \u00e9s jelsz\u00f3, example: titok123 1 mysql -u root -p MySQL-ben adatb\u00e1zis, t\u00e1bla, oszlopok \u00e9s tartalom hozz\u00e1 ad\u00e1sa. Adminerben t\u00f6k\u00e9ltes, vagy add ki a mysql kont\u00e9ner\u00e9n bel\u00fcl. 1 2 3 4 create database irdmeg ; use irdmeg ; create table data ( id INT ( 6 ) NOT NULL auto_increment, nev VARCHAR ( 20 ) , PRIMARY KEY ( id )) ; insert into irdmeg.data ( nev ) values ( 'Hello irdmeg' ) ; PHP script \u00edrja ki: 1 2 3 - host nev\u00e9t - server ip c\u00edm\u00e9t - cliens ip c\u00edm\u00e9t nano index.php 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 <?php echo gethostname () ; echo $_SERVER [ 'SERVER_ADDR' ] ; if ( !empty ( $_SERVER [ 'HTTP_CLIENT_IP' ])) { $ip_address = $_SERVER [ 'HTTP_CLIENT_IP' ] ; } //whether ip is from proxy elseif ( !empty ( $_SERVER [ 'HTTP_X_FORWARDED_FOR' ])) { $ip_address = $_SERVER [ 'HTTP_X_FORWARDED_FOR' ] ; } //whether ip is from remote address else { $ip_address = $_SERVER [ 'REMOTE_ADDR' ] ; } echo $ip_address ; $servername = \"db\" ; $username = \"root\" ; $password = \"titok123\" ; $dbname = \"irdmeg\" ; // Create connection $conn = new mysqli ( $servername , $username , $password , $dbname ) ; // Check connection if ( $conn ->connect_error ) { die ( \"Connection failed: \" . $conn ->connect_error ) ; } $sql = \"SELECT id, nev FROM data\" ; $result = $conn ->query ( $sql ) ; if ( $result ->num_rows > 0 ) { // output data of each row while ( $row = $result ->fetch_assoc ()) { echo \"id: \" . $row [ \"id\" ] . \" - Name: \" . $row [ \"nev\" ] . \"<br>\" ; } } else { echo \"0 results\" ; } $conn ->close () ; ?> Ez elhelyezi az index. php-t a '/var/www/html/' mapp\u00e1ba. Telep\u00edti majd enged\u00e9lyezi a mysqli-t. nano Dockerfile 1 2 3 4 5 FROM php:7.4-apache ADD index.php /var/www/html/index.php RUN docker-php-ext-install mysqli RUN docker-php-ext-enable mysqli #RUN rm /var/www/html/index.html Buildelj\u00fck, pusholjuk. 1 docker build -t keikami/demo:php . 1 docker push keikami/demo:php Ha sz\u00fcks\u00e9ges akkor loginoljunk be ex: 1 docker login keikami Glob\u00e1lban fusson a swarm minden tagj\u00e1ban. stack.yml-t kieg\u00e9sz\u00edtj\u00fck. 1 2 3 4 5 6 7 app: image: keikami/demo:php restart: always deploy: mode: global ports: - 80 :80 Futtatjuk a deploy parancsot: 1 docker stack deploy -c stack.yml mysql Portainer Ind\u00edt\u00e1sa swarmon bel\u00fcl: 1 curl -L https://downloads.portainer.io/portainer-agent-stack.yml -o portainer-agent-stack.yml 1 docker stack deploy --compose-file = portainer-agent-stack.yml portainer Egy\u00e9bb telep\u00edt\u00e9si lehet\u0151s\u00e9gek","title":"swarm"},{"location":"swarm/swarm/#swarm","text":"","title":"swarm"},{"location":"swarm/swarm/#swarm-start","text":"Cloudban l\u00e9trehozzuk a g\u00e9peket L\u00e9tre hozzuk a swarmot az egyik g\u00e9pen 1 docker swarm init --advertise-addr 'bels\u0151 ip c\u00edm' K\u00e9r\u00fcnk manager tokent, mert alapb\u00f3l workert add 1 docker swarm join-token manager Ezt a tokent haszn\u00e1ljuk a t\u00f6bbi g\u00e9pen m\u00edg minimum 3 manager nincs, t\u00f6bbi lehet sim\u00e1n worker Ellen\u0151rizhetj\u00fck a swarban l\u00e9v\u0151 tagokat 1 docker node ls","title":"Swarm start"},{"location":"swarm/swarm/#visualizer","text":"Run in swarm. 1 2 3 4 5 6 docker service create \\ --name = viz \\ --publish = 8080 :8080/tcp \\ --constraint = node.role == manager \\ --mount = type = bind,src = /var/run/docker.sock,dst = /var/run/docker.sock \\ dockersamples/visualizer","title":"visualizer"},{"location":"swarm/swarm/#atseashop","text":"Github repo. 1 git clone https://github.com/dockersamples/atsea-sample-shop-app.git Deploy command. 1 docker stack deploy -c docker-stack.yml atsea Ha sz\u00fcks\u00e9ges akkor nano nginx.conf 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 user nginx ; worker_processes 1 ; error_log /var/log/nginx/error.log warn ; pid /var/run/nginx.pid ; events { worker_connections 1024 ; } http { include /etc/nginx/mime.types ; default_type application/octet-stream ; log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"' ; access_log /var/log/nginx/access.log main ; sendfile on ; #tcp_nopush on; keepalive_timeout 65 ; gzip on ; include /etc/nginx/conf.d/*.conf ; server { listen 80 ; server_name atseashop.com ; return 301 https:// $host$request_uri ; } server { listen 443 ssl ; ssl_certificate /run/secrets/revprox_cert ; ssl_certificate_key /run/secrets/revprox_key ; server_name atseashop.com ; access_log /dev/stdout ; error_log /dev/stderr ; location / { proxy_pass http://appserver:8080 ; } } } nano Dockerfile 1 2 FROM dockersamples/atseasampleshopapp_reverse_proxy ADD nginx.conf /etc/nginx/nginx.conf buildelj\u00fck, push, login kell 1 docker build -t keikami/demo:atsea . 1 docker push keikami/demo:atsea 1 docker login keikami nano docker-stack.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 version: \"3.2\" services: reverse_proxy: image: keikami/demo:atsea ports: - \"80:80\" - \"443:443\" secrets: - source: revprox_cert target: revprox_cert - source: revprox_key target: revprox_key networks: - front-tier database: image: dockersamples/atsea_db environment: POSTGRES_USER: gordonuser POSTGRES_DB_PASSWORD_FILE: /run/secrets/postgres_password POSTGRES_DB: atsea networks: - back-tier secrets: - postgres_password deploy: placement: constraints: - 'node.role == manager' appserver: image: dockersamples/atsea_app networks: - front-tier - back-tier - payment deploy: replicas: 2 update_config: parallelism: 2 failure_action: rollback placement: constraints: - 'node.role == manager' restart_policy: condition: on-failure delay: 5s max_attempts: 3 window: 120s secrets: - postgres_password visualizer: image: dockersamples/visualizer:stable ports: - \"8001:8080\" stop_grace_period: 1m30s volumes: - \"/var/run/docker.sock:/var/run/docker.sock\" deploy: update_config: failure_action: rollback placement: constraints: - 'node.role == manager' payment_gateway: image: dockersamples/atseasampleshopapp_payment_gateway secrets: - source: staging_token target: payment_token networks: - payment deploy: update_config: failure_action: rollback placement: constraints: - 'node.role == manager' - 'node.labels.pcidss == yes' networks: front-tier: back-tier: payment: driver: overlay driver_opts: encrypted: 'yes' secrets: postgres_password: external: true staging_token: external: true revprox_key: external: true revprox_cert: external: true V\u00e9g\u00fcl ism\u00e9t deploy.","title":"Atseashop"},{"location":"swarm/swarm/#mysql","text":"Create, egy webes kezel\u0151 fel\u00fcletett is tartalmaz. nano stack.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 version: '3.1' services: db: image: mysql command: --default-authentication-plugin = mysql_native_password restart: always environment: MYSQL_ROOT_PASSWORD: titok123 adminer: image: adminer restart: always ports: - 8080 :8080 Depololtatjuk: 1 docker stack deploy -c stack.yml mysql User \u00e9s jelsz\u00f3, example: titok123 1 mysql -u root -p MySQL-ben adatb\u00e1zis, t\u00e1bla, oszlopok \u00e9s tartalom hozz\u00e1 ad\u00e1sa. Adminerben t\u00f6k\u00e9ltes, vagy add ki a mysql kont\u00e9ner\u00e9n bel\u00fcl. 1 2 3 4 create database irdmeg ; use irdmeg ; create table data ( id INT ( 6 ) NOT NULL auto_increment, nev VARCHAR ( 20 ) , PRIMARY KEY ( id )) ; insert into irdmeg.data ( nev ) values ( 'Hello irdmeg' ) ; PHP script \u00edrja ki: 1 2 3 - host nev\u00e9t - server ip c\u00edm\u00e9t - cliens ip c\u00edm\u00e9t nano index.php 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 <?php echo gethostname () ; echo $_SERVER [ 'SERVER_ADDR' ] ; if ( !empty ( $_SERVER [ 'HTTP_CLIENT_IP' ])) { $ip_address = $_SERVER [ 'HTTP_CLIENT_IP' ] ; } //whether ip is from proxy elseif ( !empty ( $_SERVER [ 'HTTP_X_FORWARDED_FOR' ])) { $ip_address = $_SERVER [ 'HTTP_X_FORWARDED_FOR' ] ; } //whether ip is from remote address else { $ip_address = $_SERVER [ 'REMOTE_ADDR' ] ; } echo $ip_address ; $servername = \"db\" ; $username = \"root\" ; $password = \"titok123\" ; $dbname = \"irdmeg\" ; // Create connection $conn = new mysqli ( $servername , $username , $password , $dbname ) ; // Check connection if ( $conn ->connect_error ) { die ( \"Connection failed: \" . $conn ->connect_error ) ; } $sql = \"SELECT id, nev FROM data\" ; $result = $conn ->query ( $sql ) ; if ( $result ->num_rows > 0 ) { // output data of each row while ( $row = $result ->fetch_assoc ()) { echo \"id: \" . $row [ \"id\" ] . \" - Name: \" . $row [ \"nev\" ] . \"<br>\" ; } } else { echo \"0 results\" ; } $conn ->close () ; ?> Ez elhelyezi az index. php-t a '/var/www/html/' mapp\u00e1ba. Telep\u00edti majd enged\u00e9lyezi a mysqli-t. nano Dockerfile 1 2 3 4 5 FROM php:7.4-apache ADD index.php /var/www/html/index.php RUN docker-php-ext-install mysqli RUN docker-php-ext-enable mysqli #RUN rm /var/www/html/index.html Buildelj\u00fck, pusholjuk. 1 docker build -t keikami/demo:php . 1 docker push keikami/demo:php Ha sz\u00fcks\u00e9ges akkor loginoljunk be ex: 1 docker login keikami Glob\u00e1lban fusson a swarm minden tagj\u00e1ban. stack.yml-t kieg\u00e9sz\u00edtj\u00fck. 1 2 3 4 5 6 7 app: image: keikami/demo:php restart: always deploy: mode: global ports: - 80 :80 Futtatjuk a deploy parancsot: 1 docker stack deploy -c stack.yml mysql","title":"MySQL"},{"location":"swarm/swarm/#portainer","text":"Ind\u00edt\u00e1sa swarmon bel\u00fcl: 1 curl -L https://downloads.portainer.io/portainer-agent-stack.yml -o portainer-agent-stack.yml 1 docker stack deploy --compose-file = portainer-agent-stack.yml portainer Egy\u00e9bb telep\u00edt\u00e9si lehet\u0151s\u00e9gek","title":"Portainer"},{"location":"szerver/bash/","text":"PATH glob\u00e1lisan futatthat\u00f3 f\u00e1jl /usr/local/bin vagy /usr/bin mapp\u00e1ba elhelyezni,alap\u00e9rtelmezet PATH hely 1 mkdir $HOME /bin 1 export PATH = $PATH : $HOME /bin 1 echo $PATH 1 mv bashscriptneve.sh $HOME /bin bash neve a futatt\u00e1shoz bashscriptneve.sh","title":"PATH"},{"location":"szerver/bash/#path","text":"","title":"PATH"},{"location":"szerver/bash/#globalisan-futatthato-fajl","text":"/usr/local/bin vagy /usr/bin mapp\u00e1ba elhelyezni,alap\u00e9rtelmezet PATH hely 1 mkdir $HOME /bin 1 export PATH = $PATH : $HOME /bin 1 echo $PATH 1 mv bashscriptneve.sh $HOME /bin","title":"glob\u00e1lisan futatthat\u00f3 f\u00e1jl"},{"location":"szerver/bash/#bash-neve-a-futattashoz","text":"bashscriptneve.sh","title":"bash neve a futatt\u00e1shoz"},{"location":"szerver/crontab/","text":"cron crontab.guru ellen\u0151rz\u0151 weboldal /etc/cron.daily/ itt vannak a be\u00e1ll\u00edtott id\u0151z\u00edt\u0151k crontab futat\u00e1sa -e -vel 1 crontab -e list\u00e1za a be\u00e1ll\u00edtott crontabokat 1 crontab -l vas\u00e1rnapra a 0-\u00e1t \u00e1ll\u00edtani, hib\u00e1t dev nullba vezetni 22 2 * * 0 root bash /root/wpbackup.sh 2>&1 /dev/null","title":"Crontab"},{"location":"szerver/crontab/#cron","text":"","title":"cron"},{"location":"szerver/crontab/#crontabguru-ellenorzo-weboldal","text":"","title":"crontab.guru  ellen\u0151rz\u0151 weboldal"},{"location":"szerver/crontab/#etccrondaily-itt-vannak-a-beallitott-idozitok","text":"","title":"/etc/cron.daily/ itt vannak a be\u00e1ll\u00edtott id\u0151z\u00edt\u0151k"},{"location":"szerver/crontab/#crontab-futatasa-e-vel","text":"1 crontab -e","title":"crontab futat\u00e1sa -e -vel"},{"location":"szerver/crontab/#listaza-a-beallitott-crontabokat","text":"1 crontab -l","title":"list\u00e1za a be\u00e1ll\u00edtott crontabokat"},{"location":"szerver/crontab/#vasarnapra-a-0-at-allitani-hibat-dev-nullba-vezetni","text":"22 2 * * 0 root bash /root/wpbackup.sh 2>&1 /dev/null","title":"vas\u00e1rnapra a 0-\u00e1t \u00e1ll\u00edtani, hib\u00e1t dev nullba vezetni"},{"location":"szerver/disk/","text":"Disk management list\u00e1zza a diskekeket 1 lsblk 1 fdisk -l | grep '^Disk' 1 sudo fdisk \u2013l /dev/vdb partici\u00f3 l\u00e9trehoz\u00e1sa 1 sudo fdisk /dev/vdb disk form\u00e1z\u00e1sa 1 sudo mkfs.ext4 /dev/vdb f\u00e1jl rendszerhez csatol\u00e1s 1 mount /dev/vdb /home lecsatol\u00e1s 1 umount /dev/vdb f\u00e1jl l\u00e9trehoz\u00e1sa, felcsatol\u00e1sa a disk1nek 1 mkdir /disk1 1 mount /dev/vdb /disk1 felcsatolt diskek m\u00e9ret\u00e9t kilist\u00e1zza 1 df -H disken a particio m\u00e9ret\u00e9t n\u00f6veli 1 growpart /dev/vda 1 \u00e1tm\u00e9retezed a particiot a m\u00e9ret\u00e9re 1 resize2fs /dev/vda1 disk m\u00e9retet nem lehet cs\u00f6kenteni -","title":"Disk management"},{"location":"szerver/disk/#disk-management","text":"","title":"Disk management"},{"location":"szerver/disk/#listazza-a-diskekeket","text":"1 lsblk 1 fdisk -l | grep '^Disk' 1 sudo fdisk \u2013l /dev/vdb","title":"list\u00e1zza a diskekeket"},{"location":"szerver/disk/#particio-letrehozasa","text":"1 sudo fdisk /dev/vdb","title":"partici\u00f3 l\u00e9trehoz\u00e1sa"},{"location":"szerver/disk/#disk-formazasa","text":"1 sudo mkfs.ext4 /dev/vdb","title":"disk form\u00e1z\u00e1sa"},{"location":"szerver/disk/#fajl-rendszerhez-csatolas","text":"1 mount /dev/vdb /home","title":"f\u00e1jl rendszerhez csatol\u00e1s"},{"location":"szerver/disk/#lecsatolas","text":"1 umount /dev/vdb","title":"lecsatol\u00e1s"},{"location":"szerver/disk/#fajl-letrehozasa-felcsatolasa-a-disk1nek","text":"1 mkdir /disk1 1 mount /dev/vdb /disk1","title":"f\u00e1jl l\u00e9trehoz\u00e1sa, felcsatol\u00e1sa a disk1nek"},{"location":"szerver/disk/#felcsatolt-diskek-meretet-kilistazza","text":"1 df -H","title":"felcsatolt diskek m\u00e9ret\u00e9t kilist\u00e1zza"},{"location":"szerver/disk/#disken-a-particio-meretet-noveli","text":"1 growpart /dev/vda 1","title":"disken a particio m\u00e9ret\u00e9t n\u00f6veli"},{"location":"szerver/disk/#atmeretezed-a-particiot-a-meretere","text":"1 resize2fs /dev/vda1","title":"\u00e1tm\u00e9retezed a particiot a m\u00e9ret\u00e9re"},{"location":"szerver/disk/#disk-meretet-nem-lehet-csokenteni-","text":"","title":"disk m\u00e9retet nem lehet cs\u00f6kenteni -"},{"location":"szerver/gitinterm/","text":"git git alap git bet\u00f6lt\u00e9se readme hozz\u00e1 ad\u00e1sa commit origin\u00e1lk\u00e9nt val\u00f3 felt\u00fclt\u00e9se git config git init git add README.md git commit -m \"first commit\" git remote add origin https://github.com/KeiKami/demo.git git config --global user.email \"m.peti@irdmeg.hu\" git config --global user.name \"Your Name\" git config --global user.name \"KeiKami\" git config ellen\u0151rz\u00e9se 1 cat .gitconfig status lek\u00e9r\u00e9s 1 git status v\u00e1ltoz\u00e1s lek\u00e9rdez\u00e9s 1 git diff git push in terminal git bet\u00f6lt\u00e9se 1 git init hozz\u00e1adjuk a filet 1 git add README.md commitoljuk 1 git commit -m \"ls bash sh by ati\" hozz\u00e1 adjuk a megfelel\u0151 r\u00e9szhez 1 git remote add origin git@github.com:irdmeg/learning.git pusholjuk 1 git push -u origin master","title":"git"},{"location":"szerver/gitinterm/#git","text":"","title":"git"},{"location":"szerver/gitinterm/#git-alap","text":"git bet\u00f6lt\u00e9se readme hozz\u00e1 ad\u00e1sa commit origin\u00e1lk\u00e9nt val\u00f3 felt\u00fclt\u00e9se git config git init git add README.md git commit -m \"first commit\" git remote add origin https://github.com/KeiKami/demo.git git config --global user.email \"m.peti@irdmeg.hu\" git config --global user.name \"Your Name\" git config --global user.name \"KeiKami\"","title":"git alap"},{"location":"szerver/gitinterm/#git-config-ellenorzese","text":"1 cat .gitconfig","title":"git config ellen\u0151rz\u00e9se"},{"location":"szerver/gitinterm/#status-lekeres","text":"1 git status","title":"status lek\u00e9r\u00e9s"},{"location":"szerver/gitinterm/#valtozas-lekerdezes","text":"1 git diff","title":"v\u00e1ltoz\u00e1s lek\u00e9rdez\u00e9s"},{"location":"szerver/gitinterm/#git-push-in-terminal","text":"","title":"git push in terminal"},{"location":"szerver/gitinterm/#git-betoltese","text":"1 git init","title":"git bet\u00f6lt\u00e9se"},{"location":"szerver/gitinterm/#hozzaadjuk-a-filet","text":"1 git add README.md","title":"hozz\u00e1adjuk a filet"},{"location":"szerver/gitinterm/#commitoljuk","text":"1 git commit -m \"ls bash sh by ati\"","title":"commitoljuk"},{"location":"szerver/gitinterm/#hozza-adjuk-a-megfelelo-reszhez","text":"1 git remote add origin git@github.com:irdmeg/learning.git","title":"hozz\u00e1 adjuk a megfelel\u0151 r\u00e9szhez"},{"location":"szerver/gitinterm/#pusholjuk","text":"1 git push -u origin master","title":"pusholjuk"},{"location":"szerver/init/","text":"rendszerrel indulok scriptek A 0. fut\u00e1si szint a rendszer le\u00e1ll\u00edt\u00e1s\u00e1t jelenti Az 1. fut\u00e1si szint egyfelhaszn\u00e1l\u00f3 ment\u00e9si m\u00f3dot jelent Az 5. fut\u00e1si szint t\u00f6bb felhaszn\u00e1l\u00f3t, h\u00e1l\u00f3zati enged\u00e9lyt, grafikus m\u00f3dot jelent A 6. szint a rendszer \u00fajraind\u00edt\u00e1s\u00e1hoz sz\u00fcks\u00e9ges \u00c1ltal\u00e1ban a 2., 3. \u00e9s 4. fut\u00e1si szint azt az \u00e1llapotot jelenti, ahol a Linux t\u00f6bb felhaszn\u00e1l\u00f3, h\u00e1l\u00f3zati enged\u00e9lyez\u00e9ssel, sz\u00f6veges m\u00f3dban indult. Amikor enged\u00e9lyezz\u00fck a szolg\u00e1ltat\u00e1s automatikus indul\u00e1s\u00e1t, val\u00f3j\u00e1ban hozz\u00e1adjuk azt egy fut\u00e1si szinthez. alapb\u00f3l indul\u00f3 f\u00e1jlok helye /etc/init.d, list\u00e1z\u00e1sa 1 ls -l /etc/rc2.d indit\u00e1s ut\u00e1n indul\u00f3 program enged\u00e9lyez\u00e9se bash sudo update-rc.d programneve enable","title":"rendszerrel indulok scriptek"},{"location":"szerver/init/#rendszerrel-indulok-scriptek","text":"A 0. fut\u00e1si szint a rendszer le\u00e1ll\u00edt\u00e1s\u00e1t jelenti Az 1. fut\u00e1si szint egyfelhaszn\u00e1l\u00f3 ment\u00e9si m\u00f3dot jelent Az 5. fut\u00e1si szint t\u00f6bb felhaszn\u00e1l\u00f3t, h\u00e1l\u00f3zati enged\u00e9lyt, grafikus m\u00f3dot jelent A 6. szint a rendszer \u00fajraind\u00edt\u00e1s\u00e1hoz sz\u00fcks\u00e9ges \u00c1ltal\u00e1ban a 2., 3. \u00e9s 4. fut\u00e1si szint azt az \u00e1llapotot jelenti, ahol a Linux t\u00f6bb felhaszn\u00e1l\u00f3, h\u00e1l\u00f3zati enged\u00e9lyez\u00e9ssel, sz\u00f6veges m\u00f3dban indult. Amikor enged\u00e9lyezz\u00fck a szolg\u00e1ltat\u00e1s automatikus indul\u00e1s\u00e1t, val\u00f3j\u00e1ban hozz\u00e1adjuk azt egy fut\u00e1si szinthez.","title":"rendszerrel indulok scriptek"},{"location":"szerver/init/#alapbol-indulo-fajlok-helye-etcinitd-listazasa","text":"1 ls -l /etc/rc2.d","title":"alapb\u00f3l indul\u00f3 f\u00e1jlok helye /etc/init.d, list\u00e1z\u00e1sa"},{"location":"szerver/init/#inditas-utan-indulo-program-engedelyezese","text":"bash sudo update-rc.d programneve enable","title":"indit\u00e1s ut\u00e1n indul\u00f3 program enged\u00e9lyez\u00e9se"},{"location":"szerver/rsa/","text":"RSA L\u00e9tre hozza az RSA kulcsot 1 ssh-keygen -t rsa Kulcs m\u00e1sol\u00e1sa 1 ssh-copy-id demo@198.51.100.0 kulcs beileszt\u00e9se sshval 1 cat ~/.ssh/id_rsa.pub | ssh demo@198.51.100.0 \"mkdir -p ~/.ssh && chmod 700 ~/.ssh && cat >> ~/.ssh/authorized_keys\" root jelsz\u00f3 letilt\u00e1sa konfig megnyit\u00e1sa \u00e9s jelsz\u00f3 k\u00e9r\u00e9s\u00e9nek letilt\u00e1sa 1 sudo nano /etc/ssh/sshd_config PermitRootLogint lekapcsolni PermitRootLogin without-password be\u00e1llit\u00e1st \u00e9letbe l\u00e9ptetni 1 sudo systemctl reload sshd.service","title":"RSA"},{"location":"szerver/rsa/#rsa","text":"","title":"RSA"},{"location":"szerver/rsa/#letre-hozza-az-rsa-kulcsot","text":"1 ssh-keygen -t rsa","title":"L\u00e9tre hozza az RSA kulcsot"},{"location":"szerver/rsa/#kulcs-masolasa","text":"1 ssh-copy-id demo@198.51.100.0","title":"Kulcs m\u00e1sol\u00e1sa"},{"location":"szerver/rsa/#kulcs-beilesztese-sshval","text":"1 cat ~/.ssh/id_rsa.pub | ssh demo@198.51.100.0 \"mkdir -p ~/.ssh && chmod 700 ~/.ssh && cat >> ~/.ssh/authorized_keys\"","title":"kulcs beileszt\u00e9se sshval"},{"location":"szerver/rsa/#root-jelszo-letiltasa","text":"","title":"root jelsz\u00f3 letilt\u00e1sa"},{"location":"szerver/rsa/#konfig-megnyitasa-es-jelszo-keresenek-letiltasa","text":"1 sudo nano /etc/ssh/sshd_config","title":"konfig megnyit\u00e1sa \u00e9s jelsz\u00f3 k\u00e9r\u00e9s\u00e9nek letilt\u00e1sa"},{"location":"szerver/rsa/#permitrootlogint-lekapcsolni","text":"","title":"PermitRootLogint lekapcsolni"},{"location":"szerver/rsa/#permitrootlogin-without-password","text":"","title":"PermitRootLogin without-password"},{"location":"szerver/rsa/#beallitast-eletbe-leptetni","text":"1 sudo systemctl reload sshd.service","title":"be\u00e1llit\u00e1st \u00e9letbe l\u00e9ptetni"}]}