{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"test/","text":"This is an tag This is an tag This is an tag This text will be italic This will also be italic This text will be bold This will also be bold You can combine them Item 1 Item 2 Item 2a Item 2b Item 1 Item 2 Item 3 Item 3a Item 3b Format: http://github.com - automatic! GitHub As Kanye West said: We're living the future so the present is our past. I think you should use an <addr> element here instead. 1 2 3 4 5 function fancyAlert ( arg ) { if ( arg ) { $ . facebox ({ div : '#foo' }) } } [x] @mentions, #refs, links , formatting , and tags supported [x] list syntax required (any unordered or ordered list supported) [x] this is a complete item [ ] this is an incomplete item First Header Second Header Content from cell 1 Content from cell 2 Content in the first column Content in the second column It's very easy to make some words bold and other words italic with Markdown. You can even link to Google!","title":"This is an <h1> tag"},{"location":"test/#this-is-an-tag","text":"","title":"This is an  tag"},{"location":"test/#this-is-an-tag_1","text":"","title":"This is an  tag"},{"location":"test/#this-is-an-tag_2","text":"","title":"This is an  tag"},{"location":"Docker/Ackee/","text":"Ackee Clone github repo https://github.com/electerious/Ackee Edit docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 version: \"2\" services: nginx: image: nginx container_name: web volumes: - ./default.conf:/etc/nginx/conf.d/default.conf - /etc/letsencrypt:/etc/letsencrypt - ./usr/share/nginx/html:/usr/share/nginx/html ports: - 80 :80 - 443 :443 restart: always links: - \"ackee:ackee\" ackee: image: electerious/ackee container_name: ackee restart: always environment: - WAIT_HOSTS = mongo:27017 - ACKEE_MONGODB = mongodb://mongo:27017/ackee env_file: - .env depends_on: - mongo mongo: image: mongo container_name: mongo restart: always volumes: - ./data:/data/db .env fileban usert passwordott \u00e1ll\u00edtani 1 2 ACKEE_USERNAME = admin ACKEE_PASSWORD = password nginx config kommenteld ki az ssl-t amig nem gener\u00e1lt\u00e1l certet 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 server { listen 80 ; server_name _ ; location /.well-known { root /usr/share/nginx/html ; index index.html index.htm ; } location / { proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; proxy_set_header X-Forwarded-Proto $scheme ; proxy_set_header X-Real-IP $remote_addr ; proxy_set_header Host $http_host ; proxy_pass http://ackee:3000 ; # proxy_redirect off; } } server { listen 443 ssl ; server_name _ ; client_max_body_size 10m ; ssl_certificate_key /etc/letsencrypt/live/DOMAIN/privkey.pem ; ssl_certificate /etc/letsencrypt/live/DOMAIN/fullchain.pem ; location / { # if ($request_method = 'GET') { add_header 'Access-Control-Allow-Origin' '*' ; add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' ; add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' ; add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' ; # } proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; proxy_set_header X-Forwarded-Proto $scheme ; proxy_set_header X-Real-IP $remote_addr ; proxy_set_header Host $http_host ; proxy_pass http://ackee:3000 ; proxy_redirect off ; } } letsencrypt cert gener\u00e1l\u00e1s 1 docker run -it --name letsencrypt -v ./usr/share/nginx/html/.well-known/:/var/www/html/.well-known -v /etc/letsencrypt/:/etc/letsencrypt --entrypoint sh --rm certbot/certbot command 1 certbot certonly --no-bootstrap --webroot -w /var/www/html/ -d DOMAIN --non-interactive --agree-tos --email email@email.com","title":"Ackee"},{"location":"Docker/Ackee/#ackee","text":"","title":"Ackee"},{"location":"Docker/Ackee/#clone-github-repo-httpsgithubcomelecteriousackee","text":"","title":"Clone github repo https://github.com/electerious/Ackee"},{"location":"Docker/Ackee/#edit-docker-composeyml","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 version: \"2\" services: nginx: image: nginx container_name: web volumes: - ./default.conf:/etc/nginx/conf.d/default.conf - /etc/letsencrypt:/etc/letsencrypt - ./usr/share/nginx/html:/usr/share/nginx/html ports: - 80 :80 - 443 :443 restart: always links: - \"ackee:ackee\" ackee: image: electerious/ackee container_name: ackee restart: always environment: - WAIT_HOSTS = mongo:27017 - ACKEE_MONGODB = mongodb://mongo:27017/ackee env_file: - .env depends_on: - mongo mongo: image: mongo container_name: mongo restart: always volumes: - ./data:/data/db","title":"Edit docker-compose.yml"},{"location":"Docker/Ackee/#env-fileban-usert-passwordott-allitani","text":"1 2 ACKEE_USERNAME = admin ACKEE_PASSWORD = password","title":".env fileban usert passwordott \u00e1ll\u00edtani"},{"location":"Docker/Ackee/#nginx-config","text":"kommenteld ki az ssl-t amig nem gener\u00e1lt\u00e1l certet 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 server { listen 80 ; server_name _ ; location /.well-known { root /usr/share/nginx/html ; index index.html index.htm ; } location / { proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; proxy_set_header X-Forwarded-Proto $scheme ; proxy_set_header X-Real-IP $remote_addr ; proxy_set_header Host $http_host ; proxy_pass http://ackee:3000 ; # proxy_redirect off; } } server { listen 443 ssl ; server_name _ ; client_max_body_size 10m ; ssl_certificate_key /etc/letsencrypt/live/DOMAIN/privkey.pem ; ssl_certificate /etc/letsencrypt/live/DOMAIN/fullchain.pem ; location / { # if ($request_method = 'GET') { add_header 'Access-Control-Allow-Origin' '*' ; add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' ; add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' ; add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' ; # } proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; proxy_set_header X-Forwarded-Proto $scheme ; proxy_set_header X-Real-IP $remote_addr ; proxy_set_header Host $http_host ; proxy_pass http://ackee:3000 ; proxy_redirect off ; } }","title":"nginx config"},{"location":"Docker/Ackee/#letsencrypt-cert-generalas","text":"1 docker run -it --name letsencrypt -v ./usr/share/nginx/html/.well-known/:/var/www/html/.well-known -v /etc/letsencrypt/:/etc/letsencrypt --entrypoint sh --rm certbot/certbot command 1 certbot certonly --no-bootstrap --webroot -w /var/www/html/ -d DOMAIN --non-interactive --agree-tos --email email@email.com","title":"letsencrypt cert gener\u00e1l\u00e1s"},{"location":"Docker/Caddy/","text":"Caddy https://hub.docker.com/r/caddy/caddy https://minhcung.me/how-to-start-wordpress-with-caddy/ First step: docker & docker-compose Example caddy docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 version: '3.3' services: # Database database: image: mysql:latest container_name: database volumes: - ./db:/var/lib/mysql restart: always env_file: - .env environment: MYSQL_DATABASE: blog_wp command: '--default-authentication-plugin=mysql_native_password' networks: - blog-network # Wordpress wordpress: depends_on: - database image: wordpress:php7.4-fpm-alpine container_name: wordpress restart: always user: \"root:root\" env_file: - .env environment: - WORDPRESS_DB_HOST=database:3306 - WORDPRESS_DB_USER=$MYSQL_USER - WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD - WORDPRESS_DB_NAME=blog_wp volumes: - ./php.ini:/usr/local/etc/php/conf.d/custom.ini - ./wordpress:/var/www/html networks: - blog-network # Webserver caddy: image: caddy:alpine container_name: webserver ports: - 80:80 - 443:443 volumes: - ./wordpress:/var/www/html - ./caddy_data:/data - ./caddy_config:/config - ./Caddyfile:/etc/caddy/Caddyfile networks: - blog-network networks: blog-network: driver: bridge '.env' f\u00e1jlban add meg a k\u00e9rt v\u00e1ltozokat 1 2 3 MYSQL_ROOT_PASSWORD = MYSQL_USER = MYSQL_PASSWORD = Hozz l\u00e9tre egy php.ini f\u00e1jlt, ami lehet\u0151v\u00e9 teszi a nagy f\u00e1jlfriss\u00edt\u00e9st a wordpressben 1 2 3 memory_limit = 64M upload_max_filesize = 64M post_max_size = 64M Hozd l\u00e9tre a k\u00f6vetkez\u0151 mapp\u00e1kat : 1 mkdir caddy_data caddy_config wordpress db 'Caddyfile' file l\u00e9trehozz\u00e1sa, add meg a k\u00edv\u00e1nt url c\u00edmed 1 2 3 4 5 example.com { root * /var/www/html php_fastcgi wordpress:9000 file_server } Inditsd el. 1 docker-compose up -d Az url c\u00edmen \u00e1llitsd be a wordpresst.","title":"Caddy"},{"location":"Docker/Caddy/#caddy","text":"https://hub.docker.com/r/caddy/caddy https://minhcung.me/how-to-start-wordpress-with-caddy/ First step: docker & docker-compose Example caddy docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 version: '3.3' services: # Database database: image: mysql:latest container_name: database volumes: - ./db:/var/lib/mysql restart: always env_file: - .env environment: MYSQL_DATABASE: blog_wp command: '--default-authentication-plugin=mysql_native_password' networks: - blog-network # Wordpress wordpress: depends_on: - database image: wordpress:php7.4-fpm-alpine container_name: wordpress restart: always user: \"root:root\" env_file: - .env environment: - WORDPRESS_DB_HOST=database:3306 - WORDPRESS_DB_USER=$MYSQL_USER - WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD - WORDPRESS_DB_NAME=blog_wp volumes: - ./php.ini:/usr/local/etc/php/conf.d/custom.ini - ./wordpress:/var/www/html networks: - blog-network # Webserver caddy: image: caddy:alpine container_name: webserver ports: - 80:80 - 443:443 volumes: - ./wordpress:/var/www/html - ./caddy_data:/data - ./caddy_config:/config - ./Caddyfile:/etc/caddy/Caddyfile networks: - blog-network networks: blog-network: driver: bridge '.env' f\u00e1jlban add meg a k\u00e9rt v\u00e1ltozokat 1 2 3 MYSQL_ROOT_PASSWORD = MYSQL_USER = MYSQL_PASSWORD = Hozz l\u00e9tre egy php.ini f\u00e1jlt, ami lehet\u0151v\u00e9 teszi a nagy f\u00e1jlfriss\u00edt\u00e9st a wordpressben 1 2 3 memory_limit = 64M upload_max_filesize = 64M post_max_size = 64M Hozd l\u00e9tre a k\u00f6vetkez\u0151 mapp\u00e1kat : 1 mkdir caddy_data caddy_config wordpress db 'Caddyfile' file l\u00e9trehozz\u00e1sa, add meg a k\u00edv\u00e1nt url c\u00edmed 1 2 3 4 5 example.com { root * /var/www/html php_fastcgi wordpress:9000 file_server } Inditsd el. 1 docker-compose up -d Az url c\u00edmen \u00e1llitsd be a wordpresst.","title":"Caddy"},{"location":"Docker/Dolibarr/","text":"Dolibarr El\u0151felt\u00e9tel: - docker docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 services: mariadb: image: mariadb:latest environment: MYSQL_ROOT_PASSWORD: root MYSQL_DATABASE: dolibarr web: image: tuxgasy/dolibarr environment: DOLI_DB_HOST: mariadb DOLI_DB_USER: root DOLI_DB_PASSWORD: root DOLI_DB_NAME: dolibarr DOLI_URL_ROOT: 'http://0.0.0.0' PHP_INI_DATE_TIMEZONE: 'Europe/Paris' ports: - \"80:80\" links: - mariadb 1 docker-compose up -d B\u00f6ng\u00e9sz\u0151ben URL:80-as porton telep\u00edts\u00fck a k\u00edv\u00e1nt verzi\u00f3t. Majd jelentkezz\u00fcnk be user: admin, pass: admin","title":"Dolibarr"},{"location":"Docker/Dolibarr/#dolibarr","text":"El\u0151felt\u00e9tel: - docker docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 services: mariadb: image: mariadb:latest environment: MYSQL_ROOT_PASSWORD: root MYSQL_DATABASE: dolibarr web: image: tuxgasy/dolibarr environment: DOLI_DB_HOST: mariadb DOLI_DB_USER: root DOLI_DB_PASSWORD: root DOLI_DB_NAME: dolibarr DOLI_URL_ROOT: 'http://0.0.0.0' PHP_INI_DATE_TIMEZONE: 'Europe/Paris' ports: - \"80:80\" links: - mariadb 1 docker-compose up -d B\u00f6ng\u00e9sz\u0151ben URL:80-as porton telep\u00edts\u00fck a k\u00edv\u00e1nt verzi\u00f3t. Majd jelentkezz\u00fcnk be user: admin, pass: admin","title":"Dolibarr"},{"location":"Docker/Grafana/","text":"Grafana&Loki&Prometheus Install steps in docker Grafana/loki git clone 1 2 cd loki/production/ docker-compose pull edit docker-compose.yml 1 nano docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 version: \"3\" networks: loki: services: loki: image: grafana/loki:2.0.0 ports: - \"3100:3100\" command: -config.file = /etc/loki/local-config.yaml networks: - loki promtail: image: grafana/promtail:2.0.0 volumes: - /var/log:/var/log command: -config.file = /etc/promtail/config.yml networks: - loki grafana: image: grafana/grafana:latest ports: - \"3000:3000\" networks: - loki prometheus: image: prom/prometheus ports: - \"9090:9090\" networks: - loki start docker-compose 1 docker-compose up in browser open URL 1 localhost : 3000 -first start: 1 2 3 user : admin pwd : admin loki database add: 1 example URL: 192.168.0.190:3100 u can see this ip with 'ifconfig' command.","title":"Grafana&Loki&Prometheus"},{"location":"Docker/Grafana/#grafanalokiprometheus","text":"","title":"Grafana&amp;Loki&amp;Prometheus"},{"location":"Docker/Grafana/#install-steps-in-docker","text":"Grafana/loki git clone 1 2 cd loki/production/ docker-compose pull edit docker-compose.yml 1 nano docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 version: \"3\" networks: loki: services: loki: image: grafana/loki:2.0.0 ports: - \"3100:3100\" command: -config.file = /etc/loki/local-config.yaml networks: - loki promtail: image: grafana/promtail:2.0.0 volumes: - /var/log:/var/log command: -config.file = /etc/promtail/config.yml networks: - loki grafana: image: grafana/grafana:latest ports: - \"3000:3000\" networks: - loki prometheus: image: prom/prometheus ports: - \"9090:9090\" networks: - loki start docker-compose 1 docker-compose up in browser open URL 1 localhost : 3000 -first start: 1 2 3 user : admin pwd : admin loki database add: 1 example URL: 192.168.0.190:3100 u can see this ip with 'ifconfig' command.","title":"Install steps in docker"},{"location":"Docker/Jenkins/","text":"Jenkins Jenkisn docker hub instal docker and docker-compose pull jenkins and run adduser jenkins, su jenkins, mkdir jenk, cd \u00e9s ott futatt 1 docker pull jenkins 1 docker run --name jenkins -p 8080 :8080 -p 50000 :50000 -v 'pwd' :/var/jenkins_home jenkins ki \u00edrja termin\u00e1lon az admin jelsz\u00f3t b\u00f6ng\u00e9sz\u0151ben ip:8080 on kell beilleszteni azt dockerben Jenkin_Home/secrets/initialAdminPassword-ban van folytat\u00e1s majd pluginek telep\u00edt\u00e9se admin user create r\u00e9szleges megold\u00e1s de att\u00f3l \u00e9rdekes 1 2 3 4 5 mkdir $PWD /jenkins sudo chown -R 1000 :1000 $PWD /jenkins docker run -d -p 8080 :8080 -p 50000 :50000 -v $PWD /jenkins:/var/jenkins_home --name jenkins jenkins lts hosszan t\u00e1mogatot form\u00e1tum \u00fagyan az az elj\u00e1r\u00e1s adduser stb 1 docker run -it -p 8080 :8080 -p 50000 :50000 -v ` pwd ` :/var/jenkins_home --name jenkins jenkins/jenkins:lts fejleszett jenkins 1 docker run -it -p 8080 :8080 -p 50000 :50000 -v ` pwd ` :/var/jenkins_home --name blue jenkinsci/blueocean script 1 2 sudo chown -R 1000 :1000 $PWD /jenkins_home docker run -d -p 8080 :8080 -p 50000 :50000 -v ` pwd ` /jenkins_home:/var/jenkins_home --name jenkins jenkins/jenkins:lts","title":"Jenkins"},{"location":"Docker/Jenkins/#jenkins","text":"Jenkisn docker hub","title":"Jenkins"},{"location":"Docker/Jenkins/#instal-docker-and-docker-compose","text":"","title":"instal docker and docker-compose"},{"location":"Docker/Jenkins/#pull-jenkins-and-run","text":"","title":"pull jenkins and run"},{"location":"Docker/Jenkins/#adduser-jenkins-su-jenkins-mkdir-jenk-cd-es-ott-futatt","text":"1 docker pull jenkins 1 docker run --name jenkins -p 8080 :8080 -p 50000 :50000 -v 'pwd' :/var/jenkins_home jenkins","title":"adduser jenkins, su jenkins, mkdir jenk, cd \u00e9s ott futatt"},{"location":"Docker/Jenkins/#ki-irja-terminalon-az-admin-jelszot","text":"b\u00f6ng\u00e9sz\u0151ben ip:8080 on kell beilleszteni azt dockerben Jenkin_Home/secrets/initialAdminPassword-ban van folytat\u00e1s majd pluginek telep\u00edt\u00e9se admin user create","title":"ki \u00edrja termin\u00e1lon az admin jelsz\u00f3t"},{"location":"Docker/Jenkins/#reszleges-megoldas-de-attol-erdekes","text":"1 2 3 4 5 mkdir $PWD /jenkins sudo chown -R 1000 :1000 $PWD /jenkins docker run -d -p 8080 :8080 -p 50000 :50000 -v $PWD /jenkins:/var/jenkins_home --name jenkins jenkins","title":"r\u00e9szleges megold\u00e1s de att\u00f3l \u00e9rdekes"},{"location":"Docker/Jenkins/#lts-hosszan-tamogatot-formatum","text":"","title":"lts hosszan t\u00e1mogatot form\u00e1tum"},{"location":"Docker/Jenkins/#ugyan-az-az-eljaras-adduser-stb","text":"1 docker run -it -p 8080 :8080 -p 50000 :50000 -v ` pwd ` :/var/jenkins_home --name jenkins jenkins/jenkins:lts","title":"\u00fagyan az az elj\u00e1r\u00e1s adduser stb"},{"location":"Docker/Jenkins/#fejleszett-jenkins","text":"1 docker run -it -p 8080 :8080 -p 50000 :50000 -v ` pwd ` :/var/jenkins_home --name blue jenkinsci/blueocean","title":"fejleszett jenkins"},{"location":"Docker/Jenkins/#script","text":"1 2 sudo chown -R 1000 :1000 $PWD /jenkins_home docker run -d -p 8080 :8080 -p 50000 :50000 -v ` pwd ` /jenkins_home:/var/jenkins_home --name jenkins jenkins/jenkins:lts","title":"script"},{"location":"Docker/Node/","text":"Node React app Node and React run in docker 1 touch Dockerfile.dev 1 2 3 4 5 6 7 8 9 10 11 12 13 cat <<'EOF'>> Dockerfile.dev FROM node:14.15.1-alpine3.12 WORKDIR /app COPY package.json /app/ RUN npm install COPY . /app/ CMD [\"npm\", \"run\", \"build\"] EOF 1 touch docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 version: \"3.8\" services: client: stdin_open: true tty: true command: npm run start build: context: . dockerfile: Dockerfile.dev ports: - \"3000:3000\" volumes: - \"node_modules:/app/node_modules\" - \"/:/app\" volumes: node_modules: 1 docker-compose up","title":"Node React app"},{"location":"Docker/Node/#node-react-app","text":"","title":"Node React app"},{"location":"Docker/Node/#node-and-react-run-in-docker","text":"1 touch Dockerfile.dev 1 2 3 4 5 6 7 8 9 10 11 12 13 cat <<'EOF'>> Dockerfile.dev FROM node:14.15.1-alpine3.12 WORKDIR /app COPY package.json /app/ RUN npm install COPY . /app/ CMD [\"npm\", \"run\", \"build\"] EOF 1 touch docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 version: \"3.8\" services: client: stdin_open: true tty: true command: npm run start build: context: . dockerfile: Dockerfile.dev ports: - \"3000:3000\" volumes: - \"node_modules:/app/node_modules\" - \"/:/app\" volumes: node_modules: 1 docker-compose up","title":"Node and React run in docker"},{"location":"Docker/Odoo/","text":"Odoo https://hub.docker.com/_/odoo/","title":"Odoo"},{"location":"Docker/Odoo/#odoo","text":"https://hub.docker.com/_/odoo/","title":"Odoo"},{"location":"Docker/Traefik/","text":"Traefik & letsencrypt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 version : \"3.7\" services : traefik : image : \"traefik:v2.2\" restart : always container_name : \"traefik\" command : -- configfile traefik . toml labels : - \"traefik.enable=true\" # https - \"traefik.http.routers.traefik.rule=Host(`URL`)\" - \"traefik.http.routers.traefik.tls=true\" - \"traefik.http.routers.traefik.tls.certresolver=myresolver\" - \"traefik.http.routers.traefik.entrypoints=websecure\" - \"traefik.http.routers.traefik.tls.options=default\" - \"traefik.http.routers.traefik.middlewares=https-redirect@file,traefik-auth@docker\" - \"traefik.http.routers.traefik.service=traefik\" - \"traefik.http.services.traefik.loadbalancer.server.port=8080\" - \"traefik.http.middlewares.traefik-auth.basicauth.users=traefik: basicauth jelsz\u00f3 hasselt\" ports : - \"8080:8080\" - \"80:80\" - \"443:443\" networks : - hostingnet volumes : - \"./traefik.toml:/etc/traefik/traefik.toml\" - \"./dynamic_conf.toml:/etc/traefik/dynamic_conf.toml\" - \"/var/run/docker.sock:/var/run/docker.sock:ro\" - \"./letsencrypt:/letsencrypt:rw\" networks : hostingnet : name : hosting_network 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 [log] level = \"DEBUG\" [api] insecure = true dashboard = true [entryPoints] [entryPoints.web] address = \":80\" [entryPoints.websecure] address = \":443\" [providers.docker] exposedByDefault = false [certificatesResolvers.myresolver.acme] email = \"SAJAT@EMAIL.COM\" storage = \"/letsencrypt/acme.json\" [certificatesResolvers.myresolver.acme.tlsChallenge] # [certificatesResolvers.myresolver.acme.dnsChallenge] # provider = \"route53\" # delayBeforeCheck = 0 # resolvers = [\"1.1.1.1:53\", \"8.8.8.8:53\"] # acmeLogging = true [providers.file] filename = \"/etc/traefik/dynamic_conf.toml\" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 [tls.options] [tls.options.default] minVersion = \"VersionTLS12\" sniStrict = true cipherSuites = [ \"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\", \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\", \"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\", \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\", \"TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305\", \"TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305\", \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\", \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\", \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\", \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\", \"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\", \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\", \"TLS_RSA_WITH_AES_128_GCM_SHA256\", \"TLS_RSA_WITH_AES_256_GCM_SHA384\", \"TLS_RSA_WITH_AES_128_CBC_SHA256\", \"TLS_RSA_WITH_AES_128_CBC_SHA\", \"TLS_RSA_WITH_AES_256_CBC_SHA\", \"TLS_RSA_WITH_3DES_EDE_CBC_SHA\" ] [http.middlewares] [http.middlewares.https-redirect.redirectscheme] scheme = \"https\" [http.middlewares.security-headers.headers] # CORS AccessControlAllowMethods = [\"GET\", \"OPTIONS\", \"PUT\"] AccessControlAllowOrigin = \"\" AccessControlMaxAge = 100 #AddVaryHeader = true BrowserXssFilter = true ContentTypeNosniff = true ForceSTSHeader = true FrameDeny = true SSLRedirect = true STSIncludeSubdomains = true STSPreload = true # ContentSecurityPolicy = \"default-src 'self' 'unsafe-inline' wss://example.example.com/Socketer; font-src 'self' data:; img-src *;\" CustomFrameOptionsValue = \"SAMEORIGIN\" ReferrerPolicy = \"same-origin\" FeaturePolicy = \"vibrate 'self'\" STSSeconds = 315360000 X-Forwarded-Proto = \"https\" 1 docker-compose up -d _ __ sima Traefik https://doc.traefik.io/traefik/v2.0/getting-started/quick-start/ basic trafik docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 version : '3' services : reverse - proxy : # The official v2 . 0 Traefik docker image image : traefik : v2 . 0 # Enables the web UI and tells Traefik to listen to docker command : --api.insecure=true --providers.docker ports : # The HTTP port - \"80:80\" # The Web UI ( enabled by --api.insecure=true) - \"8080:8080\" volumes : # So that Traefik can listen to the Docker events - / var / run / docker . sock : / var / run / docker . sock Run parancsa 1 docker-compose up -d hozz\u00e1 lehet adni, hogy m\u00e9g milyen szolg\u00e1ltat\u00e1sokat figyeljen 1 2 3 4 5 whoami: # A container that exposes an API to show its IP address image: containous/whoami labels: - \"traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)\" ezeket le is lehet k\u00e9rni k\u00fcl\u00f6n pis h\u00edv\u00e1ssal 1 curl -H Host:whoami.docker.localhost http://127.0.0.1","title":"Traefik & letsencrypt"},{"location":"Docker/Traefik/#traefik-letsencrypt","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 version : \"3.7\" services : traefik : image : \"traefik:v2.2\" restart : always container_name : \"traefik\" command : -- configfile traefik . toml labels : - \"traefik.enable=true\" # https - \"traefik.http.routers.traefik.rule=Host(`URL`)\" - \"traefik.http.routers.traefik.tls=true\" - \"traefik.http.routers.traefik.tls.certresolver=myresolver\" - \"traefik.http.routers.traefik.entrypoints=websecure\" - \"traefik.http.routers.traefik.tls.options=default\" - \"traefik.http.routers.traefik.middlewares=https-redirect@file,traefik-auth@docker\" - \"traefik.http.routers.traefik.service=traefik\" - \"traefik.http.services.traefik.loadbalancer.server.port=8080\" - \"traefik.http.middlewares.traefik-auth.basicauth.users=traefik: basicauth jelsz\u00f3 hasselt\" ports : - \"8080:8080\" - \"80:80\" - \"443:443\" networks : - hostingnet volumes : - \"./traefik.toml:/etc/traefik/traefik.toml\" - \"./dynamic_conf.toml:/etc/traefik/dynamic_conf.toml\" - \"/var/run/docker.sock:/var/run/docker.sock:ro\" - \"./letsencrypt:/letsencrypt:rw\" networks : hostingnet : name : hosting_network 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 [log] level = \"DEBUG\" [api] insecure = true dashboard = true [entryPoints] [entryPoints.web] address = \":80\" [entryPoints.websecure] address = \":443\" [providers.docker] exposedByDefault = false [certificatesResolvers.myresolver.acme] email = \"SAJAT@EMAIL.COM\" storage = \"/letsencrypt/acme.json\" [certificatesResolvers.myresolver.acme.tlsChallenge] # [certificatesResolvers.myresolver.acme.dnsChallenge] # provider = \"route53\" # delayBeforeCheck = 0 # resolvers = [\"1.1.1.1:53\", \"8.8.8.8:53\"] # acmeLogging = true [providers.file] filename = \"/etc/traefik/dynamic_conf.toml\" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 [tls.options] [tls.options.default] minVersion = \"VersionTLS12\" sniStrict = true cipherSuites = [ \"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\", \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\", \"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\", \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\", \"TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305\", \"TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305\", \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\", \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\", \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\", \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\", \"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\", \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\", \"TLS_RSA_WITH_AES_128_GCM_SHA256\", \"TLS_RSA_WITH_AES_256_GCM_SHA384\", \"TLS_RSA_WITH_AES_128_CBC_SHA256\", \"TLS_RSA_WITH_AES_128_CBC_SHA\", \"TLS_RSA_WITH_AES_256_CBC_SHA\", \"TLS_RSA_WITH_3DES_EDE_CBC_SHA\" ] [http.middlewares] [http.middlewares.https-redirect.redirectscheme] scheme = \"https\" [http.middlewares.security-headers.headers] # CORS AccessControlAllowMethods = [\"GET\", \"OPTIONS\", \"PUT\"] AccessControlAllowOrigin = \"\" AccessControlMaxAge = 100 #AddVaryHeader = true BrowserXssFilter = true ContentTypeNosniff = true ForceSTSHeader = true FrameDeny = true SSLRedirect = true STSIncludeSubdomains = true STSPreload = true # ContentSecurityPolicy = \"default-src 'self' 'unsafe-inline' wss://example.example.com/Socketer; font-src 'self' data:; img-src *;\" CustomFrameOptionsValue = \"SAMEORIGIN\" ReferrerPolicy = \"same-origin\" FeaturePolicy = \"vibrate 'self'\" STSSeconds = 315360000 X-Forwarded-Proto = \"https\" 1 docker-compose up -d _ __ sima","title":"Traefik &amp; letsencrypt"},{"location":"Docker/Traefik/#traefik","text":"https://doc.traefik.io/traefik/v2.0/getting-started/quick-start/ basic trafik docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 version : '3' services : reverse - proxy : # The official v2 . 0 Traefik docker image image : traefik : v2 . 0 # Enables the web UI and tells Traefik to listen to docker command : --api.insecure=true --providers.docker ports : # The HTTP port - \"80:80\" # The Web UI ( enabled by --api.insecure=true) - \"8080:8080\" volumes : # So that Traefik can listen to the Docker events - / var / run / docker . sock : / var / run / docker . sock Run parancsa 1 docker-compose up -d hozz\u00e1 lehet adni, hogy m\u00e9g milyen szolg\u00e1ltat\u00e1sokat figyeljen 1 2 3 4 5 whoami: # A container that exposes an API to show its IP address image: containous/whoami labels: - \"traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)\" ezeket le is lehet k\u00e9rni k\u00fcl\u00f6n pis h\u00edv\u00e1ssal 1 curl -H Host:whoami.docker.localhost http://127.0.0.1","title":"Traefik"},{"location":"Docker/TraefikBitwarden/","text":"Traefik & Bitwarden_rs https://github.com/dani-garcia/bitwarden_rs traefik docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 version : \"3.7\" services : traefik : image : \"traefik:v2.2\" restart : always container_name : \"traefik\" command : -- configfile traefik . toml labels : - \"traefik.enable=true\" # https - \"traefik.http.routers.traefik.rule=Host(`URL`)\" - \"traefik.http.routers.traefik.tls=true\" - \"traefik.http.routers.traefik.tls.certresolver=myresolver\" - \"traefik.http.routers.traefik.entrypoints=websecure\" - \"traefik.http.routers.traefik.tls.options=default\" - \"traefik.http.routers.traefik.middlewares=https-redirect@file,traefik-auth@docker\" - \"traefik.http.routers.traefik.service=traefik\" - \"traefik.http.services.traefik.loadbalancer.server.port=8080\" - \"traefik.http.middlewares.traefik-auth.basicauth.users=traefik: basicauth jelsz\u00f3\" ports : - \"8080:8080\" - \"80:80\" - \"443:443\" networks : - hostingnet volumes : - \"./traefik.toml:/etc/traefik/traefik.toml\" - \"./dynamic_conf.toml:/etc/traefik/dynamic_conf.toml\" - \"/var/run/docker.sock:/var/run/docker.sock:ro\" - \"./letsencrypt:/letsencrypt:rw\" networks : hostingnet : name : hosting_network traefik.toml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 [log] level = \"DEBUG\" [api] insecure = true dashboard = true [entryPoints] [entryPoints.web] address = \":80\" [entryPoints.websecure] address = \":443\" [providers.docker] exposedByDefault = false [certificatesResolvers.myresolver.acme] email = \"SAJAT@EMAIL.COM\" storage = \"/letsencrypt/acme.json\" [certificatesResolvers.myresolver.acme.tlsChallenge] # [certificatesResolvers.myresolver.acme.dnsChallenge] # provider = \"route53\" # delayBeforeCheck = 0 # resolvers = [\"1.1.1.1:53\", \"8.8.8.8:53\"] # acmeLogging = true [providers.file] filename = \"/etc/traefik/dynamic_conf.toml\" dynamic_conf.toml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 [tls.options] [tls.options.default] minVersion = \"VersionTLS12\" sniStrict = true cipherSuites = [ \"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\", \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\", \"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\", \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\", \"TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305\", \"TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305\", \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\", \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\", \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\", \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\", \"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\", \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\", \"TLS_RSA_WITH_AES_128_GCM_SHA256\", \"TLS_RSA_WITH_AES_256_GCM_SHA384\", \"TLS_RSA_WITH_AES_128_CBC_SHA256\", \"TLS_RSA_WITH_AES_128_CBC_SHA\", \"TLS_RSA_WITH_AES_256_CBC_SHA\", \"TLS_RSA_WITH_3DES_EDE_CBC_SHA\" ] [http.middlewares] [http.middlewares.https-redirect.redirectscheme] scheme = \"https\" [http.middlewares.security-headers.headers] # CORS AccessControlAllowMethods = [\"GET\", \"OPTIONS\", \"PUT\"] AccessControlAllowOrigin = \"\" AccessControlMaxAge = 100 #AddVaryHeader = true BrowserXssFilter = true ContentTypeNosniff = true ForceSTSHeader = true FrameDeny = true SSLRedirect = true STSIncludeSubdomains = true STSPreload = true # ContentSecurityPolicy = \"default-src 'self' 'unsafe-inline' wss://example.example.com/Socketer; font-src 'self' data:; img-src *;\" CustomFrameOptionsValue = \"SAMEORIGIN\" ReferrerPolicy = \"same-origin\" FeaturePolicy = \"vibrate 'self'\" STSSeconds = 315360000 X-Forwarded-Proto = \"https\" 1 docker-compose up -d bitwardenrs docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 version : '3.7' services : app : image : bitwardenrs / server : 1.19.0 restart : always environment : # egyedi random token url / admin - hoz jelsz\u00f3 - ADMIN_TOKEN = RandomPassword volumes : - . / bw - data / : / data / labels : - \"traefik.enable=true\" # https # url - \"traefik.http.routers.bitwarden.rule=Host(`URL-BIWARDENRS`)\" - \"traefik.http.routers.bitwarden.tls=true\" - \"traefik.http.routers.bitwarden.tls.certresolver=myresolver\" - \"traefik.http.routers.bitwarden.entrypoints=websecure\" - \"traefik.http.routers.bitwarden.tls.options=default\" # http - \"traefik.http.routers.bitwarden-insecure.rule=Host(`URL-BIWARDENRS`)\" - \"traefik.http.routers.bitwarden-insecure.middlewares=https-redirect@file\" - \"traefik.http.routers.bitwarden-insecure.entrypoints=web\" - \"traefik.http.routers.bitwarden.service=bitwarden\" - \"traefik.http.services.bitwarden.loadbalancer.server.port=80\" - \"traefik.http.routers.bitwarden-insecure.service=bitwarden\" # websocket - \"traefik.http.routers.bitwarden-websocket.rule=Host(`URL-BIWARDENRS`) && Path(`/notifications/hub`)\" - \"traefik.http.routers.bitwarden-websocket.service=bitwarden-websocket\" - \"traefik.http.services.bitwarden-websocket.loadbalancer.server.port=3012\" networks : - hostingnet container_name : bitwarden hostname : bitwarden logging : driver : \"json-file\" options : max - size : \"15m\" max - file : \"10\" networks : hostingnet : external : name : hosting_network 1 docker-compose up -d","title":"Traefik & Bitwarden_rs"},{"location":"Docker/TraefikBitwarden/#traefik-bitwarden_rs","text":"https://github.com/dani-garcia/bitwarden_rs","title":"Traefik &amp; Bitwarden_rs"},{"location":"Docker/TraefikBitwarden/#traefik","text":"docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 version : \"3.7\" services : traefik : image : \"traefik:v2.2\" restart : always container_name : \"traefik\" command : -- configfile traefik . toml labels : - \"traefik.enable=true\" # https - \"traefik.http.routers.traefik.rule=Host(`URL`)\" - \"traefik.http.routers.traefik.tls=true\" - \"traefik.http.routers.traefik.tls.certresolver=myresolver\" - \"traefik.http.routers.traefik.entrypoints=websecure\" - \"traefik.http.routers.traefik.tls.options=default\" - \"traefik.http.routers.traefik.middlewares=https-redirect@file,traefik-auth@docker\" - \"traefik.http.routers.traefik.service=traefik\" - \"traefik.http.services.traefik.loadbalancer.server.port=8080\" - \"traefik.http.middlewares.traefik-auth.basicauth.users=traefik: basicauth jelsz\u00f3\" ports : - \"8080:8080\" - \"80:80\" - \"443:443\" networks : - hostingnet volumes : - \"./traefik.toml:/etc/traefik/traefik.toml\" - \"./dynamic_conf.toml:/etc/traefik/dynamic_conf.toml\" - \"/var/run/docker.sock:/var/run/docker.sock:ro\" - \"./letsencrypt:/letsencrypt:rw\" networks : hostingnet : name : hosting_network traefik.toml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 [log] level = \"DEBUG\" [api] insecure = true dashboard = true [entryPoints] [entryPoints.web] address = \":80\" [entryPoints.websecure] address = \":443\" [providers.docker] exposedByDefault = false [certificatesResolvers.myresolver.acme] email = \"SAJAT@EMAIL.COM\" storage = \"/letsencrypt/acme.json\" [certificatesResolvers.myresolver.acme.tlsChallenge] # [certificatesResolvers.myresolver.acme.dnsChallenge] # provider = \"route53\" # delayBeforeCheck = 0 # resolvers = [\"1.1.1.1:53\", \"8.8.8.8:53\"] # acmeLogging = true [providers.file] filename = \"/etc/traefik/dynamic_conf.toml\" dynamic_conf.toml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 [tls.options] [tls.options.default] minVersion = \"VersionTLS12\" sniStrict = true cipherSuites = [ \"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\", \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\", \"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\", \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\", \"TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305\", \"TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305\", \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\", \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\", \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\", \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\", \"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\", \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\", \"TLS_RSA_WITH_AES_128_GCM_SHA256\", \"TLS_RSA_WITH_AES_256_GCM_SHA384\", \"TLS_RSA_WITH_AES_128_CBC_SHA256\", \"TLS_RSA_WITH_AES_128_CBC_SHA\", \"TLS_RSA_WITH_AES_256_CBC_SHA\", \"TLS_RSA_WITH_3DES_EDE_CBC_SHA\" ] [http.middlewares] [http.middlewares.https-redirect.redirectscheme] scheme = \"https\" [http.middlewares.security-headers.headers] # CORS AccessControlAllowMethods = [\"GET\", \"OPTIONS\", \"PUT\"] AccessControlAllowOrigin = \"\" AccessControlMaxAge = 100 #AddVaryHeader = true BrowserXssFilter = true ContentTypeNosniff = true ForceSTSHeader = true FrameDeny = true SSLRedirect = true STSIncludeSubdomains = true STSPreload = true # ContentSecurityPolicy = \"default-src 'self' 'unsafe-inline' wss://example.example.com/Socketer; font-src 'self' data:; img-src *;\" CustomFrameOptionsValue = \"SAMEORIGIN\" ReferrerPolicy = \"same-origin\" FeaturePolicy = \"vibrate 'self'\" STSSeconds = 315360000 X-Forwarded-Proto = \"https\" 1 docker-compose up -d","title":"traefik"},{"location":"Docker/TraefikBitwarden/#bitwardenrs","text":"docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 version : '3.7' services : app : image : bitwardenrs / server : 1.19.0 restart : always environment : # egyedi random token url / admin - hoz jelsz\u00f3 - ADMIN_TOKEN = RandomPassword volumes : - . / bw - data / : / data / labels : - \"traefik.enable=true\" # https # url - \"traefik.http.routers.bitwarden.rule=Host(`URL-BIWARDENRS`)\" - \"traefik.http.routers.bitwarden.tls=true\" - \"traefik.http.routers.bitwarden.tls.certresolver=myresolver\" - \"traefik.http.routers.bitwarden.entrypoints=websecure\" - \"traefik.http.routers.bitwarden.tls.options=default\" # http - \"traefik.http.routers.bitwarden-insecure.rule=Host(`URL-BIWARDENRS`)\" - \"traefik.http.routers.bitwarden-insecure.middlewares=https-redirect@file\" - \"traefik.http.routers.bitwarden-insecure.entrypoints=web\" - \"traefik.http.routers.bitwarden.service=bitwarden\" - \"traefik.http.services.bitwarden.loadbalancer.server.port=80\" - \"traefik.http.routers.bitwarden-insecure.service=bitwarden\" # websocket - \"traefik.http.routers.bitwarden-websocket.rule=Host(`URL-BIWARDENRS`) && Path(`/notifications/hub`)\" - \"traefik.http.routers.bitwarden-websocket.service=bitwarden-websocket\" - \"traefik.http.services.bitwarden-websocket.loadbalancer.server.port=3012\" networks : - hostingnet container_name : bitwarden hostname : bitwarden logging : driver : \"json-file\" options : max - size : \"15m\" max - file : \"10\" networks : hostingnet : external : name : hosting_network 1 docker-compose up -d","title":"bitwardenrs"},{"location":"Docker/Varnish/","text":"Varnish https://github.com/felixcarmona/docker-wordpress https://caddy.community/t/caddy-v2-varnish-wordpress-using-docker-with-ssl/10758 https://www.memorylack.com/using-varnish-to-speed-up-wordpress-in-docker/ ports: Caddy:443 => Varnish:8090 => Caddy:8091 => Wordpress:9000 create folder tree: Caddyfile .env docker-compose.yml php.ini /caddy/Dockerfile /varnish/default.vcl 1 2 3 touch Caddyfile .env docker-compose.yml php.ini mkdir caddy && touch caddy/Dockerfile mkdir varnish && touch varnish/default.vcl docker-compose.yml: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 version : '3.3' services : # Database database : image : linuxserver / mariadb container_name : database volumes : - . / db : / config restart : always env_file : - . env environment : - MYSQL_DATABASE = blog_wp - MYSQL_ROOT_PASSWORD = $ MYSQL_ROOT_PASSWORD - MYSQL_USER = $ MYSQL_USER - MYSQL_PASSWORD = $ MYSQL_PASSWORD networks : - blog - network # Wordpress wordpress : depends_on : - database image : wordpress : php7 . 4 - fpm - alpine container_name : wordpress restart : always user : \"root:root\" env_file : - . env environment : - WORDPRESS_DB_HOST = database : 3306 - WORDPRESS_DB_USER = $ MYSQL_USER - WORDPRESS_DB_PASSWORD = $ MYSQL_PASSWORD - WORDPRESS_DB_NAME = blog_wp volumes : - . / php . ini : / usr / local / etc / php / conf . d / custom . ini - . / wordpress : / var / www / html networks : - blog - network # Webserver caddy : container_name : webserver image : caddy : alpine restart : always ports : - 80 : 80 - 443 : 443 - 8091 : 8091 volumes : - . / wordpress : / var / www / html - . / caddy_data : / data - . / Caddyfile : / etc / caddy / Caddyfile links : - \"wordpress:wordpress\" networks : - blog - network varnish : container_name : varnish image : varnish : 6 . 5 . 1 volumes : - . / varnish / default . vcl : / etc / varnish / default . vcl # - . / varnish / test . vcl : / etc / varnish / default . vcl # ports : # - 8090 : 8090 links : - \"caddy:webserver\" networks : - blog - network networks : blog - network : driver : bridge Caddyfile: change email, weburl 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 { email your@email.com } weburl { reverse_proxy varnish:80 #IP of Docker host with Varnish LISTENING port } :8091 { root * /var/www/html @cachedFiles { path *.jpg *.jpeg *.png *.gif *.ico *.js *.css *.woff *.woff2 *.ttf } header @cachedFiles Cache-Control \"public, max-age=604800, must-revalidate\" encode gzip php_fastcgi wordpress:9000 file_server # reverse_proxy wordpress:80 } default.vcl 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 # # This is an example VCL file for Varnish. # # It does not do anything by default, delegating control to the # builtin VCL. The builtin VCL is called when there is no explicit # return statement. # # See the VCL chapters in the Users Guide at https://www.varnish-cache.org/docs/ # and https://www.varnish-cache.org/trac/wiki/VCLExamples for more examples. # Marker to tell the VCL compiler that this VCL has been adapted to the # new 4.0 format. vcl 4 .0 ; # Default backend definition. Set this to point to your content server. backend default { .host = \"webserver\" ; .port = \"8091\" ; } sub vcl_recv { # Happens before we check if we have this in cache already. # # Typically you clean up the request here, removing cookies you don't need, # rewriting the request, etc. if ( req.restarts == 0 ) { if ( req.http.X-Forwarded-For ) { set req.http.X-Forwarded-For = client.ip ; } } if ( req.http.Authorization || req.method == \"POST\" ) { return ( pass ) ; } if ( req.url ~ \"/feed\" ) { return ( pass ) ; } set req.http.cookie = regsuball ( req.http.cookie, \"wp-settings-\\d+=[^;]+(; )?\" , \"\" ) ; set req.http.cookie = regsuball ( req.http.cookie, \"wp-settings-time-\\d+=[^;]+(; )?\" , \"\" ) ; if ( req.http.cookie == \"\" ) { unset req.http.cookie ; } } sub vcl_backend_response { # Happens after we have read the response headers from the backend. # # Here you clean the response headers, removing silly Set-Cookie headers # and other mistakes your backend does. } .env: change password, user 1 2 3 MYSQL_ROOT_PASSWORD = password MYSQL_USER = user MYSQL_PASSWORD = password php.ini: 1 2 3 memory_limit = 64M upload_max_filesize = 64M post_max_size = 64M","title":"Varnish"},{"location":"Docker/Varnish/#varnish","text":"https://github.com/felixcarmona/docker-wordpress https://caddy.community/t/caddy-v2-varnish-wordpress-using-docker-with-ssl/10758 https://www.memorylack.com/using-varnish-to-speed-up-wordpress-in-docker/ ports: Caddy:443 => Varnish:8090 => Caddy:8091 => Wordpress:9000 create folder tree: Caddyfile .env docker-compose.yml php.ini /caddy/Dockerfile /varnish/default.vcl 1 2 3 touch Caddyfile .env docker-compose.yml php.ini mkdir caddy && touch caddy/Dockerfile mkdir varnish && touch varnish/default.vcl docker-compose.yml: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 version : '3.3' services : # Database database : image : linuxserver / mariadb container_name : database volumes : - . / db : / config restart : always env_file : - . env environment : - MYSQL_DATABASE = blog_wp - MYSQL_ROOT_PASSWORD = $ MYSQL_ROOT_PASSWORD - MYSQL_USER = $ MYSQL_USER - MYSQL_PASSWORD = $ MYSQL_PASSWORD networks : - blog - network # Wordpress wordpress : depends_on : - database image : wordpress : php7 . 4 - fpm - alpine container_name : wordpress restart : always user : \"root:root\" env_file : - . env environment : - WORDPRESS_DB_HOST = database : 3306 - WORDPRESS_DB_USER = $ MYSQL_USER - WORDPRESS_DB_PASSWORD = $ MYSQL_PASSWORD - WORDPRESS_DB_NAME = blog_wp volumes : - . / php . ini : / usr / local / etc / php / conf . d / custom . ini - . / wordpress : / var / www / html networks : - blog - network # Webserver caddy : container_name : webserver image : caddy : alpine restart : always ports : - 80 : 80 - 443 : 443 - 8091 : 8091 volumes : - . / wordpress : / var / www / html - . / caddy_data : / data - . / Caddyfile : / etc / caddy / Caddyfile links : - \"wordpress:wordpress\" networks : - blog - network varnish : container_name : varnish image : varnish : 6 . 5 . 1 volumes : - . / varnish / default . vcl : / etc / varnish / default . vcl # - . / varnish / test . vcl : / etc / varnish / default . vcl # ports : # - 8090 : 8090 links : - \"caddy:webserver\" networks : - blog - network networks : blog - network : driver : bridge Caddyfile: change email, weburl 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 { email your@email.com } weburl { reverse_proxy varnish:80 #IP of Docker host with Varnish LISTENING port } :8091 { root * /var/www/html @cachedFiles { path *.jpg *.jpeg *.png *.gif *.ico *.js *.css *.woff *.woff2 *.ttf } header @cachedFiles Cache-Control \"public, max-age=604800, must-revalidate\" encode gzip php_fastcgi wordpress:9000 file_server # reverse_proxy wordpress:80 } default.vcl 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 # # This is an example VCL file for Varnish. # # It does not do anything by default, delegating control to the # builtin VCL. The builtin VCL is called when there is no explicit # return statement. # # See the VCL chapters in the Users Guide at https://www.varnish-cache.org/docs/ # and https://www.varnish-cache.org/trac/wiki/VCLExamples for more examples. # Marker to tell the VCL compiler that this VCL has been adapted to the # new 4.0 format. vcl 4 .0 ; # Default backend definition. Set this to point to your content server. backend default { .host = \"webserver\" ; .port = \"8091\" ; } sub vcl_recv { # Happens before we check if we have this in cache already. # # Typically you clean up the request here, removing cookies you don't need, # rewriting the request, etc. if ( req.restarts == 0 ) { if ( req.http.X-Forwarded-For ) { set req.http.X-Forwarded-For = client.ip ; } } if ( req.http.Authorization || req.method == \"POST\" ) { return ( pass ) ; } if ( req.url ~ \"/feed\" ) { return ( pass ) ; } set req.http.cookie = regsuball ( req.http.cookie, \"wp-settings-\\d+=[^;]+(; )?\" , \"\" ) ; set req.http.cookie = regsuball ( req.http.cookie, \"wp-settings-time-\\d+=[^;]+(; )?\" , \"\" ) ; if ( req.http.cookie == \"\" ) { unset req.http.cookie ; } } sub vcl_backend_response { # Happens after we have read the response headers from the backend. # # Here you clean the response headers, removing silly Set-Cookie headers # and other mistakes your backend does. } .env: change password, user 1 2 3 MYSQL_ROOT_PASSWORD = password MYSQL_USER = user MYSQL_PASSWORD = password php.ini: 1 2 3 memory_limit = 64M upload_max_filesize = 64M post_max_size = 64M","title":"Varnish"},{"location":"Docker/apache/","text":"apache & wordpress & certbot in docker Install docker Create docker-compose.yml edit certbot command 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 version: \"3.3\" services: db: image: mysql:5.7 volumes: - db_data:/var/lib/mysql restart: always environment: MYSQL_ROOT_PASSWORD: somewordpress MYSQL_DATABASE: wordpress MYSQL_USER: wordpress MYSQL_PASSWORD: wordpress wordpress: depends_on: - db image: wordpress:latest ports: - \"8000:80\" restart: always environment: WORDPRESS_DB_HOST: db:3306 WORDPRESS_DB_USER: wordpress WORDPRESS_DB_PASSWORD: wordpress WORDPRESS_DB_NAME: wordpress networks: - app-network httpd: depends_on: - wordpress image: php:apache ports: - \"80:80\" - \"443:443\" volumes: # - ./httpd-container/htdocs:/var/www # - ./httpd-container/conf:/usr/local/apache2/conf - ./000-default.conf:/etc/apache2/sites-available networks: - app-network certbot: depends_on: - httpd image: certbot/certbot container_name: certbot volumes: - certbot-etc:/etc/letsencrypt - wordpress:/var/www/html command: certonly --webroot --webroot-path = /var/www/html --email email@email.com --agree-tos --no-eff-email --staging -d example.com -d www.example.com volumes: db_data: # certbot-etc: wordpress: networks: app-network: driver: bridge version1.docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 services: wordpress: image: wordpress:latest depends_on: - db restart: always volumes: - ./wp_data:/var/www/html links: - \"db:db\" environment: WORDPRESS_DB_USER: wp_user WORDPRESS_DB_PASSWORD: 7rHBE1QJAtUWeGW3LjNhhWDkgaLDcaAm WORDPRESS_DB_HOST: db:3306 db: image: mysql:5.7 command: --default-authentication-plugin = mysql_native_password --innodb-use-native-aio = 0 restart: always environment: MYSQL_ROOT_PASSWORD: NZe9ZmZpv00LDYZoRWCNcC4KvaIJKGFM MYSQL_DATABASE: wordpress MYSQL_USER: wp_user MYSQL_PASSWORD: 7rHBE1QJAtUWeGW3LjNhhWDkgaLDcaAm volumes: - ./data:/var/lib/mysql apache: build: . volumes: - ./myapache.conf:/etc/apache2/sites-available/myapache.conf - ./letsencrypt:/etc/letsencrypt # command: tail -f /dev/null ports: - \"80:80\" - \"443:443\" links: - \"wordpress:wordpress\" depends_on: - wordpress - db Create apache config: httpd.conf edit weburl 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 Listen 443 <VirtualHost default:443> DocumentRoot \"/usr/local/apache2/htdocs\" SSLEngine on SSLCertificateFile /etc/letsencrypt/live/weburl/fullchain.pem SSLCertificateKeyFile /etc/letsencrypt/live/weburl/privkey.pem SSLCertificateChainFile /etc/letsencrypt/live/weburl/fullchain.pem ServerAdmin webmaster@localhost ServerName weburl ServerAlias localhost ProxyRequests Off ProxyPreserveHost On # RequestHeader set Host \"weburl\" RequestHeader set X-Forwarded-Proto \"https\" RequestHeader set X-Forwarded-Port \"443\" ProxyVia On SSLProxyEngine on ProxyPass \"/\" \"http://wordpress/\" ProxyPassReverse \"/\" \"http://wordpress/\" </VirtualHost> Creat myapache.conf 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 ServerRoot \"/usr/local/apache2\" Listen 80 LoadModule mpm_event_module modules/mod_mpm_event.so LoadModule authn_file_module modules/mod_authn_file.so LoadModule authn_core_module modules/mod_authn_core.so LoadModule authz_host_module modules/mod_authz_host.so LoadModule authz_groupfile_module modules/mod_authz_groupfile.so LoadModule authz_user_module modules/mod_authz_user.so LoadModule authz_core_module modules/mod_authz_core.so LoadModule access_compat_module modules/mod_access_compat.so LoadModule auth_basic_module modules/mod_auth_basic.so LoadModule reqtimeout_module modules/mod_reqtimeout.so LoadModule filter_module modules/mod_filter.so LoadModule proxy_html_module modules/mod_proxy_html.so LoadModule mime_module modules/mod_mime.so LoadModule log_config_module modules/mod_log_config.so LoadModule env_module modules/mod_env.so LoadModule headers_module modules/mod_headers.so LoadModule setenvif_module modules/mod_setenvif.so LoadModule version_module modules/mod_version.so LoadModule proxy_module modules/mod_proxy.so LoadModule proxy_connect_module modules/mod_proxy_connect.so LoadModule proxy_http_module modules/mod_proxy_http.so LoadModule ssl_module modules/mod_ssl.so LoadModule unixd_module modules/mod_unixd.so LoadModule status_module modules/mod_status.so LoadModule autoindex_module modules/mod_autoindex.so <IfModule !mpm_prefork_module> </IfModule> <IfModule mpm_prefork_module> </IfModule> LoadModule dir_module modules/mod_dir.so LoadModule alias_module modules/mod_alias.so <IfModule unixd_module> User daemon Group daemon </IfModule> ServerAdmin you@example.com <Directory /> AllowOverride none Require all denied </Directory> DocumentRoot \"/usr/local/apache2/htdocs\" <Directory \"/usr/local/apache2/htdocs\" > Options Indexes FollowSymLinks AllowOverride None Require all granted </Directory> <IfModule dir_module> DirectoryIndex index.html </IfModule> <Files \".ht*\" > Require all denied </Files> ErrorLog /proc/self/fd/2 LogLevel warn <IfModule log_config_module> LogFormat \"%h %l %u %t \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" combined LogFormat \"%h %l %u %t \\\"%r\\\" %>s %b\" common <IfModule logio_module> LogFormat \"%h %l %u %t \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\" %I %O\" combinedio </IfModule> CustomLog /proc/self/fd/1 common </IfModule> <IfModule alias_module> ScriptAlias /cgi-bin/ \"/usr/local/apache2/cgi-bin/\" </IfModule> <IfModule cgid_module> </IfModule> <Directory \"/usr/local/apache2/cgi-bin\" > AllowOverride None Options None Require all granted </Directory> <IfModule headers_module> RequestHeader unset Proxy early </IfModule> <IfModule mime_module> TypesConfig conf/mime.types AddType application/x-compress .Z AddType application/x-gzip .gz .tgz </IfModule> Include conf/extra/httpd-vhosts.conf <IfModule proxy_html_module> Include conf/extra/proxy-html.conf </IfModule> Include conf/myapache.conf <IfModule ssl_module> SSLRandomSeed startup builtin SSLRandomSeed connect builtin </IfModule> Creat Dockerfile for httpd 1 2 3 4 5 6 7 FROM httpd:2.4 WORKDIR /var/www/html COPY ./myapache.conf /usr/local/apache2/conf/ COPY ./httpd.conf /usr/local/apache2/conf/ ADD ./letsencrypt /etc/letsencrypt EXPOSE 80 EXPOSE 443 Start compose 1 docker-compose up -d","title":"apache & wordpress & certbot in docker"},{"location":"Docker/apache/#apache-wordpress-certbot-in-docker","text":"","title":"apache &amp; wordpress &amp; certbot in docker"},{"location":"Docker/apache/#install-docker","text":"","title":"Install docker"},{"location":"Docker/apache/#create-docker-composeyml","text":"edit certbot command 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 version: \"3.3\" services: db: image: mysql:5.7 volumes: - db_data:/var/lib/mysql restart: always environment: MYSQL_ROOT_PASSWORD: somewordpress MYSQL_DATABASE: wordpress MYSQL_USER: wordpress MYSQL_PASSWORD: wordpress wordpress: depends_on: - db image: wordpress:latest ports: - \"8000:80\" restart: always environment: WORDPRESS_DB_HOST: db:3306 WORDPRESS_DB_USER: wordpress WORDPRESS_DB_PASSWORD: wordpress WORDPRESS_DB_NAME: wordpress networks: - app-network httpd: depends_on: - wordpress image: php:apache ports: - \"80:80\" - \"443:443\" volumes: # - ./httpd-container/htdocs:/var/www # - ./httpd-container/conf:/usr/local/apache2/conf - ./000-default.conf:/etc/apache2/sites-available networks: - app-network certbot: depends_on: - httpd image: certbot/certbot container_name: certbot volumes: - certbot-etc:/etc/letsencrypt - wordpress:/var/www/html command: certonly --webroot --webroot-path = /var/www/html --email email@email.com --agree-tos --no-eff-email --staging -d example.com -d www.example.com volumes: db_data: # certbot-etc: wordpress: networks: app-network: driver: bridge","title":"Create docker-compose.yml"},{"location":"Docker/apache/#version1docker-composeyml","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 services: wordpress: image: wordpress:latest depends_on: - db restart: always volumes: - ./wp_data:/var/www/html links: - \"db:db\" environment: WORDPRESS_DB_USER: wp_user WORDPRESS_DB_PASSWORD: 7rHBE1QJAtUWeGW3LjNhhWDkgaLDcaAm WORDPRESS_DB_HOST: db:3306 db: image: mysql:5.7 command: --default-authentication-plugin = mysql_native_password --innodb-use-native-aio = 0 restart: always environment: MYSQL_ROOT_PASSWORD: NZe9ZmZpv00LDYZoRWCNcC4KvaIJKGFM MYSQL_DATABASE: wordpress MYSQL_USER: wp_user MYSQL_PASSWORD: 7rHBE1QJAtUWeGW3LjNhhWDkgaLDcaAm volumes: - ./data:/var/lib/mysql apache: build: . volumes: - ./myapache.conf:/etc/apache2/sites-available/myapache.conf - ./letsencrypt:/etc/letsencrypt # command: tail -f /dev/null ports: - \"80:80\" - \"443:443\" links: - \"wordpress:wordpress\" depends_on: - wordpress - db","title":"version1.docker-compose.yml"},{"location":"Docker/apache/#create-apache-config-httpdconf","text":"edit weburl 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 Listen 443 <VirtualHost default:443> DocumentRoot \"/usr/local/apache2/htdocs\" SSLEngine on SSLCertificateFile /etc/letsencrypt/live/weburl/fullchain.pem SSLCertificateKeyFile /etc/letsencrypt/live/weburl/privkey.pem SSLCertificateChainFile /etc/letsencrypt/live/weburl/fullchain.pem ServerAdmin webmaster@localhost ServerName weburl ServerAlias localhost ProxyRequests Off ProxyPreserveHost On # RequestHeader set Host \"weburl\" RequestHeader set X-Forwarded-Proto \"https\" RequestHeader set X-Forwarded-Port \"443\" ProxyVia On SSLProxyEngine on ProxyPass \"/\" \"http://wordpress/\" ProxyPassReverse \"/\" \"http://wordpress/\" </VirtualHost>","title":"Create apache config: httpd.conf"},{"location":"Docker/apache/#creat-myapacheconf","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 ServerRoot \"/usr/local/apache2\" Listen 80 LoadModule mpm_event_module modules/mod_mpm_event.so LoadModule authn_file_module modules/mod_authn_file.so LoadModule authn_core_module modules/mod_authn_core.so LoadModule authz_host_module modules/mod_authz_host.so LoadModule authz_groupfile_module modules/mod_authz_groupfile.so LoadModule authz_user_module modules/mod_authz_user.so LoadModule authz_core_module modules/mod_authz_core.so LoadModule access_compat_module modules/mod_access_compat.so LoadModule auth_basic_module modules/mod_auth_basic.so LoadModule reqtimeout_module modules/mod_reqtimeout.so LoadModule filter_module modules/mod_filter.so LoadModule proxy_html_module modules/mod_proxy_html.so LoadModule mime_module modules/mod_mime.so LoadModule log_config_module modules/mod_log_config.so LoadModule env_module modules/mod_env.so LoadModule headers_module modules/mod_headers.so LoadModule setenvif_module modules/mod_setenvif.so LoadModule version_module modules/mod_version.so LoadModule proxy_module modules/mod_proxy.so LoadModule proxy_connect_module modules/mod_proxy_connect.so LoadModule proxy_http_module modules/mod_proxy_http.so LoadModule ssl_module modules/mod_ssl.so LoadModule unixd_module modules/mod_unixd.so LoadModule status_module modules/mod_status.so LoadModule autoindex_module modules/mod_autoindex.so <IfModule !mpm_prefork_module> </IfModule> <IfModule mpm_prefork_module> </IfModule> LoadModule dir_module modules/mod_dir.so LoadModule alias_module modules/mod_alias.so <IfModule unixd_module> User daemon Group daemon </IfModule> ServerAdmin you@example.com <Directory /> AllowOverride none Require all denied </Directory> DocumentRoot \"/usr/local/apache2/htdocs\" <Directory \"/usr/local/apache2/htdocs\" > Options Indexes FollowSymLinks AllowOverride None Require all granted </Directory> <IfModule dir_module> DirectoryIndex index.html </IfModule> <Files \".ht*\" > Require all denied </Files> ErrorLog /proc/self/fd/2 LogLevel warn <IfModule log_config_module> LogFormat \"%h %l %u %t \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" combined LogFormat \"%h %l %u %t \\\"%r\\\" %>s %b\" common <IfModule logio_module> LogFormat \"%h %l %u %t \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\" %I %O\" combinedio </IfModule> CustomLog /proc/self/fd/1 common </IfModule> <IfModule alias_module> ScriptAlias /cgi-bin/ \"/usr/local/apache2/cgi-bin/\" </IfModule> <IfModule cgid_module> </IfModule> <Directory \"/usr/local/apache2/cgi-bin\" > AllowOverride None Options None Require all granted </Directory> <IfModule headers_module> RequestHeader unset Proxy early </IfModule> <IfModule mime_module> TypesConfig conf/mime.types AddType application/x-compress .Z AddType application/x-gzip .gz .tgz </IfModule> Include conf/extra/httpd-vhosts.conf <IfModule proxy_html_module> Include conf/extra/proxy-html.conf </IfModule> Include conf/myapache.conf <IfModule ssl_module> SSLRandomSeed startup builtin SSLRandomSeed connect builtin </IfModule>","title":"Creat myapache.conf"},{"location":"Docker/apache/#creat-dockerfile-for-httpd","text":"1 2 3 4 5 6 7 FROM httpd:2.4 WORKDIR /var/www/html COPY ./myapache.conf /usr/local/apache2/conf/ COPY ./httpd.conf /usr/local/apache2/conf/ ADD ./letsencrypt /etc/letsencrypt EXPOSE 80 EXPOSE 443","title":"Creat Dockerfile for httpd"},{"location":"Docker/apache/#start-compose","text":"1 docker-compose up -d","title":"Start compose"},{"location":"Docker/axelor/","text":"Axelor https://docs.axelor.com/abs/5.0/install/docker.html admin jelsz\u00f3 csere: 1 bench set-admin-password [ password ] / 1 frappe --set_admin_password [ new password ]","title":"Axelor"},{"location":"Docker/axelor/#axelor","text":"https://docs.axelor.com/abs/5.0/install/docker.html admin jelsz\u00f3 csere: 1 bench set-admin-password [ password ] / 1 frappe --set_admin_password [ new password ]","title":"Axelor"},{"location":"Docker/certbot/","text":"certbot install certbot install to ubuntu with apache 1 2 3 4 apt-get update apt-get install software-properties-common add-apt-repository universe add-apt-repository ppa:certbot/certbot certbot apache package apt install python-certbot-apache 1 apt-get install certbot python3-certbot-apache automatical start 1 certbot --apache config certbot with hand 1 certbot --apache -d keitest.ml -d www.keitest.ml ssl test website test for the certbot auto restart 1 certbot renew --dry-run .yml-ben a web r\u00e9szhez becsatolni volumes: - ./default.conf:/etc/nginx/conf.d/default.conf - ./letsencrypt/:/etc/letsencrypt script in the docker 1 docker run -it --name letsencrypt -v ` pwd ` /wp_data/.well-known/:/var/www/html/.well-known -v ` pwd ` /letsencrypt/:/etc/letsencrypt --entrypoint sh --rm certbot/certbot futtat\u00e1s -it n\u00e9lk\u00fcl 1 certbot certonly --no-bootstrap --webroot -w /var/www/html/ -d letsencrypt.keikami.tk --non-interactive --agree-tos --email m.peti@irdmeg.hu \u00fajra k\u00e9ri a tanus\u00edtv\u00e1nyt 1 certbot renew Scriptel & Crontab 1 2 3 #!/bin/bash docker run --name letsencrypt -v ` pwd ` /wp_data/.well-known/:/var/www/html/.well-known -v ` pwd ` /letsencrypt/:/etc/letsencrypt --rm certbot/certbot renew Crontab fileba a parancs 1 sudo nano /etc/crontab 1 0 2 * * 0 root bash /home/test1/letsencrypt.sh 2 > & 1 >>/tmp/log.txt","title":"certbot install"},{"location":"Docker/certbot/#certbot-install","text":"","title":"certbot install"},{"location":"Docker/certbot/#certbot-install-to-ubuntu-with-apache","text":"1 2 3 4 apt-get update apt-get install software-properties-common add-apt-repository universe add-apt-repository ppa:certbot/certbot","title":"certbot install to ubuntu with apache"},{"location":"Docker/certbot/#certbot-apache-package","text":"","title":"certbot apache package"},{"location":"Docker/certbot/#apt-install-python-certbot-apache","text":"1 apt-get install certbot python3-certbot-apache","title":"apt install python-certbot-apache"},{"location":"Docker/certbot/#automatical-start","text":"1 certbot --apache","title":"automatical start"},{"location":"Docker/certbot/#config-certbot-with-hand","text":"1 certbot --apache -d keitest.ml -d www.keitest.ml","title":"config certbot with hand"},{"location":"Docker/certbot/#ssl-test-website","text":"","title":"ssl test website"},{"location":"Docker/certbot/#test-for-the-certbot-auto-restart","text":"1 certbot renew --dry-run","title":"test for the certbot auto restart"},{"location":"Docker/certbot/#yml-ben-a-web-reszhez-becsatolni","text":"volumes: - ./default.conf:/etc/nginx/conf.d/default.conf - ./letsencrypt/:/etc/letsencrypt","title":".yml-ben a web r\u00e9szhez becsatolni"},{"location":"Docker/certbot/#script-in-the-docker","text":"1 docker run -it --name letsencrypt -v ` pwd ` /wp_data/.well-known/:/var/www/html/.well-known -v ` pwd ` /letsencrypt/:/etc/letsencrypt --entrypoint sh --rm certbot/certbot","title":"script in the docker"},{"location":"Docker/certbot/#futtatas-it-nelkul","text":"1 certbot certonly --no-bootstrap --webroot -w /var/www/html/ -d letsencrypt.keikami.tk --non-interactive --agree-tos --email m.peti@irdmeg.hu","title":"futtat\u00e1s -it n\u00e9lk\u00fcl"},{"location":"Docker/certbot/#ujra-keri-a-tanusitvanyt","text":"1 certbot renew","title":"\u00fajra k\u00e9ri a tanus\u00edtv\u00e1nyt"},{"location":"Docker/certbot/#scriptel-crontab","text":"1 2 3 #!/bin/bash docker run --name letsencrypt -v ` pwd ` /wp_data/.well-known/:/var/www/html/.well-known -v ` pwd ` /letsencrypt/:/etc/letsencrypt --rm certbot/certbot renew Crontab fileba a parancs 1 sudo nano /etc/crontab 1 0 2 * * 0 root bash /home/test1/letsencrypt.sh 2 > & 1 >>/tmp/log.txt","title":"Scriptel &amp; Crontab"},{"location":"Docker/convos/","text":"Convos install docker install Convos in docker 1 2 3 4 5 docker pull nordaaker/convos:stable docker run -it -p 8080 :3000 \\ -v $HOME /convos/data:/data \\ nordaaker/convos:stable","title":"Convos"},{"location":"Docker/convos/#convos","text":"install docker install Convos in docker 1 2 3 4 5 docker pull nordaaker/convos:stable docker run -it -p 8080 :3000 \\ -v $HOME /convos/data:/data \\ nordaaker/convos:stable","title":"Convos"},{"location":"Docker/gitlab/","text":"Gitlab Docker install edit docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 version: '3' services: web: image: 'gitlab/gitlab-ce:13.6.3-ce.0' restart: always hostname: 'DOMAIN.com' environment: GITLAB_OMNIBUS_CONFIG: | external_url 'https://DOMAIN.com' ports: - '80:80' - '443:443' - '22:22' volumes: - './gitlab-data/config:/etc/gitlab' - './gitlab-data/logs:/var/log/gitlab' - './gitlab-data/data:/var/opt/gitlab' run 1 docker-compose up -d","title":"Gitlab"},{"location":"Docker/gitlab/#gitlab","text":"","title":"Gitlab"},{"location":"Docker/gitlab/#docker-install","text":"","title":"Docker install"},{"location":"Docker/gitlab/#edit-docker-composeyml","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 version: '3' services: web: image: 'gitlab/gitlab-ce:13.6.3-ce.0' restart: always hostname: 'DOMAIN.com' environment: GITLAB_OMNIBUS_CONFIG: | external_url 'https://DOMAIN.com' ports: - '80:80' - '443:443' - '22:22' volumes: - './gitlab-data/config:/etc/gitlab' - './gitlab-data/logs:/var/log/gitlab' - './gitlab-data/data:/var/opt/gitlab'","title":"edit docker-compose.yml"},{"location":"Docker/gitlab/#run","text":"1 docker-compose up -d","title":"run"},{"location":"Docker/kanboard/","text":"Kanboard install docker docker run kanboard important basic user & pw:admin; admin. 1 docker run -d --name kanboard -p 80 :80 -t kanboard/kanboard:v1.2.8 -docker-compose.yml kanboard with mariadb 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 version: '3' services: kanboard: image: kanboard/kanboard:latest ports: - \"80:80\" - \"443:443\" volumes: - kanboard_data:/var/www/app/data - kanboard_plugins:/var/www/app/plugins - kanboard_ssl:/etc/nginx/ssl environment: DATABASE_URL: mysql://kanboard:kanboard-secret@db/kanboard db: image: mariadb:latest command: --default-authentication-plugin = mysql_native_password environment: MYSQL_ROOT_PASSWORD: secret MYSQL_DATABASE: kanboard MYSQL_USER: kanboard MYSQL_PASSWORD: kanboard-secret volumes: kanboard_data: kanboard_plugins: kanboard_ssl:","title":"Kanboard"},{"location":"Docker/kanboard/#kanboard","text":"install docker docker run kanboard important basic user & pw:admin; admin. 1 docker run -d --name kanboard -p 80 :80 -t kanboard/kanboard:v1.2.8 -docker-compose.yml kanboard with mariadb 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 version: '3' services: kanboard: image: kanboard/kanboard:latest ports: - \"80:80\" - \"443:443\" volumes: - kanboard_data:/var/www/app/data - kanboard_plugins:/var/www/app/plugins - kanboard_ssl:/etc/nginx/ssl environment: DATABASE_URL: mysql://kanboard:kanboard-secret@db/kanboard db: image: mariadb:latest command: --default-authentication-plugin = mysql_native_password environment: MYSQL_ROOT_PASSWORD: secret MYSQL_DATABASE: kanboard MYSQL_USER: kanboard MYSQL_PASSWORD: kanboard-secret volumes: kanboard_data: kanboard_plugins: kanboard_ssl:","title":"Kanboard"},{"location":"Docker/odoo/","text":"Odoo https://hub.docker.com/_/odoo docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 version: '2' services: web: image: odoo:12.0 depends_on: - db ports: - \"8069:8069\" volumes: - odoo-web-data:/var/lib/odoo - ./config:/etc/odoo - ./addons:/mnt/extra-addons db: image: postgres:10 environment: - POSTGRES_DB = postgres - POSTGRES_PASSWORD = odoo - POSTGRES_USER = odoo - PGDATA = /var/lib/postgresql/data/pgdata volumes: - odoo-db-data:/var/lib/postgresql/data/pgdata volumes: odoo-web-data: odoo-db-data: 1 docker-compose up -d","title":"Odoo"},{"location":"Docker/odoo/#odoo","text":"https://hub.docker.com/_/odoo docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 version: '2' services: web: image: odoo:12.0 depends_on: - db ports: - \"8069:8069\" volumes: - odoo-web-data:/var/lib/odoo - ./config:/etc/odoo - ./addons:/mnt/extra-addons db: image: postgres:10 environment: - POSTGRES_DB = postgres - POSTGRES_PASSWORD = odoo - POSTGRES_USER = odoo - PGDATA = /var/lib/postgresql/data/pgdata volumes: - odoo-db-data:/var/lib/postgresql/data/pgdata volumes: odoo-web-data: odoo-db-data: 1 docker-compose up -d","title":"Odoo"},{"location":"Docker/ofbiz/","text":"Ofbiz Apache https://hub.docker.com/r/opensourceknight/ofbiz https://www.watfordconsulting.com/2020/04/01/building-apache-ofbiz-docker-images/ https://github.com/Novite5/ofbiz-erp-docker/blob/master/docker-compose.yml","title":"Ofbiz Apache"},{"location":"Docker/ofbiz/#ofbiz-apache","text":"https://hub.docker.com/r/opensourceknight/ofbiz https://www.watfordconsulting.com/2020/04/01/building-apache-ofbiz-docker-images/ https://github.com/Novite5/ofbiz-erp-docker/blob/master/docker-compose.yml","title":"Ofbiz Apache"},{"location":"Docker/pritunl/","text":"Pritunl Telep\u00edt\u00e9s 1 2 apt-get update && apt-get upgrade -y nano docker-compose.yml docker-compose f\u00e1jl tartalma: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 version : '3' services : mongo : image : mongo : latest container_name : pritunldb hostname : pritunldb network_mode : bridge volumes : - . / db : / data / db pritunl : image : goofball222 / pritunl : latest container_name : pritunl hostname : pritunl depends_on : - mongo network_mode : bridge privileged : true sysctls : - net . ipv6 . conf . all . disable_ipv6 = 0 links : - mongo volumes : - / etc / localtime : / etc / localtime : ro ports : - 80 : 80 - 443 : 443 - 1194 : 1194 - 1194 : 1194 / udp - 1195 : 1195 / udp environment : - TZ = UTC 1 docker-compose up B\u00f6ng\u00e9sz\u0151ben szerveripc\u00edm:80-portj\u00e1n lehet hozz\u00e1 f\u00e9rni Kikeress\u00fck a pritunel azonos\u00edtuj\u00e1t majd azzal bele l\u00e9p\u00fcnk a kont\u00e9ner\u00e9be 1 docker ps 1 docker exec -it azonos\u00edt\u00f3 bash kont\u00e9neren bel\u00fcl kik\u00e9rj\u00fck a felhaszn\u00e1l\u00f3t \u00e9s a jelsz\u00f3t, pr\u00f3b\u00e1ld sudo n\u00e9lk\u00fcl ha nem m\u0171k\u00f6dik 1 sudo pritunl default-password Bel\u00e9p\u00fcnk a b\u00f6ng\u00e9sz\u00f6s fel\u00fcleten. l\u00e9trehozzunk egy szervert a nyitott portal jelen esettben 1194/tcp pritunl OpenVPN service port \u00e9s startoljuk a szervert l\u00e9trehozunk egy oranisationt \u00e9s hozz\u00e1 adjuk a szerverhez l\u00e9trehozunk egy usert is \u00e9s megjegyezz\u00fck a pinkodj\u00e1t Let\u00f6ltj\u00fck a pritunl kliens\u00e9t, nem musz\u00e1j 1 2 3 4 5 6 7 sudo tee /etc/apt/sources.list.d/pritunl.list << EOF deb https://repo.pritunl.com/stable/apt bionic main EOF sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com --recv 7568D9BB55FF9E5287D586017AE645C0CF8E292A sudo apt-get update sudo apt-get install pritunl-client-electron Elind\u00edtjuk majd az user inform\u00e1ci\u00f3s file-t let\u00f6ltj\u00fck a szerver oldal\u00e1r\u00f3l, bet\u00f6ltj\u00fck, connect-el\u00fcnk pinkod seg\u00edts\u00e9g\u00e9vel.","title":"Pritunl"},{"location":"Docker/pritunl/#pritunl","text":"","title":"Pritunl"},{"location":"Docker/pritunl/#telepites","text":"1 2 apt-get update && apt-get upgrade -y nano docker-compose.yml docker-compose f\u00e1jl tartalma: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 version : '3' services : mongo : image : mongo : latest container_name : pritunldb hostname : pritunldb network_mode : bridge volumes : - . / db : / data / db pritunl : image : goofball222 / pritunl : latest container_name : pritunl hostname : pritunl depends_on : - mongo network_mode : bridge privileged : true sysctls : - net . ipv6 . conf . all . disable_ipv6 = 0 links : - mongo volumes : - / etc / localtime : / etc / localtime : ro ports : - 80 : 80 - 443 : 443 - 1194 : 1194 - 1194 : 1194 / udp - 1195 : 1195 / udp environment : - TZ = UTC 1 docker-compose up B\u00f6ng\u00e9sz\u0151ben szerveripc\u00edm:80-portj\u00e1n lehet hozz\u00e1 f\u00e9rni Kikeress\u00fck a pritunel azonos\u00edtuj\u00e1t majd azzal bele l\u00e9p\u00fcnk a kont\u00e9ner\u00e9be 1 docker ps 1 docker exec -it azonos\u00edt\u00f3 bash kont\u00e9neren bel\u00fcl kik\u00e9rj\u00fck a felhaszn\u00e1l\u00f3t \u00e9s a jelsz\u00f3t, pr\u00f3b\u00e1ld sudo n\u00e9lk\u00fcl ha nem m\u0171k\u00f6dik 1 sudo pritunl default-password Bel\u00e9p\u00fcnk a b\u00f6ng\u00e9sz\u00f6s fel\u00fcleten. l\u00e9trehozzunk egy szervert a nyitott portal jelen esettben 1194/tcp pritunl OpenVPN service port \u00e9s startoljuk a szervert l\u00e9trehozunk egy oranisationt \u00e9s hozz\u00e1 adjuk a szerverhez l\u00e9trehozunk egy usert is \u00e9s megjegyezz\u00fck a pinkodj\u00e1t Let\u00f6ltj\u00fck a pritunl kliens\u00e9t, nem musz\u00e1j 1 2 3 4 5 6 7 sudo tee /etc/apt/sources.list.d/pritunl.list << EOF deb https://repo.pritunl.com/stable/apt bionic main EOF sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com --recv 7568D9BB55FF9E5287D586017AE645C0CF8E292A sudo apt-get update sudo apt-get install pritunl-client-electron Elind\u00edtjuk majd az user inform\u00e1ci\u00f3s file-t let\u00f6ltj\u00fck a szerver oldal\u00e1r\u00f3l, bet\u00f6ltj\u00fck, connect-el\u00fcnk pinkod seg\u00edts\u00e9g\u00e9vel.","title":"Telep\u00edt\u00e9s"},{"location":"Docker/wekan/","text":"Wekan clone the github repo 1 git clone https://github.com/wekan/wekan.git start docker-compose 1 docker-compose up","title":"Wekan"},{"location":"Docker/wekan/#wekan","text":"clone the github repo 1 git clone https://github.com/wekan/wekan.git start docker-compose 1 docker-compose up","title":"Wekan"},{"location":"Docker/FTPD/proftpd/","text":"Proftpd - Instal Install Install with mysql Update 1 2 3 apt-get update -y \\ && apt-get upgrade -y \\ && apt-get install proftpd -y Start 1 2 systemctl start proftpd systemctl enable proftpd Default config 1 nano /etc/proftpd/proftpd.conf A fenti be\u00e1ll\u00edt\u00e1st megv\u00e1ltoztathatja a k\u00f6vetelm\u00e9nyei szerint, az al\u00e1bbiak szerint: Kiszolg\u00e1l\u00f3n\u00e9v: Megv\u00e1ltoztathatja alap\u00e9rtelmezett kiszolg\u00e1l\u00f3n\u00e9vk\u00e9nt. UseIPV6: Kikapcsolhatja. DefaultRoot: A sor visszavon\u00e1sa n\u00e9lk\u00fcl korl\u00e1tozhatja a felhaszn\u00e1l\u00f3kat az otthoni mapp\u00e1kkal. Port: Megadhatja a saj\u00e1t portj\u00e1t annak megv\u00e1ltoztat\u00e1s\u00e1val. SystemLog: A napl\u00f3f\u00e1jl alap\u00e9rtelmezett helye. Megv\u00e1ltoztathatja azt az \u00d6n ig\u00e9nyei szerint. Tls prftpd 1 apt-get install openssl -y ssl 1 openssl req -x509 -newkey rsa:1024 -keyout /etc/ssl/private/proftpd.key -out /etc/ssl/certs/proftpd.crt -nodes -days 365 jogok 1 2 chmod 600 /etc/ssl/private/proftpd.key chmod 600 /etc/ssl/certs/proftpd.crt SSL konfig 1 nano /etc/proftpd/proftpd.conf Uncomment the following line: 1 Include /etc/proftpd/tls.conf Change the following lines: 1 2 3 4 5 6 7 8 TLSRSACertificateFile /etc/ssl/certs/proftpd.crt TLSRSACertificateKeyFile /etc/ssl/private/proftpd.key TLSEngine on TLSLog /var/log/proftpd/tls.log TLSProtocol SSLv23 TLSRequired on TLSOptions NoCertRequest EnableDiags NoSessionReuseRequired TLSVerifyClient off 1 systemctl restart proftpd Create User for ProFTPD 1 useradd ftp1 1 2 3 mkdir /home/ftp1 mkdir /home/ftp1/testuser chown ftp1:nogroup ftp1/* -R 1 2 mkdir /home/ftp1/ftp chown ftp1:nogroup ftp1/* -R SFTP 1 2 3 4 5 chown ftp1:nogroup /home/ftp1 chmod 755 /home chmod 755 /home/ftp1 chown ftp1:ftpusersonlygroup /home/ftp1/* chmod 775 -R /home/ftp1/* Passiv ftp be\u00e1ll\u00edt\u00e1s 1 nano /etc/proftpd/modules.conf sorok hozz\u00e1 ad\u00e1sa 1 2 3 4 5 6 PassivePorts 60000 65535 AllowStoreRestart on AllowRetrieveRestart on TimeoutNoTransfer 65535 ListOptions \"-la\" TimeoutIdle 65535 \u00faj t\u0171zfall szab\u00e1ly 1 iptables -A INPUT -p tcp -m tcp --dport 60000 :65535 -j ACCEPT szab\u00e1ly ment\u00e9se(nem tal\u00e1ltam de j\u00f3 volt) 1 iptables-save > /etc/sysconfig/iptables t\u0171zfalon kiny\u00edtni a 60000-65535portokat SFTP 1 sudo nano /etc/proftpd/proftpd.conf url or ip 1 ServerName \"yourDomainOrIPAddress\" uncomment it: 1 DefaultRoot ~ config f\u00e1jl egyben servernevet \u00e1t \u00edrni minimum: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 Include /etc/proftpd/modules.conf UseIPv6 on IdentLookups off ServerName 34 .68.219.22 ServerType standalone DeferWelcome off MultilineRFC2228 on DefaultServer on ShowSymlinks on TimeoutNoTransfer 600 TimeoutStalled 600 TimeoutIdle 1200 DisplayLogin welcome.msg DisplayChdir .message true ListOptions \"-l\" DenyFilter \\* .*/ DefaultRoot ~ Port 21 <IfModule mod_dynmasq.c> </IfModule> MaxInstances 30 User proftpd Group nogroup Umask 022 022 AllowOverwrite on TransferLog /var/log/proftpd/xferlog SystemLog /var/log/proftpd/proftpd.log <IfModule mod_quotatab.c> QuotaEngine off </IfModule> <IfModule mod_ratio.c> Ratios off </IfModule> <IfModule mod_delay.c> DelayEngine on </IfModule> <IfModule mod_ctrls.c> ControlsEngine off ControlsMaxClients 2 ControlsLog /var/log/proftpd/controls.log ControlsInterval 5 ControlsSocket /var/run/proftpd/proftpd.sock </IfModule> <IfModule mod_ctrls_admin.c> AdminControlsEngine off </IfModule> Include /etc/proftpd/tls.conf Include /etc/proftpd/conf.d/ Configure SFTP Access with ProFTPd 1 sudo nano /etc/proftpd/conf.d/sftp.conf 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #<IfModule mod_sftp.c> SFTPEngine on Port 2222 SFTPLog /var/log/proftpd/sftp.log # Configure both the RSA and DSA host keys, using the same host key # files that OpenSSH uses. # SFTPHostKey /etc/ssl/private/proftpd.key # SFTPHostKey /etc/ssl/certs/proftpd.crt SFTPHostKey /etc/ssh/ssh_host_rsa_key SFTPHostKey /etc/ssh/ssh_host_dsa_key SFTPAuthMethods publickey SFTPAuthorizedUserKeys file:/etc/proftpd/authorized_keys/%u # Enable compression SFTPCompression delayed #</IfModule> Configure Key Based Authentication Beleteni az ssh kulcsot az user f\u00e1jl\u00e1ba 1 2 mkdir /etc/proftpd/authorized_keys nano /etc/proftpd/authorized_keys/ftp1 1 ssh-keygen -e -f /home/moha/.ssh/authorized_keys | tee /etc/proftpd/authorized_keys/ftp1 1 service proftpd restart 1 nano /etc/ssh/sshd_config kikomentelni ezt a sort: 1 Subsystem sftp /usr/lib/openssh/sftp-server ssh \u00fajraind\u00edt\u00e1sa 1 service ssh restart Docker verzi\u00f3 El\u0151felt\u00e9tel: Docker telep\u00edt\u00e9se szerveren enged\u00e9lyezve legyenek a kell\u0151 portok 1 nano Dockerfile 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 FROM ubuntu:alpine RUN apt-get update -y \\ && apt-get upgrade -y \\ && apt-get install proftpd -y \\ && useradd ftp1 RUN echo \"test123\\ntest123\" | passwd \"ftp1\" \\ && mkdir /home/ftp1 \\ && mkdir /home/ftp1/testuser \\ && chown ftp1:nogroup /home/ftp1 -R \\ && echo \"PassivePorts 60000 65535 \\ AllowStoreRestart on \\ AllowRetrieveRestart on \\ TimeoutNoTransfer 65535 \\ ListOptions \\\"-la\\\" \\ TimeoutIdle 65535\" >> /etc/proftpd/modules.conf CMD proftpd -c /etc/proftpd/proftpd.conf -n 1 2 docker build -t moha:tlspro . docker run -d --net host moha:tlspro","title":"Proftpd"},{"location":"Docker/FTPD/proftpd/#proftpd","text":"","title":"Proftpd"},{"location":"Docker/FTPD/proftpd/#-instal","text":"Install Install with mysql Update 1 2 3 apt-get update -y \\ && apt-get upgrade -y \\ && apt-get install proftpd -y Start 1 2 systemctl start proftpd systemctl enable proftpd Default config 1 nano /etc/proftpd/proftpd.conf A fenti be\u00e1ll\u00edt\u00e1st megv\u00e1ltoztathatja a k\u00f6vetelm\u00e9nyei szerint, az al\u00e1bbiak szerint: Kiszolg\u00e1l\u00f3n\u00e9v: Megv\u00e1ltoztathatja alap\u00e9rtelmezett kiszolg\u00e1l\u00f3n\u00e9vk\u00e9nt. UseIPV6: Kikapcsolhatja. DefaultRoot: A sor visszavon\u00e1sa n\u00e9lk\u00fcl korl\u00e1tozhatja a felhaszn\u00e1l\u00f3kat az otthoni mapp\u00e1kkal. Port: Megadhatja a saj\u00e1t portj\u00e1t annak megv\u00e1ltoztat\u00e1s\u00e1val. SystemLog: A napl\u00f3f\u00e1jl alap\u00e9rtelmezett helye. Megv\u00e1ltoztathatja azt az \u00d6n ig\u00e9nyei szerint. Tls prftpd 1 apt-get install openssl -y ssl 1 openssl req -x509 -newkey rsa:1024 -keyout /etc/ssl/private/proftpd.key -out /etc/ssl/certs/proftpd.crt -nodes -days 365 jogok 1 2 chmod 600 /etc/ssl/private/proftpd.key chmod 600 /etc/ssl/certs/proftpd.crt","title":"- Instal"},{"location":"Docker/FTPD/proftpd/#ssl-konfig","text":"1 nano /etc/proftpd/proftpd.conf Uncomment the following line: 1 Include /etc/proftpd/tls.conf Change the following lines: 1 2 3 4 5 6 7 8 TLSRSACertificateFile /etc/ssl/certs/proftpd.crt TLSRSACertificateKeyFile /etc/ssl/private/proftpd.key TLSEngine on TLSLog /var/log/proftpd/tls.log TLSProtocol SSLv23 TLSRequired on TLSOptions NoCertRequest EnableDiags NoSessionReuseRequired TLSVerifyClient off 1 systemctl restart proftpd","title":"SSL konfig"},{"location":"Docker/FTPD/proftpd/#create-user-for-proftpd","text":"1 useradd ftp1 1 2 3 mkdir /home/ftp1 mkdir /home/ftp1/testuser chown ftp1:nogroup ftp1/* -R 1 2 mkdir /home/ftp1/ftp chown ftp1:nogroup ftp1/* -R SFTP 1 2 3 4 5 chown ftp1:nogroup /home/ftp1 chmod 755 /home chmod 755 /home/ftp1 chown ftp1:ftpusersonlygroup /home/ftp1/* chmod 775 -R /home/ftp1/* Passiv ftp be\u00e1ll\u00edt\u00e1s 1 nano /etc/proftpd/modules.conf sorok hozz\u00e1 ad\u00e1sa 1 2 3 4 5 6 PassivePorts 60000 65535 AllowStoreRestart on AllowRetrieveRestart on TimeoutNoTransfer 65535 ListOptions \"-la\" TimeoutIdle 65535 \u00faj t\u0171zfall szab\u00e1ly 1 iptables -A INPUT -p tcp -m tcp --dport 60000 :65535 -j ACCEPT szab\u00e1ly ment\u00e9se(nem tal\u00e1ltam de j\u00f3 volt) 1 iptables-save > /etc/sysconfig/iptables t\u0171zfalon kiny\u00edtni a 60000-65535portokat","title":"Create User for ProFTPD"},{"location":"Docker/FTPD/proftpd/#sftp","text":"1 sudo nano /etc/proftpd/proftpd.conf url or ip 1 ServerName \"yourDomainOrIPAddress\" uncomment it: 1 DefaultRoot ~ config f\u00e1jl egyben servernevet \u00e1t \u00edrni minimum: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 Include /etc/proftpd/modules.conf UseIPv6 on IdentLookups off ServerName 34 .68.219.22 ServerType standalone DeferWelcome off MultilineRFC2228 on DefaultServer on ShowSymlinks on TimeoutNoTransfer 600 TimeoutStalled 600 TimeoutIdle 1200 DisplayLogin welcome.msg DisplayChdir .message true ListOptions \"-l\" DenyFilter \\* .*/ DefaultRoot ~ Port 21 <IfModule mod_dynmasq.c> </IfModule> MaxInstances 30 User proftpd Group nogroup Umask 022 022 AllowOverwrite on TransferLog /var/log/proftpd/xferlog SystemLog /var/log/proftpd/proftpd.log <IfModule mod_quotatab.c> QuotaEngine off </IfModule> <IfModule mod_ratio.c> Ratios off </IfModule> <IfModule mod_delay.c> DelayEngine on </IfModule> <IfModule mod_ctrls.c> ControlsEngine off ControlsMaxClients 2 ControlsLog /var/log/proftpd/controls.log ControlsInterval 5 ControlsSocket /var/run/proftpd/proftpd.sock </IfModule> <IfModule mod_ctrls_admin.c> AdminControlsEngine off </IfModule> Include /etc/proftpd/tls.conf Include /etc/proftpd/conf.d/","title":"SFTP"},{"location":"Docker/FTPD/proftpd/#configure-sftp-access-with-proftpd","text":"1 sudo nano /etc/proftpd/conf.d/sftp.conf 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #<IfModule mod_sftp.c> SFTPEngine on Port 2222 SFTPLog /var/log/proftpd/sftp.log # Configure both the RSA and DSA host keys, using the same host key # files that OpenSSH uses. # SFTPHostKey /etc/ssl/private/proftpd.key # SFTPHostKey /etc/ssl/certs/proftpd.crt SFTPHostKey /etc/ssh/ssh_host_rsa_key SFTPHostKey /etc/ssh/ssh_host_dsa_key SFTPAuthMethods publickey SFTPAuthorizedUserKeys file:/etc/proftpd/authorized_keys/%u # Enable compression SFTPCompression delayed #</IfModule> Configure Key Based Authentication Beleteni az ssh kulcsot az user f\u00e1jl\u00e1ba 1 2 mkdir /etc/proftpd/authorized_keys nano /etc/proftpd/authorized_keys/ftp1 1 ssh-keygen -e -f /home/moha/.ssh/authorized_keys | tee /etc/proftpd/authorized_keys/ftp1 1 service proftpd restart 1 nano /etc/ssh/sshd_config kikomentelni ezt a sort: 1 Subsystem sftp /usr/lib/openssh/sftp-server ssh \u00fajraind\u00edt\u00e1sa 1 service ssh restart","title":"Configure SFTP Access with ProFTPd"},{"location":"Docker/FTPD/proftpd/#docker-verzio","text":"El\u0151felt\u00e9tel: Docker telep\u00edt\u00e9se szerveren enged\u00e9lyezve legyenek a kell\u0151 portok 1 nano Dockerfile 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 FROM ubuntu:alpine RUN apt-get update -y \\ && apt-get upgrade -y \\ && apt-get install proftpd -y \\ && useradd ftp1 RUN echo \"test123\\ntest123\" | passwd \"ftp1\" \\ && mkdir /home/ftp1 \\ && mkdir /home/ftp1/testuser \\ && chown ftp1:nogroup /home/ftp1 -R \\ && echo \"PassivePorts 60000 65535 \\ AllowStoreRestart on \\ AllowRetrieveRestart on \\ TimeoutNoTransfer 65535 \\ ListOptions \\\"-la\\\" \\ TimeoutIdle 65535\" >> /etc/proftpd/modules.conf CMD proftpd -c /etc/proftpd/proftpd.conf -n 1 2 docker build -t moha:tlspro . docker run -d --net host moha:tlspro","title":"Docker verzi\u00f3"},{"location":"Docker/FTPD/pureftpd/","text":"Pureftpd Install pureftpd 1 2 apt update apt-get install pure-ftpd 1 2 3 sudo systemctl stop pure-ftpd.service sudo systemctl start pure-ftpd.service sudo systemctl enable pure-ftpd.service 1 sudo openssl req -x509 -nodes -newkey rsa:2048 -keyout /etc/ssl/private/pure-ftpd.pem -out /etc/ssl/private/pure-ftpd.pem -days 365 Configuring Pure-FTPD to use SSL/TLS 1 echo \"2\" > /etc/pure-ftpd/conf/TLS 1 sudo systemctl restart pure-ftpd","title":"Pureftpd"},{"location":"Docker/FTPD/pureftpd/#pureftpd","text":"Install pureftpd 1 2 apt update apt-get install pure-ftpd 1 2 3 sudo systemctl stop pure-ftpd.service sudo systemctl start pure-ftpd.service sudo systemctl enable pure-ftpd.service 1 sudo openssl req -x509 -nodes -newkey rsa:2048 -keyout /etc/ssl/private/pure-ftpd.pem -out /etc/ssl/private/pure-ftpd.pem -days 365 Configuring Pure-FTPD to use SSL/TLS 1 echo \"2\" > /etc/pure-ftpd/conf/TLS 1 sudo systemctl restart pure-ftpd","title":"Pureftpd"},{"location":"Docker/FTPD/vsftpd/","text":"vsftpd Vftpd install tutrial Install & start 1 2 3 apt-get update apt-get install apt-get install vsftpd -y 1 2 systemctl start vsftpd systemctl enable vsftpd Creat user, write password. 1 adduser vsftp creat dir. add grupp & chmod 1 2 3 mkdir /home/vsftp/ftp chown nobody:nogroup /home/vsftp/ftp chmod a-w /home/vsftp/ftp creat dir. where files can be upload and give ownership to vstp user 1 2 mkdir /home/vsftp/ftp/test chown vsftp:vsftp /home/vsftp/ftp/test First, create a backup of original config file 1 cp /etc/vsftpd.conf /etc/vsftpd.conf.bak 1 nano /etc/vsftpd.conf quick content deletion 1 > /etc/vsftpd.conf vsftpd.conf: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 listen = NO listen_ipv6 = YES anonymous_enable = NO local_enable = YES write_enable = YES local_umask = 022 dirmessage_enable = YES use_localtime = YES xferlog_enable = YES connect_from_port_20 = YES chroot_local_user = YES secure_chroot_dir = /var/run/vsftpd/empty pam_service_name = vsftpd pasv_enable = Yes pasv_min_port = 10000 pasv_max_port = 11000 user_sub_token = $USER local_root = /home/ $USER /ftp userlist_enable = YES userlist_file = /etc/vsftpd.userlist userlist_deny = NO Add the use for the vftpd userlist 1 nano /etc/vsftpd.userlist vftpd restart 1 systemctl restart vsftpd Install vsftpd, MySQL And phpMyAdmin Need root privileges, use sudo or 1 sudo su 1 apt-get -y install vsftpd libpam-mysql mysql-server mysql-client phpmyadmin libpam-ldap You will be asked the following questions: 1 2 3 4 5 6 7 8 9 10 11 12 13 * New password for the MySQL \"root\" user: <-- **yourrootsqlpassword** - Repeat password for the MySQL \"root\" user: <-- **yourrootsqlpassword** - LDAP server Uniform Resource Identifier: <-- **ENTER** - Distinguished name of the search base: <-- **ENTER** - LDAP version to use: <-- **3** - Make local root Database admin: <-- **Yes** - Does the LDAP database require login? <-- **No** - LDAP account for root: <-- **ENTER** - LDAP root account password: <-- **ldaprootpw** * Web server to configure automatically: <-- **Select the option: apache2** * Configure database for phpmyadmin with dbconfig-common? <-- **Yes** * Password of the database ' s administrative user: <-- **Enter the MariaDB root password** * MySQL application password for phpmyadmin: <-- **Press enter, - apt will create a random password automatically.** Create the MySQL Database for vsftpd 1 mysql --defaults-file = /etc/mysql/debian.cnf R\u00e9gi 1 2 3 4 CREATE DATABASE vsftpd ; GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP ON vsftpd.* TO 'vsftpd' @ 'localhost' IDENTIFIED BY 'ftpdpass' ; GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP ON vsftpd.* TO 'vsftpd' @ 'localhost.localdomain' IDENTIFIED BY 'ftpdpass' ; FLUSH PRIVILEGES ; \u00daj 1 2 3 4 CREATE DATABASE vsftpd ; CREATE USER 'vsftpd' @ 'localhost' IDENTIFIED WITH caching_sha2_password BY 'ftpdpass' ; GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP ON vsftpd.* to 'vsftpd' @ 'localhost' ; FLUSH PRIVILEGES ; 1 USE vsftpd ; 1 2 3 4 5 6 7 8 CREATE TABLE ` accounts ` ( ` id ` INT NOT NULL AUTO_INCREMENT PRIMARY KEY , ` username ` VARCHAR ( 30 ) NOT NULL , ` pass ` VARCHAR ( 50 ) NOT NULL , UNIQUE ( ` username ` ) ) ; 1 quit ; Configure vsftpd 1 useradd --home /home/vsftpd --gid nogroup -m --shell /bin/false vsftpd 1 2 3 cp /etc/vsftpd.conf /etc/vsftpd.conf_orig cat /dev/null > /etc/vsftpd.conf nano /etc/vsftpd.conf Example conf.: Readme for conf. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 listen = YES anonymous_enable = NO local_enable = YES write_enable = YES local_umask = 022 dirmessage_enable = YES xferlog_enable = YES connect_from_port_20 = YES nopriv_user = vsftpd chroot_local_user = YES secure_chroot_dir = /var/run/vsftpd pam_service_name = vsftpd rsa_cert_file = /etc/ssl/certs/vsftpd.pem guest_enable = YES guest_username = vsftpd local_root = /home/vsftpd/ $USER user_sub_token = $USER virtual_use_local_privs = YES user_config_dir = /etc/vsftpd_user_conf With the user_config_dir option you can specify a directory for per-user configuration files that override parts of the global settings. This is totally optional and up to you if you want to use this feature. However, we should create that directory now: 1 mkdir /etc/vsftpd_user_conf Now we must configure PAM so that it uses the MySQL database to authenticate our virtual FTP users instead of /etc/passwd and /etc/shadow. The PAM configuration for vsftpd is in /etc/pam.d/vsftpd. We make a backup of the original file and create a new one like this: 1 2 3 cp /etc/pam.d/vsftpd /etc/pam.d/vsftpd_orig cat /dev/null > /etc/pam.d/vsftpd nano /etc/pam.d/vsftpd 1 2 auth required pam_mysql.so user = vsftpd passwd = ftpdpass host = localhost db = vsftpd table = accounts usercolumn = username passwdcolumn = pass crypt = 2 account required pam_mysql.so user = vsftpd passwd = ftpdpass host = localhost db = vsftpd table = accounts usercolumn = username passwdcolumn = pass crypt = 2 Afterwards, we restart vsftpd: 1 service vsftpd restart Create the first Virtual User 1 mysql --defaults-file = /etc/mysql/debian.cnf 1 USE vsftpd ; Now we create the virtual user testuser with the password secret (which will be stored encrypted using MySQL's PASSWORD function): r\u00e9gi 1 INSERT INTO accounts ( username, pass ) VALUES ( 'testuser' , PASSWORD ( 'secret' )) ; \u00faj 1 INSERT INTO accounts ( username, pass ) VALUES ( 'testuser' , MD5 ( 'secret' )) ; 1 quit ; testuser's homedir is /home/vsftpd/testuser; unfortunately, vsftpd doesn't create that directory automatically if it doesn't exist. Therefore, we create it manually now and make it owned by the vsftpd user and the nogroup group: 1 2 3 mkdir /home/vsftpd/testuser chown vsftpd:nogroup /home/vsftpd/testuser chmod a-w /home/vsftpd/testuser SFTP install ssh server 1 apt-get install openssh-server kikomentelni a k\u00f6vetkez\u0151 sort: 1 #subsystem sftp /usr/libexec/openssh/sftp-server 1 nano /etc/ssh/sshd_config hozz\u00e1 adni m\u00e9g sorokat: 1 2 3 4 5 6 Subsystem sftp internal-sftp Match group sftp ChrootDirectory %h X11Forwarding no AllowTcpForwarding no ForceCommand internal-sftp Save and exit that file. Quick explanations on the settings above +ChrootDirectory you can use /home/%u or %h as in ChrootDirectory %h This is the pattern for SSHD to know what directories should be locked down. +TCP forwarding allows one to use SSH to set up a VPN which they can use to tunnel into a network. Someone can bypass firewall as a result, this can be a security risk, so it should be disabled unless it is explicitly required. +X11 forwarding is useful if you have a GUI for linux, otherwise leave disabled The rest you can find more information at http://man.openbsd.org/sshd_config.5 Next we\u2019ll give some permission, for ChrootDirectory %h or ChrootDirectory /home/%u to work the home directory and its user directory must be owned by root user. This prevents the user from wandering around the server. 1 2 3 4 5 chown root:root /home/vsftp chmod 755 /home chmod 755 /home/vsftp chown vsftp:ftpusersonlygroup /home/vsftp/* chmod 775 -R /home/vsftp/* creat new group 1 sudo addgroup sftp new user add the group 1 useradd -m sftpuser -g sftp set passwd 1 passwd sftpuser 1 chmod 700 /home/sftpuser/ edit passwd file 1 nano /etc/passwd change sftpuser dir to vsftp dir in location 1 sftpuser:x:1001:1001::/home/vsftp:/bin/sh restart vsftpd 1 systemctl restart vsftpd teszt 1 sftp sftpuser@bels\u0151ipc\u00edm","title":"vsftpd"},{"location":"Docker/FTPD/vsftpd/#vsftpd","text":"Vftpd install tutrial Install & start 1 2 3 apt-get update apt-get install apt-get install vsftpd -y 1 2 systemctl start vsftpd systemctl enable vsftpd Creat user, write password. 1 adduser vsftp creat dir. add grupp & chmod 1 2 3 mkdir /home/vsftp/ftp chown nobody:nogroup /home/vsftp/ftp chmod a-w /home/vsftp/ftp creat dir. where files can be upload and give ownership to vstp user 1 2 mkdir /home/vsftp/ftp/test chown vsftp:vsftp /home/vsftp/ftp/test First, create a backup of original config file 1 cp /etc/vsftpd.conf /etc/vsftpd.conf.bak 1 nano /etc/vsftpd.conf quick content deletion 1 > /etc/vsftpd.conf vsftpd.conf: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 listen = NO listen_ipv6 = YES anonymous_enable = NO local_enable = YES write_enable = YES local_umask = 022 dirmessage_enable = YES use_localtime = YES xferlog_enable = YES connect_from_port_20 = YES chroot_local_user = YES secure_chroot_dir = /var/run/vsftpd/empty pam_service_name = vsftpd pasv_enable = Yes pasv_min_port = 10000 pasv_max_port = 11000 user_sub_token = $USER local_root = /home/ $USER /ftp userlist_enable = YES userlist_file = /etc/vsftpd.userlist userlist_deny = NO Add the use for the vftpd userlist 1 nano /etc/vsftpd.userlist vftpd restart 1 systemctl restart vsftpd","title":"vsftpd"},{"location":"Docker/FTPD/vsftpd/#install-vsftpd-mysql-and-phpmyadmin","text":"Need root privileges, use sudo or 1 sudo su 1 apt-get -y install vsftpd libpam-mysql mysql-server mysql-client phpmyadmin libpam-ldap You will be asked the following questions: 1 2 3 4 5 6 7 8 9 10 11 12 13 * New password for the MySQL \"root\" user: <-- **yourrootsqlpassword** - Repeat password for the MySQL \"root\" user: <-- **yourrootsqlpassword** - LDAP server Uniform Resource Identifier: <-- **ENTER** - Distinguished name of the search base: <-- **ENTER** - LDAP version to use: <-- **3** - Make local root Database admin: <-- **Yes** - Does the LDAP database require login? <-- **No** - LDAP account for root: <-- **ENTER** - LDAP root account password: <-- **ldaprootpw** * Web server to configure automatically: <-- **Select the option: apache2** * Configure database for phpmyadmin with dbconfig-common? <-- **Yes** * Password of the database ' s administrative user: <-- **Enter the MariaDB root password** * MySQL application password for phpmyadmin: <-- **Press enter, - apt will create a random password automatically.** Create the MySQL Database for vsftpd 1 mysql --defaults-file = /etc/mysql/debian.cnf R\u00e9gi 1 2 3 4 CREATE DATABASE vsftpd ; GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP ON vsftpd.* TO 'vsftpd' @ 'localhost' IDENTIFIED BY 'ftpdpass' ; GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP ON vsftpd.* TO 'vsftpd' @ 'localhost.localdomain' IDENTIFIED BY 'ftpdpass' ; FLUSH PRIVILEGES ; \u00daj 1 2 3 4 CREATE DATABASE vsftpd ; CREATE USER 'vsftpd' @ 'localhost' IDENTIFIED WITH caching_sha2_password BY 'ftpdpass' ; GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP ON vsftpd.* to 'vsftpd' @ 'localhost' ; FLUSH PRIVILEGES ; 1 USE vsftpd ; 1 2 3 4 5 6 7 8 CREATE TABLE ` accounts ` ( ` id ` INT NOT NULL AUTO_INCREMENT PRIMARY KEY , ` username ` VARCHAR ( 30 ) NOT NULL , ` pass ` VARCHAR ( 50 ) NOT NULL , UNIQUE ( ` username ` ) ) ; 1 quit ; Configure vsftpd 1 useradd --home /home/vsftpd --gid nogroup -m --shell /bin/false vsftpd 1 2 3 cp /etc/vsftpd.conf /etc/vsftpd.conf_orig cat /dev/null > /etc/vsftpd.conf nano /etc/vsftpd.conf Example conf.: Readme for conf. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 listen = YES anonymous_enable = NO local_enable = YES write_enable = YES local_umask = 022 dirmessage_enable = YES xferlog_enable = YES connect_from_port_20 = YES nopriv_user = vsftpd chroot_local_user = YES secure_chroot_dir = /var/run/vsftpd pam_service_name = vsftpd rsa_cert_file = /etc/ssl/certs/vsftpd.pem guest_enable = YES guest_username = vsftpd local_root = /home/vsftpd/ $USER user_sub_token = $USER virtual_use_local_privs = YES user_config_dir = /etc/vsftpd_user_conf With the user_config_dir option you can specify a directory for per-user configuration files that override parts of the global settings. This is totally optional and up to you if you want to use this feature. However, we should create that directory now: 1 mkdir /etc/vsftpd_user_conf Now we must configure PAM so that it uses the MySQL database to authenticate our virtual FTP users instead of /etc/passwd and /etc/shadow. The PAM configuration for vsftpd is in /etc/pam.d/vsftpd. We make a backup of the original file and create a new one like this: 1 2 3 cp /etc/pam.d/vsftpd /etc/pam.d/vsftpd_orig cat /dev/null > /etc/pam.d/vsftpd nano /etc/pam.d/vsftpd 1 2 auth required pam_mysql.so user = vsftpd passwd = ftpdpass host = localhost db = vsftpd table = accounts usercolumn = username passwdcolumn = pass crypt = 2 account required pam_mysql.so user = vsftpd passwd = ftpdpass host = localhost db = vsftpd table = accounts usercolumn = username passwdcolumn = pass crypt = 2 Afterwards, we restart vsftpd: 1 service vsftpd restart Create the first Virtual User 1 mysql --defaults-file = /etc/mysql/debian.cnf 1 USE vsftpd ; Now we create the virtual user testuser with the password secret (which will be stored encrypted using MySQL's PASSWORD function): r\u00e9gi 1 INSERT INTO accounts ( username, pass ) VALUES ( 'testuser' , PASSWORD ( 'secret' )) ; \u00faj 1 INSERT INTO accounts ( username, pass ) VALUES ( 'testuser' , MD5 ( 'secret' )) ; 1 quit ; testuser's homedir is /home/vsftpd/testuser; unfortunately, vsftpd doesn't create that directory automatically if it doesn't exist. Therefore, we create it manually now and make it owned by the vsftpd user and the nogroup group: 1 2 3 mkdir /home/vsftpd/testuser chown vsftpd:nogroup /home/vsftpd/testuser chmod a-w /home/vsftpd/testuser","title":"Install vsftpd, MySQL And phpMyAdmin"},{"location":"Docker/FTPD/vsftpd/#sftp","text":"install ssh server 1 apt-get install openssh-server kikomentelni a k\u00f6vetkez\u0151 sort: 1 #subsystem sftp /usr/libexec/openssh/sftp-server 1 nano /etc/ssh/sshd_config hozz\u00e1 adni m\u00e9g sorokat: 1 2 3 4 5 6 Subsystem sftp internal-sftp Match group sftp ChrootDirectory %h X11Forwarding no AllowTcpForwarding no ForceCommand internal-sftp Save and exit that file. Quick explanations on the settings above +ChrootDirectory you can use /home/%u or %h as in ChrootDirectory %h This is the pattern for SSHD to know what directories should be locked down. +TCP forwarding allows one to use SSH to set up a VPN which they can use to tunnel into a network. Someone can bypass firewall as a result, this can be a security risk, so it should be disabled unless it is explicitly required. +X11 forwarding is useful if you have a GUI for linux, otherwise leave disabled The rest you can find more information at http://man.openbsd.org/sshd_config.5 Next we\u2019ll give some permission, for ChrootDirectory %h or ChrootDirectory /home/%u to work the home directory and its user directory must be owned by root user. This prevents the user from wandering around the server. 1 2 3 4 5 chown root:root /home/vsftp chmod 755 /home chmod 755 /home/vsftp chown vsftp:ftpusersonlygroup /home/vsftp/* chmod 775 -R /home/vsftp/* creat new group 1 sudo addgroup sftp new user add the group 1 useradd -m sftpuser -g sftp set passwd 1 passwd sftpuser 1 chmod 700 /home/sftpuser/ edit passwd file 1 nano /etc/passwd change sftpuser dir to vsftp dir in location 1 sftpuser:x:1001:1001::/home/vsftp:/bin/sh restart vsftpd 1 systemctl restart vsftpd teszt 1 sftp sftpuser@bels\u0151ipc\u00edm","title":"SFTP"},{"location":"Install/bitwarden/","text":"bitwarden docker & docker compose install install bitwarden web minimum 2 mag 4gb ram 25gb rom script let\u00f6lt\u00e9se \u00e9s ind\u00edt\u00e1sa 1 2 curl -Lso bitwarden.sh https://go.btwrdn.co/bw-sh \\ && chmod +x bitwarden.sh 1 ./bitwarden.sh install url bitwarden.keikami.tk letsencrypt eld\u00f6nt\u00f6d n instal id and key, te cre\u00e1lj magadnak :P 1 111aed8a-f087-421b-9af1-ac02008504d3 1 Skgan9zL9H3SyoK9YWwD do u have a ssl certificate to use n want to generate ssl y scriptel ind\u00edt\u00e1s 1 ./bitwarden.sh start","title":"bitwarden"},{"location":"Install/bitwarden/#bitwarden","text":"","title":"bitwarden"},{"location":"Install/bitwarden/#docker-docker-compose-install","text":"install bitwarden web","title":"docker &amp; docker compose install"},{"location":"Install/bitwarden/#minimum","text":"2 mag 4gb ram 25gb rom","title":"minimum"},{"location":"Install/bitwarden/#script-letoltese-es-inditasa","text":"1 2 curl -Lso bitwarden.sh https://go.btwrdn.co/bw-sh \\ && chmod +x bitwarden.sh 1 ./bitwarden.sh install","title":"script let\u00f6lt\u00e9se \u00e9s ind\u00edt\u00e1sa"},{"location":"Install/bitwarden/#url","text":"bitwarden.keikami.tk","title":"url"},{"location":"Install/bitwarden/#letsencrypt-eldontod","text":"n","title":"letsencrypt eld\u00f6nt\u00f6d"},{"location":"Install/bitwarden/#instal-id-and-key-te-crealj-magadnak-p","text":"1 111aed8a-f087-421b-9af1-ac02008504d3 1 Skgan9zL9H3SyoK9YWwD","title":"instal id and key, te cre\u00e1lj magadnak :P"},{"location":"Install/bitwarden/#do-u-have-a-ssl-certificate-to-use","text":"n","title":"do u have a ssl certificate to use"},{"location":"Install/bitwarden/#want-to-generate-ssl","text":"y","title":"want to generate ssl"},{"location":"Install/bitwarden/#scriptel-inditas","text":"1 ./bitwarden.sh start","title":"scriptel ind\u00edt\u00e1s"},{"location":"Install/code-server/","text":"code szerver 94.237.98.101 code.keikami.tk minimum elv\u00e1r\u00e1s 1 mag 2gb ram 10gb rom nginx telep\u00edt\u00e9se 1 2 3 4 5 6 apt install nginx -y service nginx start service nginx reload nano /etc/nginx/sites-enabled/default > /etc/nginx/sites-enabled/default nano /etc/nginx/sites-enabled/default 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 server { listen 94 .237.98.101:80 default_server ; server_name code.keikami.tk ; client_max_body_size 10m ; location /.well-known/ { root /usr/share/nginx/html/ ; } location / { proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; proxy_set_header X-Forwarded-Proto $scheme ; proxy_set_header X-Real-IP $remote_addr ; proxy_set_header Host $http_host ; proxy_pass http://127.0.0.1:80 ; proxy_redirect off ; } } #server { # listen 94.237.98.101:443 default ssl; # # server_name code.keikami.tk; # client_max_body_size 10m; # # ssl_certificate_key /etc/letsencrypt/live/code.keikami.tk/privkey.pem; # # ssl_certificate /etc/letsencrypt/live/code.keikami.tk/fullchain.pem; # # location / { # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # proxy_set_header X-Forwarded-Proto $scheme; # proxy_set_header X-Real-IP $remote_addr; # proxy_set_header Host $http_host; # proxy_pass http://127.0.0.1:80; # proxy_redirect off; # } #} letsencrypt el\u0151tte \u00e1llitsd le az ngnx-et \u00e1ll\u00edtsd be milyen szoftverrel \u00e9s op-vel akarod haszn\u00e1lni certbot nginx ubuntu20.04 1 2 3 4 apt-get update apt-get install software-properties-common add-apt-repository universe apt-get update install certbot 1 apt-get install certbot python3-certbot-nginx -y \u00edgy szerkeszti az nginx configj\u00e1t 1 certbot --nginx \u00edgy neked kell 1 certbot certonly --nginx automatikus \u00fajj\u00edt\u00e1s 1 certbot piken --dry-run 1 2 /etc/letsencrypt/live/code.keikami.tk/fullchain.pem /etc/letsencrypt/live/code.keikami.tk/privkey.pem code-szerver install \u00fatmutat\u00f3 1 2 3 4 5 6 7 8 9 10 11 12 mkdir ~/code-server cd ~/code-server https://github.com/cdr/code-server.git wget https://github.com/cdr/code-server/releases/download/3.4.1/code-server-3.4.1-linux-amd64.tar.gz tar -xzvf code-server-3.4.1-linux-amd64.tar.gz cp -r code-server-3.4.1-linux-amd64 /usr/lib/code-server ln -s /usr/lib/code-server/bin/code-server /usr/bin/code-server mkdir /var/lib/code-server nano /lib/systemd/system/code-server.service","title":"code szerver"},{"location":"Install/code-server/#code-szerver","text":"","title":"code szerver"},{"location":"Install/code-server/#9423798101","text":"","title":"94.237.98.101"},{"location":"Install/code-server/#codekeikamitk","text":"","title":"code.keikami.tk"},{"location":"Install/code-server/#minimum-elvaras","text":"1 mag 2gb ram 10gb rom","title":"minimum elv\u00e1r\u00e1s"},{"location":"Install/code-server/#nginx-telepitese","text":"1 2 3 4 5 6 apt install nginx -y service nginx start service nginx reload nano /etc/nginx/sites-enabled/default > /etc/nginx/sites-enabled/default nano /etc/nginx/sites-enabled/default 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 server { listen 94 .237.98.101:80 default_server ; server_name code.keikami.tk ; client_max_body_size 10m ; location /.well-known/ { root /usr/share/nginx/html/ ; } location / { proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; proxy_set_header X-Forwarded-Proto $scheme ; proxy_set_header X-Real-IP $remote_addr ; proxy_set_header Host $http_host ; proxy_pass http://127.0.0.1:80 ; proxy_redirect off ; } } #server { # listen 94.237.98.101:443 default ssl; # # server_name code.keikami.tk; # client_max_body_size 10m; # # ssl_certificate_key /etc/letsencrypt/live/code.keikami.tk/privkey.pem; # # ssl_certificate /etc/letsencrypt/live/code.keikami.tk/fullchain.pem; # # location / { # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # proxy_set_header X-Forwarded-Proto $scheme; # proxy_set_header X-Real-IP $remote_addr; # proxy_set_header Host $http_host; # proxy_pass http://127.0.0.1:80; # proxy_redirect off; # } #}","title":"nginx telep\u00edt\u00e9se"},{"location":"Install/code-server/#letsencrypt","text":"","title":"letsencrypt"},{"location":"Install/code-server/#elotte-allitsd-le-az-ngnx-et","text":"","title":"el\u0151tte \u00e1llitsd le az ngnx-et"},{"location":"Install/code-server/#allitsd-be-milyen-szoftverrel-es-op-vel-akarod-hasznalni-certbot","text":"","title":"\u00e1ll\u00edtsd be milyen szoftverrel \u00e9s op-vel akarod haszn\u00e1lni certbot"},{"location":"Install/code-server/#nginx-ubuntu2004","text":"1 2 3 4 apt-get update apt-get install software-properties-common add-apt-repository universe apt-get update","title":"nginx ubuntu20.04"},{"location":"Install/code-server/#install-certbot","text":"1 apt-get install certbot python3-certbot-nginx -y","title":"install certbot"},{"location":"Install/code-server/#igy-szerkeszti-az-nginx-configjat","text":"1 certbot --nginx","title":"\u00edgy szerkeszti az nginx configj\u00e1t"},{"location":"Install/code-server/#igy-neked-kell","text":"1 certbot certonly --nginx","title":"\u00edgy neked kell"},{"location":"Install/code-server/#automatikus-ujjitas","text":"1 certbot piken --dry-run 1 2 /etc/letsencrypt/live/code.keikami.tk/fullchain.pem /etc/letsencrypt/live/code.keikami.tk/privkey.pem","title":"automatikus \u00fajj\u00edt\u00e1s"},{"location":"Install/code-server/#code-szerver_1","text":"","title":"code-szerver"},{"location":"Install/code-server/#install-utmutato","text":"1 2 3 4 5 6 7 8 9 10 11 12 mkdir ~/code-server cd ~/code-server https://github.com/cdr/code-server.git wget https://github.com/cdr/code-server/releases/download/3.4.1/code-server-3.4.1-linux-amd64.tar.gz tar -xzvf code-server-3.4.1-linux-amd64.tar.gz cp -r code-server-3.4.1-linux-amd64 /usr/lib/code-server ln -s /usr/lib/code-server/bin/code-server /usr/bin/code-server mkdir /var/lib/code-server nano /lib/systemd/system/code-server.service","title":"install \u00fatmutat\u00f3"},{"location":"Install/gitter/","text":"Gitter https://gitter.im/ Gitter install choose Operating System 1 wget https://update.gitter.im/linux64/gitter_5.0.1_amd64.deb 1 dpkg -i gitter_5.0.1_amd64.deb 1 2 apt-get update apt install snapd 1 snap install gitter-desktop Gitter install in docker Docker & Docker-compose install Install node 10.x 1 curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash 1 apt-get install build-essential libssl-dev -y 1 source ~/.profile nvm will install the latest 1 nvm install 10 /* Install npm 6.x 1 npm install npm@^5 -g Clone this repo: git clone https://gitlab.com/gitlab-org/gitter/webapp.git 1 cd /webapp Run 1 npm install docker-compose 1 docker-compose up -d --no-recreate npm start rosszul indul nem siker\u00fclt elind\u00edtani.","title":"Gitter"},{"location":"Install/gitter/#gitter","text":"https://gitter.im/","title":"Gitter"},{"location":"Install/gitter/#gitter-install","text":"choose Operating System 1 wget https://update.gitter.im/linux64/gitter_5.0.1_amd64.deb 1 dpkg -i gitter_5.0.1_amd64.deb 1 2 apt-get update apt install snapd 1 snap install gitter-desktop","title":"Gitter install"},{"location":"Install/gitter/#gitter-install-in-docker","text":"Docker & Docker-compose install Install node 10.x 1 curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash 1 apt-get install build-essential libssl-dev -y 1 source ~/.profile nvm will install the latest 1 nvm install 10 /* Install npm 6.x 1 npm install npm@^5 -g Clone this repo: git clone https://gitlab.com/gitlab-org/gitter/webapp.git 1 cd /webapp Run 1 npm install docker-compose 1 docker-compose up -d --no-recreate npm start rosszul indul nem siker\u00fclt elind\u00edtani.","title":"Gitter install in docker"},{"location":"Install/guacamole/","text":"Guacamole install with script on ubuntu youtube videos help 1 wget https://raw.githubusercontent.com/MysticRyuujin/guac-install/master/guac-install.sh chmod +x guac-install.sh ./guac-install.sh totp, kihagyhat\u00f3 2 faktoros bel\u00e9ptet\u00e9st cs\u00edn\u00e1l -y mysql -y root_pw:teszt user_pw:tesztuser telep\u00edt\u00e9s ut\u00e1n b\u00f6ng\u00e9sz\u0151ben ny\u00edsd meg a linket, localhost hely\u00e9re az ip Default login (username/password) 2 faktoros bel\u00e9ptet\u00e9s, google hitteles\u00edt\u0151 appal http://localhost:8080/guacamole install linken megadott folyamatott k\u00f6vettem, kiv\u00e9tel, hogy bel\u00e9ptet\u00e9shez ssh-rsa-t haszn\u00e1ltam nem jelsz\u00f3t.","title":"Guacamole"},{"location":"Install/guacamole/#guacamole","text":"install with script on ubuntu youtube videos help 1 wget https://raw.githubusercontent.com/MysticRyuujin/guac-install/master/guac-install.sh chmod +x guac-install.sh ./guac-install.sh totp, kihagyhat\u00f3 2 faktoros bel\u00e9ptet\u00e9st cs\u00edn\u00e1l -y mysql -y root_pw:teszt user_pw:tesztuser telep\u00edt\u00e9s ut\u00e1n b\u00f6ng\u00e9sz\u0151ben ny\u00edsd meg a linket, localhost hely\u00e9re az ip Default login (username/password) 2 faktoros bel\u00e9ptet\u00e9s, google hitteles\u00edt\u0151 appal http://localhost:8080/guacamole install linken megadott folyamatott k\u00f6vettem, kiv\u00e9tel, hogy bel\u00e9ptet\u00e9shez ssh-rsa-t haszn\u00e1ltam nem jelsz\u00f3t.","title":"Guacamole"},{"location":"Install/homelabos/","text":"Homelabos youtube link a telep\u00edt\u00e9shez One command deployment: 1 bash < ( curl -s https://gitlab.com/NickBusey/HomelabOS/-/raw/master/install_homelabos.sh ) el\u00e9g k\u00f6vetni amit \u00edr a program: 1 cd /var/homelabos/install 1 make set miniflux.enable true ha nem fogadja el, telep\u00edtsd a fel a make-t, telep\u00edt\u00e9s ut\u00e1na ism\u00e9t add ki a parancsot 1 apt install make k\u00e9rni fog hogy ad be neki a k\u00f6vetkez\u0151 parancsot: 1 make url c\u00edm l\u00e9trehoz\u00e1s\u00e1n\u00e1l sz\u00fcks\u00e9g van whitecardos url-re ex: *.homelabos.keikami.tk ezek ut\u00e1n \u00e9rtelem szer\u00fcen add meg az adatokat amiket k\u00e9r: felhaszn\u00e1l\u00f3nevet adminhoz, jelsz\u00f3t, letsencrypthez webc\u00edmet, valid emailt.","title":"Homelabos"},{"location":"Install/homelabos/#homelabos","text":"youtube link a telep\u00edt\u00e9shez One command deployment: 1 bash < ( curl -s https://gitlab.com/NickBusey/HomelabOS/-/raw/master/install_homelabos.sh ) el\u00e9g k\u00f6vetni amit \u00edr a program: 1 cd /var/homelabos/install 1 make set miniflux.enable true ha nem fogadja el, telep\u00edtsd a fel a make-t, telep\u00edt\u00e9s ut\u00e1na ism\u00e9t add ki a parancsot 1 apt install make k\u00e9rni fog hogy ad be neki a k\u00f6vetkez\u0151 parancsot: 1 make url c\u00edm l\u00e9trehoz\u00e1s\u00e1n\u00e1l sz\u00fcks\u00e9g van whitecardos url-re ex: *.homelabos.keikami.tk ezek ut\u00e1n \u00e9rtelem szer\u00fcen add meg az adatokat amiket k\u00e9r: felhaszn\u00e1l\u00f3nevet adminhoz, jelsz\u00f3t, letsencrypthez webc\u00edmet, valid emailt.","title":"Homelabos"},{"location":"Install/odoo/","text":"Odoo https://www.rosehosting.com/blog/how-to-install-odoo-12-on-ubuntu-18-04-with-apache-as-a-reverse-proxy/#more-29433 Update system 1 apt update && apt upgrade Install PostgreSQL Server 1 apt install postgresql Install Odoo 1 2 wget -O - https://nightly.odoo.com/odoo.key | apt-key add - echo \"deb http://nightly.odoo.com/12.0/nightly/deb/ ./\" >> /etc/apt/sources.list.d/odoo.list 1 2 3 apt update apt install odoo systemctl status odoo F\u00fcgg\u0151s\u00e9gek telep\u00edt\u00e9se 1 apt install build-essential wget git python3-pip python3-dev python3-venv python3-wheel python3-setuptools libxslt-dev libzip-dev libldap2-dev libsasl2-dev python3-setuptools node-less Create a new system and PostgreSQL user for Odoo 1 2 useradd -m -d /opt/odoo12 -U -r -s /bin/bash odoo12 su - postgres -c \"createuser -s odoo12\" 1 2 3 cd /opt wget https://builds.wkhtmltopdf.org/0.12.1.3/wkhtmltox_0.12.1.3-1~bionic_amd64.deb apt install /opt/wkhtmltox_0.12.1.3-1~bionic_amd64.deb nekem a fenti helyet ez m\u0171k\u00f6d\u00f6tt 1 2 wget https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.bionic_amd64.deb sudo dpkg -i wkhtmltox_0.12.6-1.bionic_amd64.deb vagy 1 apt install wkhtmltox_0.12.6-1.bionic_amd64.deb 1 2 su - odoo12 git clone https://www.github.com/odoo/odoo --depth 1 --branch 12 .0 /opt/odoo12/odoo Now, still as user odoo12, let\u2019s create a new python virtual environment 1 python3 -m venv odoo-venv 1 2 3 pip3 install wheel pip3 install -r odoo/requirements.txt ( venv ) $ deactivate && exit 1 cp /opt/odoo12/odoo/debian/odoo.conf /etc/odoo12.conf 1 nano /etc/odoo12.conf paste 1 2 3 4 5 6 7 8 9 [options] ; This is the password that allows database operations: admin_passwd = m0d1fyth15 db_host = False db_port = False db_user = odoo12 db_password = False addons_path = /opt/odoo12/odoo/addons xmlrpc_port = 8001 nano /etc/systemd/system/odoo12.service paste 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 [Unit] Description = Odoo12 Requires = postgresql.service After = network.target postgresql.service [Service] Type = simple SyslogIdentifier = odoo12 PermissionsStartOnly = true User = odoo12 Group = odoo12 ExecStart = /opt/odoo12/odoo-venv/bin/python3 /opt/odoo12/odoo/odoo-bin -c /etc/odoo12.conf StandardOutput = journal+console [Install] WantedBy = multi-user.target 1 2 systemctl daemon-reload systemctl start odoo12 Meg tudod ne\u00e9zni a \"http://IP_Address:8069\"","title":"Odoo"},{"location":"Install/odoo/#odoo","text":"https://www.rosehosting.com/blog/how-to-install-odoo-12-on-ubuntu-18-04-with-apache-as-a-reverse-proxy/#more-29433","title":"Odoo"},{"location":"Install/odoo/#update-system","text":"1 apt update && apt upgrade","title":"Update system"},{"location":"Install/odoo/#install-postgresql-server","text":"1 apt install postgresql","title":"Install PostgreSQL Server"},{"location":"Install/odoo/#install-odoo","text":"1 2 wget -O - https://nightly.odoo.com/odoo.key | apt-key add - echo \"deb http://nightly.odoo.com/12.0/nightly/deb/ ./\" >> /etc/apt/sources.list.d/odoo.list 1 2 3 apt update apt install odoo systemctl status odoo F\u00fcgg\u0151s\u00e9gek telep\u00edt\u00e9se 1 apt install build-essential wget git python3-pip python3-dev python3-venv python3-wheel python3-setuptools libxslt-dev libzip-dev libldap2-dev libsasl2-dev python3-setuptools node-less Create a new system and PostgreSQL user for Odoo 1 2 useradd -m -d /opt/odoo12 -U -r -s /bin/bash odoo12 su - postgres -c \"createuser -s odoo12\" 1 2 3 cd /opt wget https://builds.wkhtmltopdf.org/0.12.1.3/wkhtmltox_0.12.1.3-1~bionic_amd64.deb apt install /opt/wkhtmltox_0.12.1.3-1~bionic_amd64.deb nekem a fenti helyet ez m\u0171k\u00f6d\u00f6tt 1 2 wget https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.bionic_amd64.deb sudo dpkg -i wkhtmltox_0.12.6-1.bionic_amd64.deb vagy 1 apt install wkhtmltox_0.12.6-1.bionic_amd64.deb 1 2 su - odoo12 git clone https://www.github.com/odoo/odoo --depth 1 --branch 12 .0 /opt/odoo12/odoo Now, still as user odoo12, let\u2019s create a new python virtual environment 1 python3 -m venv odoo-venv 1 2 3 pip3 install wheel pip3 install -r odoo/requirements.txt ( venv ) $ deactivate && exit 1 cp /opt/odoo12/odoo/debian/odoo.conf /etc/odoo12.conf 1 nano /etc/odoo12.conf paste 1 2 3 4 5 6 7 8 9 [options] ; This is the password that allows database operations: admin_passwd = m0d1fyth15 db_host = False db_port = False db_user = odoo12 db_password = False addons_path = /opt/odoo12/odoo/addons xmlrpc_port = 8001 nano /etc/systemd/system/odoo12.service paste 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 [Unit] Description = Odoo12 Requires = postgresql.service After = network.target postgresql.service [Service] Type = simple SyslogIdentifier = odoo12 PermissionsStartOnly = true User = odoo12 Group = odoo12 ExecStart = /opt/odoo12/odoo-venv/bin/python3 /opt/odoo12/odoo/odoo-bin -c /etc/odoo12.conf StandardOutput = journal+console [Install] WantedBy = multi-user.target 1 2 systemctl daemon-reload systemctl start odoo12 Meg tudod ne\u00e9zni a \"http://IP_Address:8069\"","title":"Install Odoo"},{"location":"Install/passbolt/","text":"passbolt docker & docker compose install k\u00e9rte 1 apt install rng-tools passbolt install utmutat\u00f3, m\u00e1s k\u00e9p lett megoldva github repob\u00f3l let\u00f6lt\u0151 link szerkessz\u00fck a docker-compose.yml-t, fakesmtp hozz\u00e1 ad\u00e1sa passbolt r\u00e9szn\u00e9l: 1 2 3 depends_on: - db - fakesmtp bel\u00fclre mutassanak a portok 1 2 3 4 ports: + \"127.0.0.1:80:80\" + \"127.0.0.1:443:443\" fakesmtp image, volume, port megad\u00e1sa 1 2 3 4 5 6 7 8 9 fakesmtp: image: munkyboy/fakesmtp volumes: - /tmp/fakemail:/var/mail ports: - \"2525:25\" szerkessz\u00fck az /env/passbolt.env-et email k\u00fcld\u0151 r\u00e9sszel lett b\u0151v\u00edtve 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 APP_FULL_BASE_URL = https://passbolt.keikami.tk # Database settings DATASOURCES_DEFAULT_HOST = db DATASOURCES_DEFAULT_USERNAME = passbolt DATASOURCES_DEFAULT_PASSWORD = P4ssb0lt DATASOURCES_DEFAULT_DATABASE = passbolt DATASOURCES_DEFAULT_PORT = 3306 DATASOURCES_QUOTE_IDENTIFIER = true # Registration PASSBOLT_REGISTRATION_PUBLIC = true EMAIL_TRANSPORT_DEFAULT_HOST = fakesmtp # EMAIL_TRANSPORT_DEFAULT_USERNAME=mailUser@mydomain.com EMAIL_DEFAULT_FROM = mailUser@mydomain.com # EMAIL_TRANSPORT_DEFAULT_PASSWORD=mailUserPassword EMAIL_TRANSPORT_DEFAULT_TLS = true PASSBOLT_SSL_FORCE = false weboldal valid\u00e1l\u00e1s 1 docker run -it --name letsencrypt -v /usr/share/nginx/html/.well-known/:/var/www/html/.well-known -v /etc/letsencrypt/:/etc/letsencrypt --entrypoint sh --rm certbot/certbot dockeren bel\u00fcli parancs 1 certbot certonly --no-bootstrap --webroot -w /var/www/html/ -d passbolt.keikami.tk --non-interactive --agree-tos --email m.peti@irdmeg.hu kulcsok el\u00e9r\u00e9si hely 1 2 /etc/letsencrypt/live/passbolt.keikami.tk/privkey.pem /etc/letsencrypt/live/passbolt.keikami.tk/fullchain.pem nginx telep\u00edt\u00e9se \u00e9s ind\u00edt\u00e1sa 1 apt install nginx 1 service nginx start ehhez le\u00e1ll\u00edtjuk az nginx-et 1 service nginx stop 1 nano /etc/nginx/sites-enabled/default tartalm\u00e1t cser\u00e9lj\u00fck, ip-t cser\u00e9lni 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 server { listen 94 .237.92.239:80 default_server ; server_name passbolt.keikami.tk ; client_max_body_size 10m ; location /.well-known/ { root /usr/share/nginx/html/ ; } location / { proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; proxy_set_header X-Forwarded-Proto $scheme ; proxy_set_header X-Real-IP $remote_addr ; proxy_set_header Host $http_host ; proxy_pass http://127.0.0.1:80 ; proxy_redirect off ; } } server { listen 94 .237.92.239:443 default ssl ; server_name passbolt.keikami.tk ; client_max_body_size 10m ; ssl_certificate_key /etc/letsencrypt/live/passbolt.keikami.tk/privkey.pem ; ssl_certificate /etc/letsencrypt/live/passbolt.keikami.tk/fullchain.pem ; location / { proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; proxy_set_header X-Forwarded-Proto $scheme ; proxy_set_header X-Real-IP $remote_addr ; proxy_set_header Host $http_host ; proxy_pass http://127.0.0.1:80 ; proxy_redirect off ; } } ellen\u0151rizz\u00fck h nincs e hiba, majd ism\u00e9t ind\u00edtjuk az nginx-et 1 nginx -t 1 service nginx start plusz ellen\u0151rz\u00e9s, de ezt nem musz\u00e1j 1 ifconfig ha nem \u00e1ll\u00edtottuk le az nginx-et a config cser\u00e9j\u00e9hez 1 service nginx reload","title":"passbolt"},{"location":"Install/passbolt/#passbolt","text":"","title":"passbolt"},{"location":"Install/passbolt/#docker-docker-compose-install","text":"","title":"docker &amp; docker compose install"},{"location":"Install/passbolt/#kerte","text":"1 apt install rng-tools","title":"k\u00e9rte"},{"location":"Install/passbolt/#passbolt-install-utmutato-mas-kep-lett-megoldva","text":"","title":"passbolt install utmutat\u00f3, m\u00e1s k\u00e9p lett megoldva"},{"location":"Install/passbolt/#github-repobol-letolto-link","text":"","title":"github repob\u00f3l let\u00f6lt\u0151 link"},{"location":"Install/passbolt/#szerkesszuk-a-docker-composeyml-t-fakesmtp-hozza-adasa","text":"passbolt r\u00e9szn\u00e9l: 1 2 3 depends_on: - db - fakesmtp bel\u00fclre mutassanak a portok 1 2 3 4 ports: + \"127.0.0.1:80:80\" + \"127.0.0.1:443:443\" fakesmtp image, volume, port megad\u00e1sa 1 2 3 4 5 6 7 8 9 fakesmtp: image: munkyboy/fakesmtp volumes: - /tmp/fakemail:/var/mail ports: - \"2525:25\"","title":"szerkessz\u00fck a docker-compose.yml-t, fakesmtp hozz\u00e1 ad\u00e1sa"},{"location":"Install/passbolt/#szerkesszuk-az-envpassboltenv-et","text":"email k\u00fcld\u0151 r\u00e9sszel lett b\u0151v\u00edtve 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 APP_FULL_BASE_URL = https://passbolt.keikami.tk # Database settings DATASOURCES_DEFAULT_HOST = db DATASOURCES_DEFAULT_USERNAME = passbolt DATASOURCES_DEFAULT_PASSWORD = P4ssb0lt DATASOURCES_DEFAULT_DATABASE = passbolt DATASOURCES_DEFAULT_PORT = 3306 DATASOURCES_QUOTE_IDENTIFIER = true # Registration PASSBOLT_REGISTRATION_PUBLIC = true EMAIL_TRANSPORT_DEFAULT_HOST = fakesmtp # EMAIL_TRANSPORT_DEFAULT_USERNAME=mailUser@mydomain.com EMAIL_DEFAULT_FROM = mailUser@mydomain.com # EMAIL_TRANSPORT_DEFAULT_PASSWORD=mailUserPassword EMAIL_TRANSPORT_DEFAULT_TLS = true PASSBOLT_SSL_FORCE = false","title":"szerkessz\u00fck az /env/passbolt.env-et"},{"location":"Install/passbolt/#weboldal-validalas","text":"1 docker run -it --name letsencrypt -v /usr/share/nginx/html/.well-known/:/var/www/html/.well-known -v /etc/letsencrypt/:/etc/letsencrypt --entrypoint sh --rm certbot/certbot","title":"weboldal valid\u00e1l\u00e1s"},{"location":"Install/passbolt/#dockeren-beluli-parancs","text":"1 certbot certonly --no-bootstrap --webroot -w /var/www/html/ -d passbolt.keikami.tk --non-interactive --agree-tos --email m.peti@irdmeg.hu","title":"dockeren bel\u00fcli parancs"},{"location":"Install/passbolt/#kulcsok-eleresi-hely","text":"1 2 /etc/letsencrypt/live/passbolt.keikami.tk/privkey.pem /etc/letsencrypt/live/passbolt.keikami.tk/fullchain.pem","title":"kulcsok el\u00e9r\u00e9si hely"},{"location":"Install/passbolt/#nginx-telepitese-es-inditasa","text":"1 apt install nginx 1 service nginx start","title":"nginx telep\u00edt\u00e9se \u00e9s ind\u00edt\u00e1sa"},{"location":"Install/passbolt/#ehhez-leallitjuk-az-nginx-et","text":"1 service nginx stop 1 nano /etc/nginx/sites-enabled/default","title":"ehhez le\u00e1ll\u00edtjuk az nginx-et"},{"location":"Install/passbolt/#tartalmat-csereljuk-ip-t-cserelni","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 server { listen 94 .237.92.239:80 default_server ; server_name passbolt.keikami.tk ; client_max_body_size 10m ; location /.well-known/ { root /usr/share/nginx/html/ ; } location / { proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; proxy_set_header X-Forwarded-Proto $scheme ; proxy_set_header X-Real-IP $remote_addr ; proxy_set_header Host $http_host ; proxy_pass http://127.0.0.1:80 ; proxy_redirect off ; } } server { listen 94 .237.92.239:443 default ssl ; server_name passbolt.keikami.tk ; client_max_body_size 10m ; ssl_certificate_key /etc/letsencrypt/live/passbolt.keikami.tk/privkey.pem ; ssl_certificate /etc/letsencrypt/live/passbolt.keikami.tk/fullchain.pem ; location / { proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; proxy_set_header X-Forwarded-Proto $scheme ; proxy_set_header X-Real-IP $remote_addr ; proxy_set_header Host $http_host ; proxy_pass http://127.0.0.1:80 ; proxy_redirect off ; } }","title":"tartalm\u00e1t cser\u00e9lj\u00fck, ip-t cser\u00e9lni"},{"location":"Install/passbolt/#ellenorizzuk-h-nincs-e-hiba-majd-ismet-inditjuk-az-nginx-et","text":"1 nginx -t 1 service nginx start","title":"ellen\u0151rizz\u00fck h nincs e hiba, majd ism\u00e9t ind\u00edtjuk az nginx-et"},{"location":"Install/passbolt/#plusz-ellenorzes-de-ezt-nem-muszaj","text":"1 ifconfig","title":"plusz ellen\u0151rz\u00e9s, de ezt nem musz\u00e1j"},{"location":"Install/passbolt/#ha-nem-allitottuk-le-az-nginx-et-a-config-cserejehez","text":"1 service nginx reload","title":"ha nem \u00e1ll\u00edtottuk le az nginx-et a config cser\u00e9j\u00e9hez"},{"location":"Install/privatebin/","text":"PrivateBin El\u0151felt\u00e9tel Docker feltelep\u00edt\u00e9se Futtassuk a k\u00f6vetkez\u0151 commandott : 1 docker run -d --restart = \"always\" --name privbin --read-only -p 443 :443 rickysos/privbin M\u00e1sik megold\u00e1s 1 2 openssl genrsa 2048 > private.pem openssl req -x509 -days 300 -new -key private.pem -out public.pem 1 2 3 mkdir ssl cp ` pwd ` /private.pem: ` pwd ` /ssl/private.pem cp ` pwd ` /public.pem: ` pwd ` /ssl/public.pem voljumos nginx conf /nem m\u0171kszik 1 docker run -d --restart = \"always\" -p 80 :8080 -p 443 :443 -v ` pwd ` /config.conf:/etc/nginx/sites-available/site.conf -v ` pwd ` /ssl:/etc/nginx/ssl -v privatebin-data:/srv/data privatebin/nginx-fpm-alpine nginx.conf 1 config.conf 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 server { listen 80 default_server ; listen 443 ssl ; ssl_certificate_key /etc/nginx/ssl/private.pem ; ssl_certificate /etc/nginx/ssl/public.pem ; root /var/www ; index index.php index.html index.htm ; location / { proxy_set_header Host $host ; proxy_set_header X-Real-IP $remote_addr ; proxy_pass http://127.0.0.1:8080/ ; } } } docker run 1 docker run -d --restart = \"always\" -p 80 :8080 -p 443 :443 -v ` pwd ` /config.conf:/etc/nginx/sites-available/site.conf -v ` pwd ` /ssl:/etc/nginx/ssl -v privatebin-data:/srv/data privatebin/nginx-fpm-alpine k\u00fcls\u0151 nginx megold\u00e1s -telep\u00edtsd az nginx-et 1 2 apt-get update apt install nginx 1 nano config.conf tartalma 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 server { listen 8080 default_server ; listen 443 ssl ; listen [ :: ] :8080 default_server ; ssl_certificate_key /etc/nginx/ssl/private.pem ; ssl_certificate /etc/nginx/ssl/public.pem ; root /var/www ; index index.php index.html index.htm ; location / { include /etc/nginx/location.d/*.conf ; try_files $uri $uri / /index.php $is_args$args ; } location ~ \\. php$ { include /etc/nginx/location.d/*.conf ; fastcgi_pass unix:/run/php-fpm.sock ; fastcgi_index index.php ; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name ; include fastcgi_params ; # Prevent exposing nginx + version to $_SERVER fastcgi_param SERVER_SOFTWARE \"\" ; } include /etc/nginx/server.d/*.conf ; } docker run 1 docker run -d --restart = \"always\" -p 8080 :8080 -v privatebin-data:/srv/data privatebin/nginx-fpm-alpine","title":"PrivateBin"},{"location":"Install/privatebin/#privatebin","text":"","title":"PrivateBin"},{"location":"Install/privatebin/#elofeltetel","text":"Docker feltelep\u00edt\u00e9se Futtassuk a k\u00f6vetkez\u0151 commandott : 1 docker run -d --restart = \"always\" --name privbin --read-only -p 443 :443 rickysos/privbin","title":"El\u0151felt\u00e9tel"},{"location":"Install/privatebin/#masik-megoldas","text":"1 2 openssl genrsa 2048 > private.pem openssl req -x509 -days 300 -new -key private.pem -out public.pem 1 2 3 mkdir ssl cp ` pwd ` /private.pem: ` pwd ` /ssl/private.pem cp ` pwd ` /public.pem: ` pwd ` /ssl/public.pem voljumos nginx conf /nem m\u0171kszik 1 docker run -d --restart = \"always\" -p 80 :8080 -p 443 :443 -v ` pwd ` /config.conf:/etc/nginx/sites-available/site.conf -v ` pwd ` /ssl:/etc/nginx/ssl -v privatebin-data:/srv/data privatebin/nginx-fpm-alpine nginx.conf 1 config.conf 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 server { listen 80 default_server ; listen 443 ssl ; ssl_certificate_key /etc/nginx/ssl/private.pem ; ssl_certificate /etc/nginx/ssl/public.pem ; root /var/www ; index index.php index.html index.htm ; location / { proxy_set_header Host $host ; proxy_set_header X-Real-IP $remote_addr ; proxy_pass http://127.0.0.1:8080/ ; } } } docker run 1 docker run -d --restart = \"always\" -p 80 :8080 -p 443 :443 -v ` pwd ` /config.conf:/etc/nginx/sites-available/site.conf -v ` pwd ` /ssl:/etc/nginx/ssl -v privatebin-data:/srv/data privatebin/nginx-fpm-alpine","title":"M\u00e1sik megold\u00e1s"},{"location":"Install/privatebin/#kulso-nginx-megoldas","text":"-telep\u00edtsd az nginx-et 1 2 apt-get update apt install nginx 1 nano config.conf tartalma 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 server { listen 8080 default_server ; listen 443 ssl ; listen [ :: ] :8080 default_server ; ssl_certificate_key /etc/nginx/ssl/private.pem ; ssl_certificate /etc/nginx/ssl/public.pem ; root /var/www ; index index.php index.html index.htm ; location / { include /etc/nginx/location.d/*.conf ; try_files $uri $uri / /index.php $is_args$args ; } location ~ \\. php$ { include /etc/nginx/location.d/*.conf ; fastcgi_pass unix:/run/php-fpm.sock ; fastcgi_index index.php ; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name ; include fastcgi_params ; # Prevent exposing nginx + version to $_SERVER fastcgi_param SERVER_SOFTWARE \"\" ; } include /etc/nginx/server.d/*.conf ; } docker run 1 docker run -d --restart = \"always\" -p 8080 :8080 -v privatebin-data:/srv/data privatebin/nginx-fpm-alpine","title":"k\u00fcls\u0151 nginx megold\u00e1s"},{"location":"Install/teleport/","text":"Teleport ubuntu 18-ra Network tags, sz\u00fcks\u00e9ges portok enged\u00e9lyez\u00e9se a t\u0171zfalon: http-server, https-server, kei, teleport, web Teleport telep\u00edt\u0151 file Telep\u00edt\u00f3 docs Let\u00f6ltj\u00fck a megfelel\u0151t, jelen esetben a 64-es ubuntu-t Szerver oldal 1 2 3 4 5 apt-get update -y \\ && apt-get upgrade -y \\ && apt-get install nginx -y \\ && curl -O https://get.gravitational.com/teleport-v4.3.5-linux-amd64-bin.tar.gz \\ && tar xvf teleport-v4.3.5-linux-amd64-bin.tar.gz add-apt k\u00e9r 1 entert, certbotnak megadni az infokat amiket k\u00e9r -email, a, n, 2 1 2 3 add-apt-repository ppa:certbot/certbot apt install python-certbot-nginx -y certbot --nginx -d test.keikami.tk configf\u00e1jl \u00f6ssze \u00e1ll\u00edt\u00e1sa a teleporthoz 1 nano teleport.yaml \u00edrd \u00e1t a public_addr, https_key_file, https_cert_fil 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 # # Sample Teleport configuration file # Creates a single proxy, auth and node server. # # Things to update: # 1. ca_pin: Obtain the CA pin hash for joining more nodes by running 'tctl status' # on the auth server once Teleport is running. # 2. license-if-using-teleport-enterprise.pem: If you are an Enterprise customer, # obtain this from https://dashboard.gravitational.com/web/ # teleport: nodename: teleport data_dir: /var/lib/teleport # auth_token: 483ce403810351987a6d1a99ac74fc6988334bba8e2d66b1 # auth_servers: # - 127.0.0.1:3025 log: output: stderr severity: INFO # ca_pin: sha256:ca-pin-hash-goes-here auth_service: enabled: \"yes\" listen_addr: 0 .0.0.0:3025 # tokens: # - proxy,node:483ce403810351987a6d1a99ac74fc6988334bba8e2d66b1 # license_file: /path/to/license-if-using-teleport-enterprise.pem ssh_service: enabled: \"yes\" labels: db_role: master db_type: postgres commands: + name: hostname command: [ /bin/hostname ] period: 1m0s + name: arch command: [ /bin/uname, -p ] period: 1h0m0s proxy_service: enabled: \"yes\" listen_addr: 0 .0.0.0:3023 web_listen_addr: 0 .0.0.0:3080 tunnel_listen_addr: 0 .0.0.0:3024 public_addr: test.keikami.tk:3080 https_key_file: /etc/letsencrypt/live/test.keikami.tk/privkey.pem https_cert_file: /etc/letsencrypt/live/test.keikami.tk/fullchain.pem 1 cd teleport && ./install && teleport start -c teleport.yaml \u00faj tabbon kiadand\u00f3 parancsok kapott linken root userrel registr\u00e1lni 1 tctl users add keikami root -node tokent gener\u00e1lni 1 tctl nodes add vagy a kapott kommandal ind\u00edtjuk a kliensen a teleportott vagy a yaml-be be\u00edrjuk a k\u00e9rt adatokat. Kliens oldal 1 2 3 4 5 apt-get update -y \\ && apt-get upgrade -y \\ && apt-get install nginx -y \\ && curl -O https://get.gravitational.com/teleport-v4.3.5-linux-amd64-bin.tar.gz \\ && tar xvf teleport-v4.3.5-linux-amd64-bin.tar.gz 1 cd teleport && ./install \u00edrd \u00e1t a tokent, cs-pin, auth-server:bels\u0151 ip 3025 1 2 3 4 5 teleport start \\ --roles = node \\ --token = 8e075eb6f9aaaa0e332ca0c3b74e111e \\ --ca-pin = sha256:3149226ddf41e3f65cf8bc0ec7ba6d10d6d91324833b66272391146baa46005f \\ --auth-server = 10 .128.0.51:3025 vagy yaml-b\u0151l ind\u00edtva 1 nano teleport.yaml \u00edrd be az adatokat: auth_token auth_servers ca_pin 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 # # Sample Teleport configuration file # Creates a single proxy, auth and node server. # # Things to update: # 1. ca_pin: Obtain the CA pin hash for joining more nodes by running 'tctl status' # on the auth server once Teleport is running. # 2. license-if-using-teleport-enterprise.pem: If you are an Enterprise customer, # obtain this from https://dashboard.gravitational.com/web/ # # --roles=node \\ # --token=0897f35bb235b58de11bd598fa57eab1 \\ # --ca-pin=sha256:60bb43ea9ca11f8737a8f2b528b205e3771e7beefbdbe56ee500a1e72790f41c \\ # --auth-server=10.128.0.42:3025 teleport: nodename: teleport-klient data_dir: /var/lib/teleport auth_token: 0897f35bb235b58de11bd598fa57eab1 auth_servers: + test.keikami.tk:3025 log: output: stderr severity: INFO ca_pin: sha256:60bb43ea9ca11f8737a8f2b528b205e3771e7beefbdbe56ee500a1e72790f41c # ca_pin: sha256:ca-pin-hash-goes-here #auth_service: # enabled: \"yes\" # listen_addr: 0.0.0.0:3025 # tokens: # - proxy,node:483ce403810351987a6d1a99ac74fc6988334bba8e2d66b1 # license_file: /path/to/license-if-using-teleport-enterprise.pem ssh_service: enabled: \"yes\" labels: db_role: master db_type: postgres commands: + name: hostname command: [ /bin/hostname ] period: 1m0s + name: arch command: [ /bin/uname, -p ] period: 1h0m0s #proxy_service: # enabled: \"yes\" # listen_addr: 0.0.0.0:3023 # web_listen_addr: 0.0.0.0:3080 # tunnel_listen_addr: 0.0.0.0:3024 # public_addr: test.keikami.tk:3080 # https_key_file: /etc/letsencrypt/live/test.keikami.tk/privkey.pem # https_cert_file: /etc/letsencrypt/live/test.keikami.tk/fullchain.pem 1 teleport start --roles = node -c teleport.yaml ha hamarabb ind\u00edtottad el a teleportot mind be\u00e1ll\u00edtottad volna a dolgokat 1 rm -rf /var/lib/teleport/","title":"Teleport"},{"location":"Install/teleport/#teleport","text":"ubuntu 18-ra Network tags, sz\u00fcks\u00e9ges portok enged\u00e9lyez\u00e9se a t\u0171zfalon: http-server, https-server, kei, teleport, web Teleport telep\u00edt\u0151 file Telep\u00edt\u00f3 docs Let\u00f6ltj\u00fck a megfelel\u0151t, jelen esetben a 64-es ubuntu-t","title":"Teleport"},{"location":"Install/teleport/#szerver-oldal","text":"1 2 3 4 5 apt-get update -y \\ && apt-get upgrade -y \\ && apt-get install nginx -y \\ && curl -O https://get.gravitational.com/teleport-v4.3.5-linux-amd64-bin.tar.gz \\ && tar xvf teleport-v4.3.5-linux-amd64-bin.tar.gz add-apt k\u00e9r 1 entert, certbotnak megadni az infokat amiket k\u00e9r -email, a, n, 2 1 2 3 add-apt-repository ppa:certbot/certbot apt install python-certbot-nginx -y certbot --nginx -d test.keikami.tk configf\u00e1jl \u00f6ssze \u00e1ll\u00edt\u00e1sa a teleporthoz 1 nano teleport.yaml \u00edrd \u00e1t a public_addr, https_key_file, https_cert_fil 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 # # Sample Teleport configuration file # Creates a single proxy, auth and node server. # # Things to update: # 1. ca_pin: Obtain the CA pin hash for joining more nodes by running 'tctl status' # on the auth server once Teleport is running. # 2. license-if-using-teleport-enterprise.pem: If you are an Enterprise customer, # obtain this from https://dashboard.gravitational.com/web/ # teleport: nodename: teleport data_dir: /var/lib/teleport # auth_token: 483ce403810351987a6d1a99ac74fc6988334bba8e2d66b1 # auth_servers: # - 127.0.0.1:3025 log: output: stderr severity: INFO # ca_pin: sha256:ca-pin-hash-goes-here auth_service: enabled: \"yes\" listen_addr: 0 .0.0.0:3025 # tokens: # - proxy,node:483ce403810351987a6d1a99ac74fc6988334bba8e2d66b1 # license_file: /path/to/license-if-using-teleport-enterprise.pem ssh_service: enabled: \"yes\" labels: db_role: master db_type: postgres commands: + name: hostname command: [ /bin/hostname ] period: 1m0s + name: arch command: [ /bin/uname, -p ] period: 1h0m0s proxy_service: enabled: \"yes\" listen_addr: 0 .0.0.0:3023 web_listen_addr: 0 .0.0.0:3080 tunnel_listen_addr: 0 .0.0.0:3024 public_addr: test.keikami.tk:3080 https_key_file: /etc/letsencrypt/live/test.keikami.tk/privkey.pem https_cert_file: /etc/letsencrypt/live/test.keikami.tk/fullchain.pem 1 cd teleport && ./install && teleport start -c teleport.yaml \u00faj tabbon kiadand\u00f3 parancsok kapott linken root userrel registr\u00e1lni 1 tctl users add keikami root -node tokent gener\u00e1lni 1 tctl nodes add vagy a kapott kommandal ind\u00edtjuk a kliensen a teleportott vagy a yaml-be be\u00edrjuk a k\u00e9rt adatokat.","title":"Szerver oldal"},{"location":"Install/teleport/#kliens-oldal","text":"1 2 3 4 5 apt-get update -y \\ && apt-get upgrade -y \\ && apt-get install nginx -y \\ && curl -O https://get.gravitational.com/teleport-v4.3.5-linux-amd64-bin.tar.gz \\ && tar xvf teleport-v4.3.5-linux-amd64-bin.tar.gz 1 cd teleport && ./install \u00edrd \u00e1t a tokent, cs-pin, auth-server:bels\u0151 ip 3025 1 2 3 4 5 teleport start \\ --roles = node \\ --token = 8e075eb6f9aaaa0e332ca0c3b74e111e \\ --ca-pin = sha256:3149226ddf41e3f65cf8bc0ec7ba6d10d6d91324833b66272391146baa46005f \\ --auth-server = 10 .128.0.51:3025 vagy yaml-b\u0151l ind\u00edtva 1 nano teleport.yaml \u00edrd be az adatokat: auth_token auth_servers ca_pin 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 # # Sample Teleport configuration file # Creates a single proxy, auth and node server. # # Things to update: # 1. ca_pin: Obtain the CA pin hash for joining more nodes by running 'tctl status' # on the auth server once Teleport is running. # 2. license-if-using-teleport-enterprise.pem: If you are an Enterprise customer, # obtain this from https://dashboard.gravitational.com/web/ # # --roles=node \\ # --token=0897f35bb235b58de11bd598fa57eab1 \\ # --ca-pin=sha256:60bb43ea9ca11f8737a8f2b528b205e3771e7beefbdbe56ee500a1e72790f41c \\ # --auth-server=10.128.0.42:3025 teleport: nodename: teleport-klient data_dir: /var/lib/teleport auth_token: 0897f35bb235b58de11bd598fa57eab1 auth_servers: + test.keikami.tk:3025 log: output: stderr severity: INFO ca_pin: sha256:60bb43ea9ca11f8737a8f2b528b205e3771e7beefbdbe56ee500a1e72790f41c # ca_pin: sha256:ca-pin-hash-goes-here #auth_service: # enabled: \"yes\" # listen_addr: 0.0.0.0:3025 # tokens: # - proxy,node:483ce403810351987a6d1a99ac74fc6988334bba8e2d66b1 # license_file: /path/to/license-if-using-teleport-enterprise.pem ssh_service: enabled: \"yes\" labels: db_role: master db_type: postgres commands: + name: hostname command: [ /bin/hostname ] period: 1m0s + name: arch command: [ /bin/uname, -p ] period: 1h0m0s #proxy_service: # enabled: \"yes\" # listen_addr: 0.0.0.0:3023 # web_listen_addr: 0.0.0.0:3080 # tunnel_listen_addr: 0.0.0.0:3024 # public_addr: test.keikami.tk:3080 # https_key_file: /etc/letsencrypt/live/test.keikami.tk/privkey.pem # https_cert_file: /etc/letsencrypt/live/test.keikami.tk/fullchain.pem 1 teleport start --roles = node -c teleport.yaml ha hamarabb ind\u00edtottad el a teleportot mind be\u00e1ll\u00edtottad volna a dolgokat 1 rm -rf /var/lib/teleport/","title":"Kliens oldal"},{"location":"Terraform/aws-vpc/","text":"Terraform VPC peering 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 provider \"aws\" { alias = \"admin-account\" region = var.region shared_credentials_file = \"~/.aws/credentials\" profile = var.aws_admin_account max_retries = 5 } data \"aws_caller_identity\" \"current\" {} data \"aws_caller_identity\" \"admin-account\" { provider = \"aws.admin-account\" } resource \"aws_vpc_peering_connection\" \"demo1-pub-priv\" { peer_owner_id = data.aws_caller_identity.admin-account.account_id peer_vpc_id = module.demo1-pub-vpc.id vpc_id = module.demo1-priv-vpc.id auto_accept = false peer_region = \"eu-central-1\" #auto_accept = true # do not include if the vpcs are not in the same aws acc, use aws_vpc_peering_connection_accepter to accept tags = { Name = \"VPC Peering between pub and priv\" } } # Accepter's side of the connection. resource \"aws_vpc_peering_connection_accepter\" \"demo1-pub-priv-peeraccept\" { provider = aws.admin-account vpc_peering_connection_id = aws_vpc_peering_connection.demo1-pub-priv.id auto_accept = true tags = { Side = \"Accepter\" } } VPC peering terraformban k\u00e9t k\u00fcl\u00f6n accountra, aws sdk-val be\u00e1ll\u00edtott profilokkal 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 provider \"aws\" { # default region = var.region shared_credentials_file = \"~/.aws/credentials\"provider \"aws\" { alias = \"admin-account\" region = var.region shared_credentials_file = \"~/.aws/credentials\" profile = var.aws_admin_account max_retries = 5 } data \"aws_caller_identity\" \"current\" {} data \"aws_caller_identity\" \"admin-account\" { provider = aws.admin-account } resource \"aws_vpc_peering_connection\" \"demo1-pub-priv\" { peer_owner_id = data.aws_caller_identity.admin-account.account_id peer_vpc_id = module.demo1-pub-vpc.id vpc_id = module.demo1-priv-vpc.id auto_accept = false peer_region = \"eu-central-1\" #auto_accept = true # do not include if the vpcs are not in the same aws acc, use aws_vpc_peering_connection_accepter to accept tags = { Name = \"VPC Peering between pub and priv\" } } # Accepter's side of the connection. resource \"aws_vpc_peering_connection_accepter\" \"demo1-pub-priv-peeraccept\" { provider = aws.admin-account vpc_peering_connection_id = aws_vpc_peering_connection.demo1-pub-priv.id auto_accept = true tags = { Side = \"Accepter\" } } profile = var.aws_profile max_retries = 5 }","title":"Terraform VPC peering"},{"location":"Terraform/aws-vpc/#terraform-vpc-peering","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 provider \"aws\" { alias = \"admin-account\" region = var.region shared_credentials_file = \"~/.aws/credentials\" profile = var.aws_admin_account max_retries = 5 } data \"aws_caller_identity\" \"current\" {} data \"aws_caller_identity\" \"admin-account\" { provider = \"aws.admin-account\" } resource \"aws_vpc_peering_connection\" \"demo1-pub-priv\" { peer_owner_id = data.aws_caller_identity.admin-account.account_id peer_vpc_id = module.demo1-pub-vpc.id vpc_id = module.demo1-priv-vpc.id auto_accept = false peer_region = \"eu-central-1\" #auto_accept = true # do not include if the vpcs are not in the same aws acc, use aws_vpc_peering_connection_accepter to accept tags = { Name = \"VPC Peering between pub and priv\" } } # Accepter's side of the connection. resource \"aws_vpc_peering_connection_accepter\" \"demo1-pub-priv-peeraccept\" { provider = aws.admin-account vpc_peering_connection_id = aws_vpc_peering_connection.demo1-pub-priv.id auto_accept = true tags = { Side = \"Accepter\" } }","title":"Terraform VPC peering"},{"location":"Terraform/aws-vpc/#vpc-peering-terraformban-ket-kulon-accountra-aws-sdk-val-beallitott-profilokkal","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 provider \"aws\" { # default region = var.region shared_credentials_file = \"~/.aws/credentials\"provider \"aws\" { alias = \"admin-account\" region = var.region shared_credentials_file = \"~/.aws/credentials\" profile = var.aws_admin_account max_retries = 5 } data \"aws_caller_identity\" \"current\" {} data \"aws_caller_identity\" \"admin-account\" { provider = aws.admin-account } resource \"aws_vpc_peering_connection\" \"demo1-pub-priv\" { peer_owner_id = data.aws_caller_identity.admin-account.account_id peer_vpc_id = module.demo1-pub-vpc.id vpc_id = module.demo1-priv-vpc.id auto_accept = false peer_region = \"eu-central-1\" #auto_accept = true # do not include if the vpcs are not in the same aws acc, use aws_vpc_peering_connection_accepter to accept tags = { Name = \"VPC Peering between pub and priv\" } } # Accepter's side of the connection. resource \"aws_vpc_peering_connection_accepter\" \"demo1-pub-priv-peeraccept\" { provider = aws.admin-account vpc_peering_connection_id = aws_vpc_peering_connection.demo1-pub-priv.id auto_accept = true tags = { Side = \"Accepter\" } } profile = var.aws_profile max_retries = 5 }","title":"VPC peering terraformban k\u00e9t k\u00fcl\u00f6n accountra, aws sdk-val be\u00e1ll\u00edtott profilokkal"},{"location":"api/curl/","text":"api with curl metdata enged\u00e9ly van e az oldalon 1 PUT /1.3/server/server-UUID/ metadata lek\u00e9rdez\u00e9se szerveren 1 curl http://169.254.169.254/metadata/v1.json","title":"api with curl"},{"location":"api/curl/#api-with-curl","text":"","title":"api with curl"},{"location":"api/curl/#metdata-engedely-van-e-az-oldalon","text":"1 PUT /1.3/server/server-UUID/","title":"metdata enged\u00e9ly van e az oldalon"},{"location":"api/curl/#metadata-lekerdezese-szerveren","text":"1 curl http://169.254.169.254/metadata/v1.json","title":"metadata lek\u00e9rdez\u00e9se szerveren"},{"location":"egy%C3%A9b/Ansible/","text":"Ansible Update vars.yml Add host name to the monitoring.yml Update the hosts.conf file with currently IP address or Add a new one Deploy ansible-playbook -i hosts.conf monitoring.yml -v ansible-playbook -i hosts.conf monitoring.yml -v --ask-pass --ask-become-pass ansible-playbook -i hosts.conf monitoring.yml -v --extra-vars newpassword=JELSZO monitoring.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 --- - name: Setting servers hosts: - hq # vars_files: # - ./vars.yml become: yes tasks: - name: update shell: | apt update apt upgrade -y - name: install htop ncdu mc shell: | apt install htop ncdu mc -y - name: install passlib for pass change shell: | apt install python-passlib -y - name: install shell: | apt-get install -y \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg-agent \\ software-properties-common - name: docker shell: | curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - - name: add-repository shell: | add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) \\ stable\" - name: install-docker shell: | apt-get install docker-ce -y - name: install-docker-compose shell: | curl -L \"https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose chmod +x /usr/local/bin/docker-compose - name: add permission shell: | usermod -aG docker {{ ansible_ssh_user }} - name: Creating a new directory file: path: \"/home/{{ansible_ssh_user}}/.ssh\" state: directory - name: create ssh-keys copy: dest: \"/home/{{ ansible_ssh_user }}/.ssh/authorized_keys\" content: | ssh kulcs - name: Add the user Adminna ansible.builtin.user: name: adminna shell: /bin/bash group: sudo - name: Change user password user: name: adminna update_password: always password: \"{{ newpassword|password_hash('sha512') }}\" - name: Creating a new directory file: path: \"/home/adminna/.ssh\" state: directory - name: Creating .aws directory file: path: \"/home/adminna/.aws\" state: directory - name: create ssh-keys copy: dest: \"/home/adminna/.ssh/authorized_keys\" content: | ssh kulcs host.conf 1 2 [hq] IP_c\u00edm ansible_ssh_user = user_name ansible_ssh_pass=user_jelszo ansible_sudo_pass=user_jelszo","title":"Ansible"},{"location":"egy%C3%A9b/Ansible/#ansible","text":"Update vars.yml Add host name to the monitoring.yml Update the hosts.conf file with currently IP address or Add a new one","title":"Ansible"},{"location":"egy%C3%A9b/Ansible/#deploy","text":"ansible-playbook -i hosts.conf monitoring.yml -v ansible-playbook -i hosts.conf monitoring.yml -v --ask-pass --ask-become-pass ansible-playbook -i hosts.conf monitoring.yml -v --extra-vars newpassword=JELSZO monitoring.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 --- - name: Setting servers hosts: - hq # vars_files: # - ./vars.yml become: yes tasks: - name: update shell: | apt update apt upgrade -y - name: install htop ncdu mc shell: | apt install htop ncdu mc -y - name: install passlib for pass change shell: | apt install python-passlib -y - name: install shell: | apt-get install -y \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg-agent \\ software-properties-common - name: docker shell: | curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - - name: add-repository shell: | add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) \\ stable\" - name: install-docker shell: | apt-get install docker-ce -y - name: install-docker-compose shell: | curl -L \"https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose chmod +x /usr/local/bin/docker-compose - name: add permission shell: | usermod -aG docker {{ ansible_ssh_user }} - name: Creating a new directory file: path: \"/home/{{ansible_ssh_user}}/.ssh\" state: directory - name: create ssh-keys copy: dest: \"/home/{{ ansible_ssh_user }}/.ssh/authorized_keys\" content: | ssh kulcs - name: Add the user Adminna ansible.builtin.user: name: adminna shell: /bin/bash group: sudo - name: Change user password user: name: adminna update_password: always password: \"{{ newpassword|password_hash('sha512') }}\" - name: Creating a new directory file: path: \"/home/adminna/.ssh\" state: directory - name: Creating .aws directory file: path: \"/home/adminna/.aws\" state: directory - name: create ssh-keys copy: dest: \"/home/adminna/.ssh/authorized_keys\" content: | ssh kulcs host.conf 1 2 [hq] IP_c\u00edm ansible_ssh_user = user_name ansible_ssh_pass=user_jelszo ansible_sudo_pass=user_jelszo","title":"Deploy"},{"location":"egy%C3%A9b/alapparancsok/","text":"simple commands \"find hol mit keressen\" grep sz\u00f6vegben keres \"dig domain\" dns-n\u00e9v kiszolg\u00e1l\u00f3 ellen\u0151rz\u00e9sre watch [options] command egyszer\u0171bben lehet megfigyelni a fut\u00e1st \u00e9s a hib\u00e1t \"watch docker ps\" wc -l : A f\u00e1jl sor\u00e1nak sz\u00e1m\u00e1t nyomtatja ki wc -w : kinyomtatja a szavak sz\u00e1m\u00e1t a f\u00e1jlban wc -c : Megjelen\u00edti a f\u00e1jlban l\u00e9v\u0151 byte-ok sz\u00e1m\u00e1t wc -m : kinyomtatja a karakterek sz\u00e1m\u00e1t egy f\u00e1jlb\u00f3l wc -L : a f\u00e1jl leghosszabb sor\u00e1nak csak a hossz\u00fas\u00e1g\u00e1t nyomtatja ki wc tecmint.txt : param\u00e9ter n\u00e9lk\u00fcl megjeleniti az alap adatokat egy f\u00e1jlr\u00f3l a sorok \u00e9s szavak sz\u00e1m\u00e1t \u00e9s mennyi byte van benne f\u00e1jlba \u00edr\u00e1s szerkeszt\u0151 program n\u00e9lk\u00fcl 1 echo \"# ls bash by ati\" >> README.md stop and rm a cont\u00e9nerekre mindre 1 docker stop $( docker ps -a -q ) 1 docker rm $( docker ps -a -q ) imageket mindent t\u00f6r\u00f6l 1 docker system prune t\u00f6rli a cont\u00e9nereket 1 docker volume rm $( docker volume ls | awk '{print $2}' ) semmivel \u00edrja fel\u00fcl 1 > defaul password gener\u00e1l\u00e1s 1 2 apt install pwgen pwgen -1ysc 32 2 port hallgat\u00e1s, h haszn\u00e1latban van e 1 lsof -i:80 megtisztitja a portott 1 fuser -k 80 /tcp bead\u00f3s jelsz\u00f3 shban 1 echo thePassword | passwd theUsername --stdin ahol a csomag telep\u00edt\u00e9s interakci\u00f3t k\u00e9r, azt ki lehet kapcsolni, \u00e1ltal\u00e1ban config f\u00e1jlba \u00edrja bele, amiket beolvasna, azt meg tudod cser\u00e9lni \u00e1ltal\u00e1ban ezt a sort haszn\u00e1ljuk 1 export DEBIAN_FRONTEND = noninteractive add user to docker group 1 sudo usermod -aG docker $USER docker images delete 1 docker rmi imagesID Root jelsz\u00f3 ki kapcsol\u00e1sa 1 nano /etc/sudoers comment: #%sudo ALL=(ALL:ALL) ALL paste 1 %sudo ALL =( ALL:ALL ) NOPASSWD: ALL awk mez\u0151/ oszlop ki\u00edrat\u00e1sra who | awk '{print $1,$4}' $ 0 : A teljes sz\u00f6vegsort k\u00e9pviseli. $ 1 : Az els\u0151 mez\u0151t k\u00e9pviseli. $ 7 : A hetedik mez\u0151t k\u00e9pviseli. $ NF : A \u201emez\u0151k sz\u00e1ma\u201d kifejez\u00e9s, \u00e9s az utols\u00f3 mez\u0151t jelenti. xarg v\u00e1ltoz\u00f3 \u00e1tad\u00f3","title":"simple commands"},{"location":"egy%C3%A9b/alapparancsok/#simple-commands","text":"","title":"simple commands"},{"location":"egy%C3%A9b/alapparancsok/#find-hol-mit-keressen","text":"","title":"\"find hol mit keressen\""},{"location":"egy%C3%A9b/alapparancsok/#grep-szovegben-keres","text":"","title":"grep sz\u00f6vegben keres"},{"location":"egy%C3%A9b/alapparancsok/#dig-domain-dns-nev-kiszolgalo-ellenorzesre","text":"","title":"\"dig domain\" dns-n\u00e9v kiszolg\u00e1l\u00f3 ellen\u0151rz\u00e9sre"},{"location":"egy%C3%A9b/alapparancsok/#watch-options-command-egyszerubben-lehet-megfigyelni-a-futast-es-a-hibat-watch-docker-ps","text":"","title":"watch [options] command egyszer\u0171bben lehet megfigyelni a fut\u00e1st \u00e9s a hib\u00e1t \"watch docker ps\""},{"location":"egy%C3%A9b/alapparancsok/#wc-l-a-fajl-soranak-szamat-nyomtatja-ki","text":"","title":"wc -l : A f\u00e1jl sor\u00e1nak sz\u00e1m\u00e1t nyomtatja ki"},{"location":"egy%C3%A9b/alapparancsok/#wc-w-kinyomtatja-a-szavak-szamat-a-fajlban","text":"","title":"wc -w : kinyomtatja a szavak sz\u00e1m\u00e1t a f\u00e1jlban"},{"location":"egy%C3%A9b/alapparancsok/#wc-c-megjeleniti-a-fajlban-levo-byte-ok-szamat","text":"","title":"wc -c : Megjelen\u00edti a f\u00e1jlban l\u00e9v\u0151 byte-ok sz\u00e1m\u00e1t"},{"location":"egy%C3%A9b/alapparancsok/#wc-m-kinyomtatja-a-karakterek-szamat-egy-fajlbol","text":"","title":"wc -m : kinyomtatja a karakterek sz\u00e1m\u00e1t egy f\u00e1jlb\u00f3l"},{"location":"egy%C3%A9b/alapparancsok/#wc-l-a-fajl-leghosszabb-soranak-csak-a-hosszusagat-nyomtatja-ki","text":"","title":"wc -L : a f\u00e1jl leghosszabb sor\u00e1nak csak a hossz\u00fas\u00e1g\u00e1t nyomtatja ki"},{"location":"egy%C3%A9b/alapparancsok/#wc-tecminttxt-parameter-nelkul-megjeleniti-az-alap-adatokat-egy-fajlrol-a-sorok-es-szavak-szamat-es-mennyi-byte-van-benne","text":"","title":"wc tecmint.txt : param\u00e9ter n\u00e9lk\u00fcl megjeleniti az alap adatokat egy f\u00e1jlr\u00f3l a sorok \u00e9s szavak sz\u00e1m\u00e1t \u00e9s mennyi byte van benne"},{"location":"egy%C3%A9b/alapparancsok/#fajlba-iras-szerkeszto-program-nelkul","text":"1 echo \"# ls bash by ati\" >> README.md","title":"f\u00e1jlba \u00edr\u00e1s szerkeszt\u0151 program n\u00e9lk\u00fcl"},{"location":"egy%C3%A9b/alapparancsok/#stop-and-rm-a-contenerekre-mindre","text":"1 docker stop $( docker ps -a -q ) 1 docker rm $( docker ps -a -q )","title":"stop and rm a cont\u00e9nerekre mindre"},{"location":"egy%C3%A9b/alapparancsok/#imageket-mindent-torol","text":"1 docker system prune","title":"imageket mindent t\u00f6r\u00f6l"},{"location":"egy%C3%A9b/alapparancsok/#torli-a-contenereket","text":"1 docker volume rm $( docker volume ls | awk '{print $2}' )","title":"t\u00f6rli a cont\u00e9nereket"},{"location":"egy%C3%A9b/alapparancsok/#semmivel-irja-felul","text":"1 > defaul","title":"semmivel \u00edrja fel\u00fcl"},{"location":"egy%C3%A9b/alapparancsok/#password-generalas","text":"1 2 apt install pwgen pwgen -1ysc 32 2","title":"password gener\u00e1l\u00e1s"},{"location":"egy%C3%A9b/alapparancsok/#port-hallgatas-h-hasznalatban-van-e","text":"1 lsof -i:80","title":"port hallgat\u00e1s, h haszn\u00e1latban van e"},{"location":"egy%C3%A9b/alapparancsok/#megtisztitja-a-portott","text":"1 fuser -k 80 /tcp","title":"megtisztitja a portott"},{"location":"egy%C3%A9b/alapparancsok/#beados-jelszo-shban","text":"1 echo thePassword | passwd theUsername --stdin","title":"bead\u00f3s jelsz\u00f3 shban"},{"location":"egy%C3%A9b/alapparancsok/#ahol-a-csomag-telepites-interakciot-ker-azt-ki-lehet-kapcsolni-altalaban-config-fajlba-irja-bele-amiket-beolvasna-azt-meg-tudod-cserelni-altalaban-ezt-a-sort-hasznaljuk","text":"1 export DEBIAN_FRONTEND = noninteractive","title":"ahol a csomag telep\u00edt\u00e9s interakci\u00f3t k\u00e9r, azt ki lehet kapcsolni, \u00e1ltal\u00e1ban config f\u00e1jlba \u00edrja bele, amiket beolvasna, azt meg tudod cser\u00e9lni \u00e1ltal\u00e1ban ezt a sort haszn\u00e1ljuk"},{"location":"egy%C3%A9b/alapparancsok/#add-user-to-docker-group","text":"1 sudo usermod -aG docker $USER","title":"add user to docker group"},{"location":"egy%C3%A9b/alapparancsok/#docker-images-delete","text":"1 docker rmi imagesID","title":"docker images delete"},{"location":"egy%C3%A9b/alapparancsok/#root-jelszo-ki-kapcsolasa","text":"1 nano /etc/sudoers comment: #%sudo ALL=(ALL:ALL) ALL paste 1 %sudo ALL =( ALL:ALL ) NOPASSWD: ALL awk mez\u0151/ oszlop ki\u00edrat\u00e1sra who | awk '{print $1,$4}' $ 0 : A teljes sz\u00f6vegsort k\u00e9pviseli. $ 1 : Az els\u0151 mez\u0151t k\u00e9pviseli. $ 7 : A hetedik mez\u0151t k\u00e9pviseli. $ NF : A \u201emez\u0151k sz\u00e1ma\u201d kifejez\u00e9s, \u00e9s az utols\u00f3 mez\u0151t jelenti. xarg v\u00e1ltoz\u00f3 \u00e1tad\u00f3","title":"Root jelsz\u00f3 ki kapcsol\u00e1sa"},{"location":"egy%C3%A9b/githubactions/","text":"Github actions https://docs.docker.com/ci-cd/github-actions/ Hozz l\u00e9tre github rep\u00f3t, vagy abban a repoban adj hozz\u00e1 workflows-t amelyikben haszn\u00e1lni szeretn\u00e9d a github-actions-t A rep\u00f3 settings f\u00fcl\u00e9nek a a secret men\u0171pontj\u00e1ban adjuk hozz\u00e1 a Repository secrets-ekn\u00e9l adjuk hozz\u00e1 a doker hubunkat. Docker hubon ezt a tokent az account settingsn\u00e9l tudjuk be\u00e1ll\u00edtani. > Security \u00e9s \u00faj token l\u00e9tre hozz\u00e1sa, nevet adjunk neki \u00e9s l\u00e9tre hozzuk. \u00daj workflow-ot hozzunk l\u00e9tre a rep\u00f3 actions men\u0171pontj\u00e1ban. Docker build 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 name : Docker Image CI # melyik brenchbe pusholjon , pulloljon on : push : branches : [ master ] pull_request : branches : [ master ] # feladat blokk jobs : build : # milyen k\u00f6rnyezetben hajtsa v\u00e9gre a l\u00e9p\u00e9seket runs - on : ubuntu - latest steps : # actions kinek , melyik actionj\u00e1nak , melyik verzi\u00f3j\u00e1t szeretn\u00e9nk haszn\u00e1lni - uses : actions / checkout @ v2 - name : Build the Docker image run : docker build . -- file Dockerfile Docker run 1 2 3 4 5 - uses: addnab/docker-run-action@v1 with: image: ${ { env . IMAGE_NAME } } run: | echo \"first line\" commandok futtat\u00e1sa Nevet adunk a commandnak, kap egy run parancsot \u00e9s be\u00edrjuk a futtatand\u00f3 commandot. 1 2 - name: Log into registry run: echo \"Hello world\" parancsok eredm\u00e9nyn\u00e9nek elment\u00e9s\u00e9nek lehet\u0151s\u00e9gei Example: Az actions logj\u00e1t le tudjuk menteni. Egy command parancsal ki tudjuk \u00edratni f\u00e1jlba, majd az adott filt github push parancs seg\u00edts\u00e9g\u00e9vel rep\u00f3ba tudjuk tenni. Van el\u0151re elk\u00e9szh\u00edtet actionsok amik hasonl\u00f3 eredm\u00e9nyre k\u00e9pesek. Programok telep\u00edt\u00e9se saj\u00e1t g\u00e9pn\u00e9l 1 nano /etc/sudoers comment: #%sudo ALL=(ALL:ALL) ALL paste 1 %sudo ALL =( ALL:ALL ) NOPASSWD: ALL 1 2 3 steps: - name: install test run: sudo apt update self-hostid a runs-on: r\u00e9sz n\u00e9l self-hosted -et \u00edrunk a yml-be github- rep\u00f3- settings- actions men\u0171pontban self-hosted runnern\u00e9l hozz\u00e1 adjuk a g\u00e9pet ami futatni szeretn\u00e9nk, be\u00e1ll\u00edtjuk az oper\u00e1ci\u00f3s rendszert \u00e9s az architektur\u00e1t pl 64x \u00e9s a le\u00edrtak alapj\u00e1n haladva \u00e1ll\u00edtjuk be a g\u00e9pet.","title":"Github actions"},{"location":"egy%C3%A9b/githubactions/#github-actions","text":"https://docs.docker.com/ci-cd/github-actions/ Hozz l\u00e9tre github rep\u00f3t, vagy abban a repoban adj hozz\u00e1 workflows-t amelyikben haszn\u00e1lni szeretn\u00e9d a github-actions-t A rep\u00f3 settings f\u00fcl\u00e9nek a a secret men\u0171pontj\u00e1ban adjuk hozz\u00e1 a Repository secrets-ekn\u00e9l adjuk hozz\u00e1 a doker hubunkat. Docker hubon ezt a tokent az account settingsn\u00e9l tudjuk be\u00e1ll\u00edtani. > Security \u00e9s \u00faj token l\u00e9tre hozz\u00e1sa, nevet adjunk neki \u00e9s l\u00e9tre hozzuk. \u00daj workflow-ot hozzunk l\u00e9tre a rep\u00f3 actions men\u0171pontj\u00e1ban.","title":"Github actions"},{"location":"egy%C3%A9b/githubactions/#docker-build","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 name : Docker Image CI # melyik brenchbe pusholjon , pulloljon on : push : branches : [ master ] pull_request : branches : [ master ] # feladat blokk jobs : build : # milyen k\u00f6rnyezetben hajtsa v\u00e9gre a l\u00e9p\u00e9seket runs - on : ubuntu - latest steps : # actions kinek , melyik actionj\u00e1nak , melyik verzi\u00f3j\u00e1t szeretn\u00e9nk haszn\u00e1lni - uses : actions / checkout @ v2 - name : Build the Docker image run : docker build . -- file Dockerfile","title":"Docker build"},{"location":"egy%C3%A9b/githubactions/#docker-run","text":"1 2 3 4 5 - uses: addnab/docker-run-action@v1 with: image: ${ { env . IMAGE_NAME } } run: | echo \"first line\"","title":"Docker run"},{"location":"egy%C3%A9b/githubactions/#commandok-futtatasa","text":"Nevet adunk a commandnak, kap egy run parancsot \u00e9s be\u00edrjuk a futtatand\u00f3 commandot. 1 2 - name: Log into registry run: echo \"Hello world\"","title":"commandok futtat\u00e1sa"},{"location":"egy%C3%A9b/githubactions/#parancsok-eredmenynenek-elmentesenek-lehetosegei","text":"Example: Az actions logj\u00e1t le tudjuk menteni. Egy command parancsal ki tudjuk \u00edratni f\u00e1jlba, majd az adott filt github push parancs seg\u00edts\u00e9g\u00e9vel rep\u00f3ba tudjuk tenni. Van el\u0151re elk\u00e9szh\u00edtet actionsok amik hasonl\u00f3 eredm\u00e9nyre k\u00e9pesek.","title":"parancsok eredm\u00e9nyn\u00e9nek elment\u00e9s\u00e9nek lehet\u0151s\u00e9gei"},{"location":"egy%C3%A9b/githubactions/#programok-telepitese","text":"saj\u00e1t g\u00e9pn\u00e9l 1 nano /etc/sudoers comment: #%sudo ALL=(ALL:ALL) ALL paste 1 %sudo ALL =( ALL:ALL ) NOPASSWD: ALL 1 2 3 steps: - name: install test run: sudo apt update","title":"Programok telep\u00edt\u00e9se"},{"location":"egy%C3%A9b/githubactions/#self-hostid","text":"a runs-on: r\u00e9sz n\u00e9l self-hosted -et \u00edrunk a yml-be github- rep\u00f3- settings- actions men\u0171pontban self-hosted runnern\u00e9l hozz\u00e1 adjuk a g\u00e9pet ami futatni szeretn\u00e9nk, be\u00e1ll\u00edtjuk az oper\u00e1ci\u00f3s rendszert \u00e9s az architektur\u00e1t pl 64x \u00e9s a le\u00edrtak alapj\u00e1n haladva \u00e1ll\u00edtjuk be a g\u00e9pet.","title":"self-hostid"},{"location":"egy%C3%A9b/gitlab-ci/","text":"Gitlab-ci https://docs.gitlab.com/ee/ci/examples/README.html https://docs.gitlab.com/ee/ci/yaml/gitlab_ci_yaml.html L\u00e9trehozzunk egy .gitlab-ci.yml nev\u0171 f\u00e1jlt. Ebben a f\u00e1jlban megadhat\u00fcnk: El\u0151re v\u00e1ltozokat: 1 2 3 variables: POSTGRES_DB: sample-test DATABASE_URL: \"postgresql://postgres@postgres:5432/sample-test\" Sz\u00fcks\u00e9ges el\u0151felt\u00e9teleket adhatsz meg: 1 2 3 4 5 6 7 8 9 before_script: - apt-get update -y - apt-get install default-jre postgresql-client -y - wget https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein - chmod a+x lein - export LEIN_ROOT = 1 - PATH = $PATH :. - lein deps - lein migratus migrate Feladatokat csoportos\u00edtva adhatod ki: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 stages: - build - test build-code-job: stage: build script: - echo \"Check the ruby version, then build some Ruby project files:\" - ruby -v - rake test-code-job1: stage: test script: - echo \"If the files are built successfully, test some files with one command:\" - rake test1 test-code-job2: stage: test script: - echo \"If the files are built successfully, test other files with a different command:\" - rake test2","title":"Gitlab-ci"},{"location":"egy%C3%A9b/gitlab-ci/#gitlab-ci","text":"https://docs.gitlab.com/ee/ci/examples/README.html https://docs.gitlab.com/ee/ci/yaml/gitlab_ci_yaml.html L\u00e9trehozzunk egy .gitlab-ci.yml nev\u0171 f\u00e1jlt. Ebben a f\u00e1jlban megadhat\u00fcnk: El\u0151re v\u00e1ltozokat: 1 2 3 variables: POSTGRES_DB: sample-test DATABASE_URL: \"postgresql://postgres@postgres:5432/sample-test\" Sz\u00fcks\u00e9ges el\u0151felt\u00e9teleket adhatsz meg: 1 2 3 4 5 6 7 8 9 before_script: - apt-get update -y - apt-get install default-jre postgresql-client -y - wget https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein - chmod a+x lein - export LEIN_ROOT = 1 - PATH = $PATH :. - lein deps - lein migratus migrate Feladatokat csoportos\u00edtva adhatod ki: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 stages: - build - test build-code-job: stage: build script: - echo \"Check the ruby version, then build some Ruby project files:\" - ruby -v - rake test-code-job1: stage: test script: - echo \"If the files are built successfully, test some files with one command:\" - rake test1 test-code-job2: stage: test script: - echo \"If the files are built successfully, test other files with a different command:\" - rake test2","title":"Gitlab-ci"},{"location":"egy%C3%A9b/nixstats/","text":"Nixstats 1 2 3 4 5 6 PATH = /usr/local/bin/: $PATH yum install wget python27-devel.x86_64 -y wget --no-check-certificate -N https://www.nixstats.com/nixstatsagent.sh && bash nixstatsagent.sh 5f9ad5978a5c8c03f7539a15 wget https://bootstrap.pypa.io/3.3/get-pip.py python get-pip.py Ha nem m\u0171k\u00f6dik, akkor pr\u00f3b\u00e1ld ezzel: yum groupinstall \"Development Tools\" Remove agent https://help.nixstats.com/en/article/uninstall-the-monitoring-agent-1iygnn3/","title":"Nixstats"},{"location":"egy%C3%A9b/nixstats/#nixstats","text":"1 2 3 4 5 6 PATH = /usr/local/bin/: $PATH yum install wget python27-devel.x86_64 -y wget --no-check-certificate -N https://www.nixstats.com/nixstatsagent.sh && bash nixstatsagent.sh 5f9ad5978a5c8c03f7539a15 wget https://bootstrap.pypa.io/3.3/get-pip.py python get-pip.py Ha nem m\u0171k\u00f6dik, akkor pr\u00f3b\u00e1ld ezzel: yum groupinstall \"Development Tools\"","title":"Nixstats"},{"location":"egy%C3%A9b/nixstats/#remove-agent","text":"https://help.nixstats.com/en/article/uninstall-the-monitoring-agent-1iygnn3/","title":"Remove agent"},{"location":"egy%C3%A9b/python/","text":"Python https://docs.gitlab.com/ee/ci/yaml/gitlab_ci_yaml.html F\u00e1jl kiterjeszt\u00e9s .py 1 #!/usr/bin/env python3 TCP alkalmasabb szerver kliens kapcsolatra: 1 2 3 TCP = socket . SOCK_STREAM UDP = socket . SOCK_DGRAM","title":"Python"},{"location":"egy%C3%A9b/python/#python","text":"https://docs.gitlab.com/ee/ci/yaml/gitlab_ci_yaml.html F\u00e1jl kiterjeszt\u00e9s .py 1 #!/usr/bin/env python3 TCP alkalmasabb szerver kliens kapcsolatra: 1 2 3 TCP = socket . SOCK_STREAM UDP = socket . SOCK_DGRAM","title":"Python"},{"location":"egy%C3%A9b/reversproxy-nginx/","text":"Revers proxy config- nginx 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 proxy_cache_path /var/cache/nginx levels = 1 :2 keys_zone = my_cache:10m max_size = 9000g inactive = 1d ; proxy_temp_path /var/cache/nginx/tmp ; server { listen 80 ; return 301 https:// $host$request_uri ; } server { listen 443 ; server_name DOMAIN ; ssl_certificate /etc/letsencrypt/live/DOMAIN/fullchain.pem ; ssl_certificate_key /etc/letsencrypt/live/DOMAIN/privkey.pem ; ssl on ; ssl_session_cache builtin:1000 shared:SSL:10m ; ssl_protocols TLSv1 TLSv1.1 TLSv1.2 ; ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4 ; ssl_prefer_server_ciphers on ; access_log /var/log/nginx/jenkins.access.log ; add_header x-cache-status $upstream_cache_status ; location / { proxy_cache my_cache ; proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504 ; proxy_ignore_headers Set-Cookie ; proxy_set_header Host proxyzotDomain ; # proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr ; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; # proxy_pass proxyzotDomain; proxy_pass proxyzotDomain ; } }","title":"Revers proxy config- nginx"},{"location":"egy%C3%A9b/reversproxy-nginx/#revers-proxy-config-nginx","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 proxy_cache_path /var/cache/nginx levels = 1 :2 keys_zone = my_cache:10m max_size = 9000g inactive = 1d ; proxy_temp_path /var/cache/nginx/tmp ; server { listen 80 ; return 301 https:// $host$request_uri ; } server { listen 443 ; server_name DOMAIN ; ssl_certificate /etc/letsencrypt/live/DOMAIN/fullchain.pem ; ssl_certificate_key /etc/letsencrypt/live/DOMAIN/privkey.pem ; ssl on ; ssl_session_cache builtin:1000 shared:SSL:10m ; ssl_protocols TLSv1 TLSv1.1 TLSv1.2 ; ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4 ; ssl_prefer_server_ciphers on ; access_log /var/log/nginx/jenkins.access.log ; add_header x-cache-status $upstream_cache_status ; location / { proxy_cache my_cache ; proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504 ; proxy_ignore_headers Set-Cookie ; proxy_set_header Host proxyzotDomain ; # proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr ; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; # proxy_pass proxyzotDomain; proxy_pass proxyzotDomain ; } }","title":"Revers proxy config- nginx"},{"location":"egy%C3%A9b/rsync/","text":"rsync passbolt, bitwarden k\u00f6lt\u00f6ztet\u00e9se rsync weblap ez mind2 esetre alkalmazand\u00f3 somekey l\u00e9trehoz\u00e1sa a forr\u00e1s szerveren haszn\u00e1latban l\u00e9v\u0151 public key belem\u00e1sol\u00e1sa chmod 600 somekey; m\u00e1sk\u00e9p s\u00edrna h nem biztons\u00e1gos command fel\u00e9p\u00edt\u00e9se rsync : command -arvpz : command kapcsol\u00f3k --progress : mutassa h h\u00f3l j\u00e1r a f\u00e1jl \u00e1t vitel -e \"ssh : meghat\u00e1rozza, h ssh-val akarsz kapcsolodni -o StrictHostKeyChecking=no : kinyomja a kulcsal kapcsolatos y/n-t -o UserKnownHostsFile=/dev/null : a hibadatot mindent a dev/nullba \u00edr -i $HOME/.ssh/somekey \" : hol keresse \u00e9s milyen n\u00e9ven a kulcsot ~/passbolt_docker : mit m\u00e1solunk; ~ helyetesiti a hely\u00e9t most pl a root mapp\u00e1t, de ki is lehet \u00edrni root@passboltnew.keikami.tk:/root/ : hova csatlakozunk \u00e9s ott hova m\u00e1solja a kijel\u00f6lt f\u00e1jlt passboltnew.keikami.tk : ip helyet van mert van dns-felold\u00e1sunk passbolt \u00e1tk\u00f6lt\u00f6ztet\u00e9se el\u0151tte le\u00e1ll\u00edtjuk a passboltot, hib\u00e1kat okozhat ha futt\u00f3 \u00e1llapotban k\u00f6lt\u00f6ztetj\u00fck 1 docker-compose -f passbolt_docker/docker-compose.yml down a passbolt eg\u00e9sz mapp\u00e1j\u00e1t vissz\u00fck 1 rsync -arvpz --progress -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $HOME /.ssh/somekey \" ~/passbolt_docker root@passboltnew.keikami.tk:/root/ a c\u00e9l szerveren elind\u00edtjuk a docker-compost -f az\u00e9rt kell mert f\u00e1jlb\u00f3l ind\u00edtjuk; nem vagyunk a mapp\u00e1j\u00e1ban 1 docker-compose -f passbolt_docker/docker-compose.yml up ekkor let\u00f6lti a kont\u00e9nerhez imageseket ha ez sikeresen megt\u00f6rt\u00e9nt le downoljuk a docker-compost 1 docker-compose -f passbolt_docker/docker-compose.yml down ezutn\u00e1n t\u00f6r\u00f6ln\u00fcnk kell amit voljumokon l\u00e9tre hozott mag\u00e1nak adatb\u00e1zis adatokat ezt az\u00e9rt kell mert a ymlben benne van h mag\u00e1nak hozza ezeket l\u00e9tre ha nem \u00edgy lenne bes\u00edrna h m\u00e1r ott van, de \u00edgy nem pr\u00f3bl\u00e9ma ha fel\u00fcl \u00edrjuk, lecser\u00e9lj\u00f6k \u0151ket ymlben a volumes deklar\u00e1l\u00e1s jelen esetben \u00edgy n\u00e9zett ki 1 2 3 4 volumes: database_volume: gpg_volume: images_volume: ezzel bele l\u00e9p\u00fcnk minden mapp\u00e1ba amit a /var/lib/docker/volumes/ tartalmaz, majd azokban t\u00f6r\u00f6li a _data-t tartalmaz\u00f3 f\u00e1jlokat \u00e9s azok tartalm\u00e1t 1 rm -rf */_data/* \u00e1t m\u00e1soljuk a sz\u00fcks\u00e9ges adatb\u00e1zis adatokat 1 rsync -arvpz --progress -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $HOME /.ssh/somekey \" /var/lib/docker/volumes/passbolt* root@passboltnew.keikami.tk:/var/lib/docker/volumes/ a weblap valid\u00e1l\u00e1shoz sz\u00fcks\u00e9g volt nginx-re \u00edgy azt is \u00e1t m\u00e1soljuk 1 rsync -arvpz --progress -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $HOME /.ssh/somekey \" /etc/nginx/* root@passboltnew.keikami.tk:/etc/nginx/ valamint a tanus\u00edtv\u00e1nyokat is amit a letsencrypt gener\u00e1lt 1 rsync -arvpz --progress -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $HOME /.ssh/somekey \" /etc/letsencrypt/* root@passboltnew.keikami.tk:/etc/letsencrypt/ majd a c\u00e9l g\u00e9pen telep\u00edtj\u00fck, majd el is ind\u00edtjuk azt 1 apt install nginx 1 service nginx start v\u00e9g\u00fcl a docker-compose up-ot ism\u00e9t kiadjuk 1 docker-compose -f passbolt_docker/docker-compose.yml up BITWARDEN k\u00f6lt\u00f6ztet\u00e9se El\u0151sz\u0151r is ezt is le kell \u00e1ll\u00edtani 1 docker-compose down itt egyszer\u0171bb a helyzet mert a voljumok helye mindenhol pontosan meg van adva bwdata m\u00e1sol\u00e1s, itt ip-vel 1 rsync -arvpz --progress -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $HOME /.ssh/somekey \" ~/bwdata root@94.237.99.43:/root/ pr\u00f3b\u00e1lhatjuk ind\u00edtani, de ezt scriptb\u0151l kell le is lehet t\u00f6lteni a bitwarden.sh-t de azt is m\u00e1soltam 1 rsync -arvpz --progress -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $HOME /.ssh/somekey \" ~/bwdata ~/bitwarden.sh root@94.237.99.43:/root/ inditjuk a scriptet 1 ./bitwarden.sh start","title":"rsync"},{"location":"egy%C3%A9b/rsync/#rsync","text":"","title":"rsync"},{"location":"egy%C3%A9b/rsync/#passbolt-bitwarden-koltoztetese","text":"rsync weblap","title":"passbolt, bitwarden k\u00f6lt\u00f6ztet\u00e9se"},{"location":"egy%C3%A9b/rsync/#ez-mind2-esetre-alkalmazando","text":"somekey l\u00e9trehoz\u00e1sa a forr\u00e1s szerveren haszn\u00e1latban l\u00e9v\u0151 public key belem\u00e1sol\u00e1sa chmod 600 somekey; m\u00e1sk\u00e9p s\u00edrna h nem biztons\u00e1gos","title":"ez mind2 esetre alkalmazand\u00f3"},{"location":"egy%C3%A9b/rsync/#command-felepitese","text":"rsync : command -arvpz : command kapcsol\u00f3k --progress : mutassa h h\u00f3l j\u00e1r a f\u00e1jl \u00e1t vitel -e \"ssh : meghat\u00e1rozza, h ssh-val akarsz kapcsolodni -o StrictHostKeyChecking=no : kinyomja a kulcsal kapcsolatos y/n-t -o UserKnownHostsFile=/dev/null : a hibadatot mindent a dev/nullba \u00edr -i $HOME/.ssh/somekey \" : hol keresse \u00e9s milyen n\u00e9ven a kulcsot ~/passbolt_docker : mit m\u00e1solunk; ~ helyetesiti a hely\u00e9t most pl a root mapp\u00e1t, de ki is lehet \u00edrni root@passboltnew.keikami.tk:/root/ : hova csatlakozunk \u00e9s ott hova m\u00e1solja a kijel\u00f6lt f\u00e1jlt passboltnew.keikami.tk : ip helyet van mert van dns-felold\u00e1sunk","title":"command fel\u00e9p\u00edt\u00e9se"},{"location":"egy%C3%A9b/rsync/#passbolt-atkoltoztetese","text":"","title":"passbolt \u00e1tk\u00f6lt\u00f6ztet\u00e9se"},{"location":"egy%C3%A9b/rsync/#elotte-leallitjuk-a-passboltot-hibakat-okozhat-ha-futto-allapotban-koltoztetjuk","text":"1 docker-compose -f passbolt_docker/docker-compose.yml down","title":"el\u0151tte le\u00e1ll\u00edtjuk a passboltot, hib\u00e1kat okozhat ha futt\u00f3 \u00e1llapotban k\u00f6lt\u00f6ztetj\u00fck"},{"location":"egy%C3%A9b/rsync/#a-passbolt-egesz-mappajat-visszuk","text":"1 rsync -arvpz --progress -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $HOME /.ssh/somekey \" ~/passbolt_docker root@passboltnew.keikami.tk:/root/","title":"a passbolt eg\u00e9sz mapp\u00e1j\u00e1t vissz\u00fck"},{"location":"egy%C3%A9b/rsync/#a-cel-szerveren-elinditjuk-a-docker-compost","text":"","title":"a c\u00e9l szerveren elind\u00edtjuk a docker-compost"},{"location":"egy%C3%A9b/rsync/#-f-azert-kell-mert-fajlbol-inditjuk-nem-vagyunk-a-mappajaban","text":"1 docker-compose -f passbolt_docker/docker-compose.yml up","title":"-f az\u00e9rt kell mert f\u00e1jlb\u00f3l ind\u00edtjuk; nem vagyunk a mapp\u00e1j\u00e1ban"},{"location":"egy%C3%A9b/rsync/#ekkor-letolti-a-kontenerhez-imageseket","text":"","title":"ekkor let\u00f6lti a kont\u00e9nerhez imageseket"},{"location":"egy%C3%A9b/rsync/#ha-ez-sikeresen-megtortent-le-downoljuk-a-docker-compost","text":"1 docker-compose -f passbolt_docker/docker-compose.yml down","title":"ha ez sikeresen megt\u00f6rt\u00e9nt le downoljuk a docker-compost"},{"location":"egy%C3%A9b/rsync/#ezutnan-torolnunk-kell-amit-voljumokon-letre-hozott-maganak-adatbazis-adatokat","text":"","title":"ezutn\u00e1n t\u00f6r\u00f6ln\u00fcnk kell amit voljumokon l\u00e9tre hozott mag\u00e1nak adatb\u00e1zis adatokat"},{"location":"egy%C3%A9b/rsync/#ezt-azert-kell-mert-a-ymlben-benne-van-h-maganak-hozza-ezeket-letre","text":"","title":"ezt az\u00e9rt kell mert a ymlben benne van h mag\u00e1nak hozza ezeket l\u00e9tre"},{"location":"egy%C3%A9b/rsync/#ha-nem-igy-lenne-besirna-h-mar-ott-van-de-igy-nem-problema-ha-felul-irjuk-lecsereljok-oket","text":"","title":"ha nem \u00edgy lenne bes\u00edrna h m\u00e1r ott van, de \u00edgy nem pr\u00f3bl\u00e9ma ha fel\u00fcl \u00edrjuk, lecser\u00e9lj\u00f6k \u0151ket"},{"location":"egy%C3%A9b/rsync/#ymlben-a-volumes-deklaralas-jelen-esetben-igy-nezett-ki","text":"1 2 3 4 volumes: database_volume: gpg_volume: images_volume:","title":"ymlben a volumes deklar\u00e1l\u00e1s jelen esetben \u00edgy n\u00e9zett ki"},{"location":"egy%C3%A9b/rsync/#ezzel-bele-lepunk-minden-mappaba-amit-a-varlibdockervolumes-tartalmaz-majd-azokban-toroli-a-_data-t-tartalmazo-fajlokat-es-azok-tartalmat","text":"1 rm -rf */_data/*","title":"ezzel bele l\u00e9p\u00fcnk minden mapp\u00e1ba amit a /var/lib/docker/volumes/ tartalmaz, majd azokban t\u00f6r\u00f6li a _data-t tartalmaz\u00f3 f\u00e1jlokat \u00e9s azok tartalm\u00e1t"},{"location":"egy%C3%A9b/rsync/#at-masoljuk-a-szukseges-adatbazis-adatokat","text":"1 rsync -arvpz --progress -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $HOME /.ssh/somekey \" /var/lib/docker/volumes/passbolt* root@passboltnew.keikami.tk:/var/lib/docker/volumes/","title":"\u00e1t m\u00e1soljuk a sz\u00fcks\u00e9ges adatb\u00e1zis adatokat"},{"location":"egy%C3%A9b/rsync/#a-weblap-validalashoz-szukseg-volt-nginx-re-igy-azt-is-at-masoljuk","text":"1 rsync -arvpz --progress -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $HOME /.ssh/somekey \" /etc/nginx/* root@passboltnew.keikami.tk:/etc/nginx/","title":"a weblap valid\u00e1l\u00e1shoz sz\u00fcks\u00e9g volt nginx-re \u00edgy azt is \u00e1t m\u00e1soljuk"},{"location":"egy%C3%A9b/rsync/#valamint-a-tanusitvanyokat-is-amit-a-letsencrypt-generalt","text":"1 rsync -arvpz --progress -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $HOME /.ssh/somekey \" /etc/letsencrypt/* root@passboltnew.keikami.tk:/etc/letsencrypt/","title":"valamint a tanus\u00edtv\u00e1nyokat is amit a letsencrypt gener\u00e1lt"},{"location":"egy%C3%A9b/rsync/#majd-a-cel-gepen-telepitjuk-majd-el-is-inditjuk-azt","text":"1 apt install nginx 1 service nginx start","title":"majd a c\u00e9l g\u00e9pen telep\u00edtj\u00fck, majd el is ind\u00edtjuk azt"},{"location":"egy%C3%A9b/rsync/#vegul-a-docker-compose-up-ot-ismet-kiadjuk","text":"1 docker-compose -f passbolt_docker/docker-compose.yml up","title":"v\u00e9g\u00fcl a docker-compose up-ot ism\u00e9t kiadjuk"},{"location":"egy%C3%A9b/rsync/#bitwarden-koltoztetese","text":"","title":"BITWARDEN k\u00f6lt\u00f6ztet\u00e9se"},{"location":"egy%C3%A9b/rsync/#eloszor-is-ezt-is-le-kell-allitani","text":"1 docker-compose down","title":"El\u0151sz\u0151r is ezt is le kell \u00e1ll\u00edtani"},{"location":"egy%C3%A9b/rsync/#itt-egyszerubb-a-helyzet-mert-a-voljumok-helye-mindenhol-pontosan-meg-van-adva","text":"","title":"itt egyszer\u0171bb a helyzet mert a voljumok helye mindenhol pontosan meg van adva"},{"location":"egy%C3%A9b/rsync/#bwdata-masolas-itt-ip-vel","text":"1 rsync -arvpz --progress -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $HOME /.ssh/somekey \" ~/bwdata root@94.237.99.43:/root/","title":"bwdata m\u00e1sol\u00e1s, itt ip-vel"},{"location":"egy%C3%A9b/rsync/#probalhatjuk-inditani-de-ezt-scriptbol-kell","text":"","title":"pr\u00f3b\u00e1lhatjuk ind\u00edtani, de ezt scriptb\u0151l kell"},{"location":"egy%C3%A9b/rsync/#le-is-lehet-tolteni-a-bitwardensh-t-de-azt-is-masoltam","text":"1 rsync -arvpz --progress -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $HOME /.ssh/somekey \" ~/bwdata ~/bitwarden.sh root@94.237.99.43:/root/","title":"le is lehet t\u00f6lteni a bitwarden.sh-t de azt is m\u00e1soltam"},{"location":"egy%C3%A9b/rsync/#inditjuk-a-scriptet","text":"1 ./bitwarden.sh start","title":"inditjuk a scriptet"},{"location":"provider/upcloud/","text":"upcload run.sh -curl command 1 curl -X POST -H \"Authorization: Basic ***TOKEN***\" -H \"Content-Type: application/json\" -d @./servercreate.json https://api.upcloud.com/1.3/server -servercreate.json 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 { \"server\" : { \"user_data\" : \"#!/bin/bash\\napt-get update\\napt-get install -y \\\\\\n apt-transport-https \\\\\\n ca-certificates \\\\\\n curl \\\\\\n gnupg-agent \\\\\\n software-properties-common\\n\\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\\nadd-apt-repository \\\\\\n \\\"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\\\\n $( lsb_release -cs ) \\\\\\n stable\\\"\\napt-get install docker-ce -y\\ncurl -L \\\"https://github.com/docker/compose/releases/download/1.26.1/docker-compose- $( uname -s ) - $( uname -m ) \\\" -o /usr/local/bin/docker-compose\\nchmod +x /usr/local/bin/docker-compose\" , \"zone\" : \"fi-hel1\" , \"title\" : \"My Debian server\" , \"hostname\" : \"debian.example.com\" , \"plan\" : \"1xCPU-1GB\" , \"storage_devices\" : { \"storage_device\" : [ { \"action\" : \"clone\" , \"storage\" : \"01000000-0000-4000-8000-000030080200\" , \"title\" : \"Ubuntu Server 18.04 LTS (Bionic Beaver)\" , \"size\" : 25 , \"tier\" : \"maxiops\" } ] } , \"networking\" : { \"interfaces\" : { \"interface\" : [ { \"ip_addresses\" : { \"ip_address\" : [{ \"family\" : \"IPv4\" }] } , \"type\" : \"public\" } , { \"ip_addresses\" : { \"ip_address\" : [{ \"family\" : \"IPv4\" }] } , \"type\" : \"utility\" } ] } } , \"login_user\" : { \"username\" : \"upclouduser\" , \"ssh_keys\" : { \"ssh_key\" : [ \"SSH-PUB-KEY-1\" , \"SSH-PUB-KEY-2\" ] } } } }","title":"upcload"},{"location":"provider/upcloud/#upcload","text":"","title":"upcload"},{"location":"provider/upcloud/#runsh","text":"-curl command 1 curl -X POST -H \"Authorization: Basic ***TOKEN***\" -H \"Content-Type: application/json\" -d @./servercreate.json https://api.upcloud.com/1.3/server -servercreate.json 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 { \"server\" : { \"user_data\" : \"#!/bin/bash\\napt-get update\\napt-get install -y \\\\\\n apt-transport-https \\\\\\n ca-certificates \\\\\\n curl \\\\\\n gnupg-agent \\\\\\n software-properties-common\\n\\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\\nadd-apt-repository \\\\\\n \\\"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\\\\n $( lsb_release -cs ) \\\\\\n stable\\\"\\napt-get install docker-ce -y\\ncurl -L \\\"https://github.com/docker/compose/releases/download/1.26.1/docker-compose- $( uname -s ) - $( uname -m ) \\\" -o /usr/local/bin/docker-compose\\nchmod +x /usr/local/bin/docker-compose\" , \"zone\" : \"fi-hel1\" , \"title\" : \"My Debian server\" , \"hostname\" : \"debian.example.com\" , \"plan\" : \"1xCPU-1GB\" , \"storage_devices\" : { \"storage_device\" : [ { \"action\" : \"clone\" , \"storage\" : \"01000000-0000-4000-8000-000030080200\" , \"title\" : \"Ubuntu Server 18.04 LTS (Bionic Beaver)\" , \"size\" : 25 , \"tier\" : \"maxiops\" } ] } , \"networking\" : { \"interfaces\" : { \"interface\" : [ { \"ip_addresses\" : { \"ip_address\" : [{ \"family\" : \"IPv4\" }] } , \"type\" : \"public\" } , { \"ip_addresses\" : { \"ip_address\" : [{ \"family\" : \"IPv4\" }] } , \"type\" : \"utility\" } ] } } , \"login_user\" : { \"username\" : \"upclouduser\" , \"ssh_keys\" : { \"ssh_key\" : [ \"SSH-PUB-KEY-1\" , \"SSH-PUB-KEY-2\" ] } } } }","title":"run.sh"},{"location":"scripts/apache2statuslog/","text":"Status log apache2 Install links ahol majd futtatni akarod a scriptet. 1 2 apt update apt install links Create exampe /tmp/apache2statuslog.sh 1 docker exec $( docker ps | grep php | cut -d ' ' -f1 ) bash -c 'links -dump http://localhost:80/server-status > /tmp/`date +' %Y%m%d-%H%M%S '`-${HOSTNAME}.txt' Edit crontab 1 2 * * * * * root sleep 30 ; bash /tmp/apache2statuslog.sh * * * * * root bash /tmp/apache2statuslog.sh Apache config URL c\u00edmet cser\u00e9ld ki benne. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 <VirtualHost *:80 > ServerName 127.0.0.1 ServerAlias localhost DocumentRoot /var/www/ #figyelni kell a htaccess-re :smile: <Location \"/server-status\" > SetHandler server-status #Require host localhost #uncomment to only allow requests from localhost </Location> </VirtualHost> <VirtualHost _default_:80 > ServerName psik.io ServerAlias staging.psik.io ServerAdmin webmaster@localhost DocumentRoot /var/www/html/public Alias \"/public\" \"/var/www/html/public\" Alias \"/admin/public\" \"/var/www/html/admin/public\" <Directory /> Options Indexes FollowSymLinks MultiViews AllowOverride All Order allow,deny allow from all Require all granted </Directory> ProxyRequests Off SSLProxyEngine on ProxyPass /marketing/he https://URLCIM/ Redirect \"/marketing/en\" \"/marketing/he\" ErrorLog ${ APACHE_LOG_DIR } /error.log CustomLog ${ APACHE_LOG_DIR } /access.log combined </VirtualHost> <VirtualHost *:80 > ServerName admin.URL.CIM ServerAlias admin.URL.ALIAS.CIM ServerAdmin webmaster@localhost DocumentRoot /var/www/html/admin/public Alias \"/public\" \"/var/www/html/admin/public\" <Directory /> Options Indexes FollowSymLinks MultiViews AllowOverride All Order allow,deny allow from all Require all granted </Directory> ErrorLog ${ APACHE_LOG_DIR } /error.log CustomLog ${ APACHE_LOG_DIR } /access.log combined </VirtualHost>","title":"Status log apache2"},{"location":"scripts/apache2statuslog/#status-log-apache2","text":"Install links ahol majd futtatni akarod a scriptet. 1 2 apt update apt install links Create exampe /tmp/apache2statuslog.sh 1 docker exec $( docker ps | grep php | cut -d ' ' -f1 ) bash -c 'links -dump http://localhost:80/server-status > /tmp/`date +' %Y%m%d-%H%M%S '`-${HOSTNAME}.txt' Edit crontab 1 2 * * * * * root sleep 30 ; bash /tmp/apache2statuslog.sh * * * * * root bash /tmp/apache2statuslog.sh Apache config URL c\u00edmet cser\u00e9ld ki benne. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 <VirtualHost *:80 > ServerName 127.0.0.1 ServerAlias localhost DocumentRoot /var/www/ #figyelni kell a htaccess-re :smile: <Location \"/server-status\" > SetHandler server-status #Require host localhost #uncomment to only allow requests from localhost </Location> </VirtualHost> <VirtualHost _default_:80 > ServerName psik.io ServerAlias staging.psik.io ServerAdmin webmaster@localhost DocumentRoot /var/www/html/public Alias \"/public\" \"/var/www/html/public\" Alias \"/admin/public\" \"/var/www/html/admin/public\" <Directory /> Options Indexes FollowSymLinks MultiViews AllowOverride All Order allow,deny allow from all Require all granted </Directory> ProxyRequests Off SSLProxyEngine on ProxyPass /marketing/he https://URLCIM/ Redirect \"/marketing/en\" \"/marketing/he\" ErrorLog ${ APACHE_LOG_DIR } /error.log CustomLog ${ APACHE_LOG_DIR } /access.log combined </VirtualHost> <VirtualHost *:80 > ServerName admin.URL.CIM ServerAlias admin.URL.ALIAS.CIM ServerAdmin webmaster@localhost DocumentRoot /var/www/html/admin/public Alias \"/public\" \"/var/www/html/admin/public\" <Directory /> Options Indexes FollowSymLinks MultiViews AllowOverride All Order allow,deny allow from all Require all granted </Directory> ErrorLog ${ APACHE_LOG_DIR } /error.log CustomLog ${ APACHE_LOG_DIR } /access.log combined </VirtualHost>","title":"Status log apache2"},{"location":"scripts/apachebackup/","text":"apachebackup 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #!/bin/bash TIMESTAMP = $( date + \"%Y%m%d%H%M%S\" ) BACKUP_DIR = \"/home/ubuntu/backup/ $TIMESTAMP \" MYSQL_USER = \"root\" MYSQL = /usr/bin/mysql MYSQL_PASSWORD = \"titok123\" MYSQLDUMP = /usr/bin/mysqldump mkdir -p \" $BACKUP_DIR \" databases = ` $MYSQL --user = $MYSQL_USER -p $MYSQL_PASSWORD -e \"SHOW DATABASES;\" | grep -Ev \"(Database|information_schema|performance_schema)\" ` for db in $databases ; do $MYSQLDUMP --force --opt --user = $MYSQL_USER -p $MYSQL_PASSWORD --databases $db | gzip > \" $BACKUP_DIR /mysql/ $db .gz\" done","title":"apachebackup"},{"location":"scripts/apachebackup/#apachebackup","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #!/bin/bash TIMESTAMP = $( date + \"%Y%m%d%H%M%S\" ) BACKUP_DIR = \"/home/ubuntu/backup/ $TIMESTAMP \" MYSQL_USER = \"root\" MYSQL = /usr/bin/mysql MYSQL_PASSWORD = \"titok123\" MYSQLDUMP = /usr/bin/mysqldump mkdir -p \" $BACKUP_DIR \" databases = ` $MYSQL --user = $MYSQL_USER -p $MYSQL_PASSWORD -e \"SHOW DATABASES;\" | grep -Ev \"(Database|information_schema|performance_schema)\" ` for db in $databases ; do $MYSQLDUMP --force --opt --user = $MYSQL_USER -p $MYSQL_PASSWORD --databases $db | gzip > \" $BACKUP_DIR /mysql/ $db .gz\" done","title":"apachebackup"},{"location":"scripts/backupsimple/","text":"backup simple script 1 2 3 4 5 6 7 8 #!/bin/bash BACKUPTIME = ` date +%b-%d-%y ` # hova DESTINATION = /home/ubuntu/backup/- $BACKUPTIME .tar.gz # mit SOURCEFOLDER = /var/www/wordpress/ tar -cpzf $DESTINATION $SOURCEFOLDER","title":"backup simple script"},{"location":"scripts/backupsimple/#backup-simple-script","text":"1 2 3 4 5 6 7 8 #!/bin/bash BACKUPTIME = ` date +%b-%d-%y ` # hova DESTINATION = /home/ubuntu/backup/- $BACKUPTIME .tar.gz # mit SOURCEFOLDER = /var/www/wordpress/ tar -cpzf $DESTINATION $SOURCEFOLDER","title":"backup simple script"},{"location":"scripts/bashcommands/","text":"bash alapok ki\u00edrat\u00e1s 1 2 #!/bin/bash echo \"hello bash script\" futtat\u00e1si jog 1 chmod +x script.sh cat-tal sz\u00f6veget lehet bek\u00e9rni 1 cat > file.txt m\u00e9g hozz\u00e1 f\u00fczni sz\u00f6veget 1 cat >> file.txt ki\u00edrat\u00e1s 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 cat << kreativ sz\u00f6veg stb asd kreativ ## comment 1 line = # ; more line= :' word, lines until ' ## if if (( meghat\u00e1roz\u00e1s )) then valami elif (( k\u00f6vi ha els\u0151re nem igaz )) valami else valami fi ## while while [ meddig ] do valamit l\u00e9ptet\u00e9s done ## for for i { 0 ..20 } / (( i = 0 ; i< 5 ; i++ )) do ## lehet ifet be\u00e9p\u00edteni valami done car =( 'bmw' 'toyota' 'honda' ) echo \"{car[1]}\" { z\u00e1rt k\u00f6rnyezet \u00e9s az iteni v\u00e1ltoz\u00f3 k\u00fcl\u00f6n kezhelhet\u0151 } 1 2 3 4 5 6 7 8 9 10 11 function funCheck () { returningValue = \"i love linux\" } returningValue = \"I love Mac\" echo $returningValue\u00fa funCheck echo $returningValue","title":"bash alapok"},{"location":"scripts/bashcommands/#bash-alapok","text":"","title":"bash alapok"},{"location":"scripts/bashcommands/#kiiratas","text":"1 2 #!/bin/bash echo \"hello bash script\"","title":"ki\u00edrat\u00e1s"},{"location":"scripts/bashcommands/#futtatasi-jog","text":"1 chmod +x script.sh","title":"futtat\u00e1si jog"},{"location":"scripts/bashcommands/#cat-tal-szoveget-lehet-bekerni","text":"1 cat > file.txt","title":"cat-tal sz\u00f6veget lehet bek\u00e9rni"},{"location":"scripts/bashcommands/#meg-hozza-fuzni-szoveget","text":"1 cat >> file.txt","title":"m\u00e9g hozz\u00e1 f\u00fczni sz\u00f6veget"},{"location":"scripts/bashcommands/#kiiratas-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 cat << kreativ sz\u00f6veg stb asd kreativ ## comment 1 line = # ; more line= :' word, lines until ' ## if if (( meghat\u00e1roz\u00e1s )) then valami elif (( k\u00f6vi ha els\u0151re nem igaz )) valami else valami fi ## while while [ meddig ] do valamit l\u00e9ptet\u00e9s done ## for for i { 0 ..20 } / (( i = 0 ; i< 5 ; i++ )) do ## lehet ifet be\u00e9p\u00edteni valami done car =( 'bmw' 'toyota' 'honda' ) echo \"{car[1]}\"","title":"ki\u00edrat\u00e1s 2"},{"location":"scripts/bashcommands/#zart-kornyezet-es-az-iteni-valtozo-kulon-kezhelheto","text":"1 2 3 4 5 6 7 8 9 10 11 function funCheck () { returningValue = \"i love linux\" } returningValue = \"I love Mac\" echo $returningValue\u00fa funCheck echo $returningValue","title":"{ z\u00e1rt k\u00f6rnyezet \u00e9s az iteni v\u00e1ltoz\u00f3 k\u00fcl\u00f6n kezhelhet\u0151 }"},{"location":"scripts/docker/","text":"Docker install Docker & Docker-compose Download docker.sh on ubuntu: 1 2 wget https://wiki.irdmeg.hu/scripts/docker.sh bash docker.sh docker.sh: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #!/bin/bash apt-get update apt-get install -y \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg-agent \\ software-properties-common curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $( lsb_release -cs ) \\ stable\" apt-get install docker-ce -y curl -L \"https://github.com/docker/compose/releases/download/1.27.4/docker-compose- $( uname -s ) - $( uname -m ) \" -o /usr/local/bin/docker-compose chmod +x /usr/local/bin/docker-compose sudo usermod -aG docker $USER 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #!/bin/bash sudo apt-get update sudo apt-get install -y \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg-agent \\ software-properties-common sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - sudo add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $( lsb_release -cs ) \\ stable\" sudo apt-get install docker-ce -y sudo curl -L \"https://github.com/docker/compose/releases/download/1.27.4/docker-compose- $( uname -s ) - $( uname -m ) \" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose sudo usermod -aG docker $USER Docker with wordpress 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 #!/bin/bash #Wordpress apt-get update apt-get install -y \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg-agent \\ software-properties-common curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $( lsb_release -cs ) \\ stable\" apt-get install docker-ce -y curl -L \"https://github.com/docker/compose/releases/download/1.28.1/docker-compose- $( uname -s ) - $( uname -m ) \" -o /usr/local/bin/docker-compose chmod +x /usr/local/bin/docker-compose mkdir Wordpress cd Wordpress touch docker-compose.yml echo \"version: '3' services: wordpress: image: wordpress:latest depends_on: - db restart: always volumes: - ./wp_data:/var/www/html links: - \\\"db:db\\\" environment: WORDPRESS_DB_USER: wp_user WORDPRESS_DB_PASSWORD: 7rHBE1QJAtUWeGW3LjNhhWDkgaLDcaAm WORDPRESS_DB_HOST: db:3306 db: image: mysql:5.7 command: --default-authentication-plugin=mysql_native_password --innodb-use-native-aio=0 restart: always environment: MYSQL_ROOT_PASSWORD: NZe9ZmZpv00LDYZoRWCNcC4KvaIJKGFM MYSQL_DATABASE: wordpress MYSQL_USER: wp_user MYSQL_PASSWORD: 7rHBE1QJAtUWeGW3LjNhhWDkgaLDcaAm volumes: - ./data:/var/lib/mysql web: build: . volumes: - ./default.conf:/etc/nginx/conf.d/default.conf ports: - \\\"80:80\\\" - \\\"443:443\\\" links: - \\\"wordpress:wordpress\\\" depends_on: - wordpress - db \" > docker-compose.yml touch Dockerfile echo \"FROM nginx WORKDIR /usr/share/nginx/html/ COPY default.conf /etc/nginx/conf.d/ # ADD ssl /etc/nginx/ssl/ EXPOSE 443 EXPOSE 80\" > Dockerfile touch default.conf echo \"server { listen 80; listen [::]:80; server_name localhost; #location / { #root /usr/share/nginx/html; #index index.html index.htm; #} error_page 500 502 503 504 /50x.html; location = /50x.html { root /usr/share/nginx/html; } # proxy the PHP scripts to Apache listening on 127.0.0.1:80 location / { proxy_set_header Host \\$host; proxy_pass http://wordpress; } # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 # #location ~ \\.php $ { # root html; # fastcgi_pass 127.0.0.1:9000; # fastcgi_index index.php; # fastcgi_param SCRIPT_FILENAME /scripts\\$fastcgi_script_name; # include fastcgi_params; #} # deny access to .htaccess files, if Apache's document root # concurs with nginx's one # #location ~ /\\.ht { # deny all; #} } #server { # listen 443 ssl; # server_name _; # #ssl_certificate /etc/nginx/ssl/server.crt; # #ssl_certificate_key /etc/nginx/ssl/server-rsa.key; # ssl_certificate /etc/nginx/ssl/certificate.crt; # ssl_certificate_key /etc/nginx/ssl/private.key; # ssl_trusted_certificate /etc/nginx/ssl/ca_bundle.crt; # # ssl_protocols TLSv1.3 TLSv1.2 TLSv1.1 TLSv1; # # access_log /var/log/nginx/access.log main; # error_log /var/log/nginx/error.log info; # # location / { # #proxy_http_version 1.1; # #proxy_set_header Upgrade \\$http_upgrade; # #proxy_set_header Connection 'upgrade'; # proxy_set_header Host \\$host; # #proxy_set_header X-Forwarded-For \\$remote_addr; # proxy_set_header X-Forwarded-Proto \\$scheme; # #proxy_cache_bypass \\$http_upgrade; # #proxy_set_header X-Real-IP \\$remote_addr; # #proxy_read_timeout 300; # #proxy_connect_timeout 300; # #proxy_set_header Host \\$host; # proxy_pass http://wordpress; # } #}\" > default.conf docker-compose up -d","title":"Docker install"},{"location":"scripts/docker/#docker-install","text":"","title":"Docker install"},{"location":"scripts/docker/#docker-docker-compose","text":"Download docker.sh on ubuntu: 1 2 wget https://wiki.irdmeg.hu/scripts/docker.sh bash docker.sh docker.sh: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #!/bin/bash apt-get update apt-get install -y \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg-agent \\ software-properties-common curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $( lsb_release -cs ) \\ stable\" apt-get install docker-ce -y curl -L \"https://github.com/docker/compose/releases/download/1.27.4/docker-compose- $( uname -s ) - $( uname -m ) \" -o /usr/local/bin/docker-compose chmod +x /usr/local/bin/docker-compose sudo usermod -aG docker $USER 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #!/bin/bash sudo apt-get update sudo apt-get install -y \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg-agent \\ software-properties-common sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - sudo add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $( lsb_release -cs ) \\ stable\" sudo apt-get install docker-ce -y sudo curl -L \"https://github.com/docker/compose/releases/download/1.27.4/docker-compose- $( uname -s ) - $( uname -m ) \" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose sudo usermod -aG docker $USER","title":"Docker &amp; Docker-compose"},{"location":"scripts/docker/#docker-with-wordpress","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 #!/bin/bash #Wordpress apt-get update apt-get install -y \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg-agent \\ software-properties-common curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $( lsb_release -cs ) \\ stable\" apt-get install docker-ce -y curl -L \"https://github.com/docker/compose/releases/download/1.28.1/docker-compose- $( uname -s ) - $( uname -m ) \" -o /usr/local/bin/docker-compose chmod +x /usr/local/bin/docker-compose mkdir Wordpress cd Wordpress touch docker-compose.yml echo \"version: '3' services: wordpress: image: wordpress:latest depends_on: - db restart: always volumes: - ./wp_data:/var/www/html links: - \\\"db:db\\\" environment: WORDPRESS_DB_USER: wp_user WORDPRESS_DB_PASSWORD: 7rHBE1QJAtUWeGW3LjNhhWDkgaLDcaAm WORDPRESS_DB_HOST: db:3306 db: image: mysql:5.7 command: --default-authentication-plugin=mysql_native_password --innodb-use-native-aio=0 restart: always environment: MYSQL_ROOT_PASSWORD: NZe9ZmZpv00LDYZoRWCNcC4KvaIJKGFM MYSQL_DATABASE: wordpress MYSQL_USER: wp_user MYSQL_PASSWORD: 7rHBE1QJAtUWeGW3LjNhhWDkgaLDcaAm volumes: - ./data:/var/lib/mysql web: build: . volumes: - ./default.conf:/etc/nginx/conf.d/default.conf ports: - \\\"80:80\\\" - \\\"443:443\\\" links: - \\\"wordpress:wordpress\\\" depends_on: - wordpress - db \" > docker-compose.yml touch Dockerfile echo \"FROM nginx WORKDIR /usr/share/nginx/html/ COPY default.conf /etc/nginx/conf.d/ # ADD ssl /etc/nginx/ssl/ EXPOSE 443 EXPOSE 80\" > Dockerfile touch default.conf echo \"server { listen 80; listen [::]:80; server_name localhost; #location / { #root /usr/share/nginx/html; #index index.html index.htm; #} error_page 500 502 503 504 /50x.html; location = /50x.html { root /usr/share/nginx/html; } # proxy the PHP scripts to Apache listening on 127.0.0.1:80 location / { proxy_set_header Host \\$host; proxy_pass http://wordpress; } # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 # #location ~ \\.php $ { # root html; # fastcgi_pass 127.0.0.1:9000; # fastcgi_index index.php; # fastcgi_param SCRIPT_FILENAME /scripts\\$fastcgi_script_name; # include fastcgi_params; #} # deny access to .htaccess files, if Apache's document root # concurs with nginx's one # #location ~ /\\.ht { # deny all; #} } #server { # listen 443 ssl; # server_name _; # #ssl_certificate /etc/nginx/ssl/server.crt; # #ssl_certificate_key /etc/nginx/ssl/server-rsa.key; # ssl_certificate /etc/nginx/ssl/certificate.crt; # ssl_certificate_key /etc/nginx/ssl/private.key; # ssl_trusted_certificate /etc/nginx/ssl/ca_bundle.crt; # # ssl_protocols TLSv1.3 TLSv1.2 TLSv1.1 TLSv1; # # access_log /var/log/nginx/access.log main; # error_log /var/log/nginx/error.log info; # # location / { # #proxy_http_version 1.1; # #proxy_set_header Upgrade \\$http_upgrade; # #proxy_set_header Connection 'upgrade'; # proxy_set_header Host \\$host; # #proxy_set_header X-Forwarded-For \\$remote_addr; # proxy_set_header X-Forwarded-Proto \\$scheme; # #proxy_cache_bypass \\$http_upgrade; # #proxy_set_header X-Real-IP \\$remote_addr; # #proxy_read_timeout 300; # #proxy_connect_timeout 300; # #proxy_set_header Host \\$host; # proxy_pass http://wordpress; # } #}\" > default.conf docker-compose up -d","title":"Docker with wordpress"},{"location":"scripts/emailpy/","text":"emailt k\u00fcld\u0151 script run command 1 python3 test.py test.py tartalma 1 2 3 4 5 6 7 8 9 import smtplib server = smtplib.SMTP ( '127.0.0.1' , 2525 ) #Next, log in to the server server.login ( \"info@doamin.hu\" , \"PASSWORD\" ) #Send the mail msg = \"Hello DOMAIN!\" # The /n separates the message from the headers server.sendmail ( \"info@doamin.hu\" , \"XY@domain.com\" , msg )","title":"emailt k\u00fcld\u0151 script"},{"location":"scripts/emailpy/#emailt-kuldo-script","text":"","title":"emailt k\u00fcld\u0151 script"},{"location":"scripts/emailpy/#run-command","text":"1 python3 test.py","title":"run command"},{"location":"scripts/emailpy/#testpy-tartalma","text":"1 2 3 4 5 6 7 8 9 import smtplib server = smtplib.SMTP ( '127.0.0.1' , 2525 ) #Next, log in to the server server.login ( \"info@doamin.hu\" , \"PASSWORD\" ) #Send the mail msg = \"Hello DOMAIN!\" # The /n separates the message from the headers server.sendmail ( \"info@doamin.hu\" , \"XY@domain.com\" , msg )","title":"test.py tartalma"},{"location":"scripts/emailsenderphp/","text":"Email sender php 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <?php header ( 'Content-Type: text/html; charset=utf-8' ); ini_set ( 'default_charset' , 'utf-8' ); if ( $_SERVER [ 'REQUEST_METHOD' ] === 'POST' ) { mail ( \"c\u00e9lemail@vmi.hu\" , mb_encode_mimeheader ( htmlspecialchars ( $_POST [ \"szolgaltatas\" ]), \"UTF-8\" ), \"Vezet\u00e9kn\u00e9v: \" . htmlspecialchars ( $_POST [ \"vezeteknev\" ]) . \" \\n Keresztn\u00e9v: \" . htmlspecialchars ( $_POST [ \"kernev\" ]) . \" \\n Telefonsz\u00e1m: \" . htmlspecialchars ( $_POST [ \"telszam\" ]) . \" \\n Szolgaltat\u00e1s: \" . htmlspecialchars ( $_POST [ \"szolgaltatas\" ]) . \" \\n Telefonsz\u00e1m: \" . htmlspecialchars ( $_POST [ \"telszam\" ]) . \" \\n \u00dczenet: \" . htmlspecialchars ( $_POST [ \"uzenet\" ]), \"Content-Type: text/plain;charset=utf-8 \\r\\n \" . \"From: no-reply@WEBOLDALURL \\r\\n \" . \"Reply-to: no-reply@WEBOLDALURL\" ); header ( \"Location: http://REDIRECTURLKOSZON\u0150.html\" ); } header ( \"Location: WEBURL); ?> HTMLbe a v\u00e1ltozok 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 < div class = \"modal-body p-4 p-md-5\" > < form action = \"ajanlat.php\" method = \"post\" class = \"appointment-form ftco-animate\" > < h3 > Aj\u00e1nlatk\u00e9r\u00e9s </ h3 > < div class = \"\" > < div class = \"form-group\" > < input name = \"vezeteknev\" type = \"text\" class = \"form-control\" placeholder = \"Vezet\u00e9kn\u00e9v\" > </ div > < div class = \"form-group\" > < input name = \"kernev\" type = \"text\" class = \"form-control\" placeholder = \"Keresztn\u00e9v\" > </ div > < div class = \"form-group\" > < input name = \"telszam\" type = \"text\" class = \"form-control\" placeholder = \"Telefonsz\u00e1m\" > </ div > </ div > < div class = \"\" > < div class = \"form-group\" > < div class = \"form-field\" > < div class = \"select-wrap\" > < div class = \"icon\" >< span class = \"fa fa-chevron-down\" ></ span ></ div > < select name = \"szolgaltatas\" id = \"\" class = \"form-control\" > < option value = \"Nincs kiv\u00e1lasztva\" > V\u00e1lasszon szolg\u00e1ltat\u00e1st </ option > < option value = \"Ingatlan\u00fczemeltet\u00e9s\" > Ingatlan\u00fczemeltet\u00e9s </ option > < option value = \"V\u00edz- G\u00e1z- F\u0171t\u00e9s szerel\u00e9s\" > V\u00edz- G\u00e1z- F\u0171t\u00e9s szerel\u00e9s </ option > < option value = \"Fest\u00e9s\" > Fest\u00e9s </ option > < option value = \"Burkol\u00e1s\" > Burkol\u00e1s </ option > < option value = \"Homlokzati szigetel\u00e9s, fel\u00faj\u00edt\u00e1s\" > Homlokzati szigetel\u00e9s, fel\u00faj\u00edt\u00e1s </ option > < option value = \"Tet\u0151fel\u00faj\u00edt\u00e1s\" > Tet\u0151fel\u00faj\u00edt\u00e1s </ option > < option value = \"Villanyszerel\u00e9s\" > Villanyszerel\u00e9s </ option > < option value = \"\u00c1cs-\u00e1llv\u00e1nyoz\u00e1s\" > \u00c1cs-\u00e1llv\u00e1nyoz\u00e1s </ option > < option value = \"Takar\u00edt\u00e1s\" > Takar\u00edt\u00e1s </ option > < option value = \"Egy\u00e9b\" > Egy\u00e9b </ option > </ select > </ div > </ div > </ div > </ div > < div class = \"\" > < div class = \"form-group\" > < textarea name = \"uzenet\" id = \"\" cols = \"30\" rows = \"4\" class = \"form-control\" placeholder = \"\u00dczenet\" ></ textarea > </ div > < div class = \"form-group\" > < input type = \"submit\" value = \"Elk\u00fcld\u00e9s\" class = \"btn btn-primary py-3 px-4\" > </ div > </ div > </ form > </ div >","title":"Email sender php"},{"location":"scripts/emailsenderphp/#email-sender-php","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <?php header ( 'Content-Type: text/html; charset=utf-8' ); ini_set ( 'default_charset' , 'utf-8' ); if ( $_SERVER [ 'REQUEST_METHOD' ] === 'POST' ) { mail ( \"c\u00e9lemail@vmi.hu\" , mb_encode_mimeheader ( htmlspecialchars ( $_POST [ \"szolgaltatas\" ]), \"UTF-8\" ), \"Vezet\u00e9kn\u00e9v: \" . htmlspecialchars ( $_POST [ \"vezeteknev\" ]) . \" \\n Keresztn\u00e9v: \" . htmlspecialchars ( $_POST [ \"kernev\" ]) . \" \\n Telefonsz\u00e1m: \" . htmlspecialchars ( $_POST [ \"telszam\" ]) . \" \\n Szolgaltat\u00e1s: \" . htmlspecialchars ( $_POST [ \"szolgaltatas\" ]) . \" \\n Telefonsz\u00e1m: \" . htmlspecialchars ( $_POST [ \"telszam\" ]) . \" \\n \u00dczenet: \" . htmlspecialchars ( $_POST [ \"uzenet\" ]), \"Content-Type: text/plain;charset=utf-8 \\r\\n \" . \"From: no-reply@WEBOLDALURL \\r\\n \" . \"Reply-to: no-reply@WEBOLDALURL\" ); header ( \"Location: http://REDIRECTURLKOSZON\u0150.html\" ); } header ( \"Location: WEBURL); ?> HTMLbe a v\u00e1ltozok 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 < div class = \"modal-body p-4 p-md-5\" > < form action = \"ajanlat.php\" method = \"post\" class = \"appointment-form ftco-animate\" > < h3 > Aj\u00e1nlatk\u00e9r\u00e9s </ h3 > < div class = \"\" > < div class = \"form-group\" > < input name = \"vezeteknev\" type = \"text\" class = \"form-control\" placeholder = \"Vezet\u00e9kn\u00e9v\" > </ div > < div class = \"form-group\" > < input name = \"kernev\" type = \"text\" class = \"form-control\" placeholder = \"Keresztn\u00e9v\" > </ div > < div class = \"form-group\" > < input name = \"telszam\" type = \"text\" class = \"form-control\" placeholder = \"Telefonsz\u00e1m\" > </ div > </ div > < div class = \"\" > < div class = \"form-group\" > < div class = \"form-field\" > < div class = \"select-wrap\" > < div class = \"icon\" >< span class = \"fa fa-chevron-down\" ></ span ></ div > < select name = \"szolgaltatas\" id = \"\" class = \"form-control\" > < option value = \"Nincs kiv\u00e1lasztva\" > V\u00e1lasszon szolg\u00e1ltat\u00e1st </ option > < option value = \"Ingatlan\u00fczemeltet\u00e9s\" > Ingatlan\u00fczemeltet\u00e9s </ option > < option value = \"V\u00edz- G\u00e1z- F\u0171t\u00e9s szerel\u00e9s\" > V\u00edz- G\u00e1z- F\u0171t\u00e9s szerel\u00e9s </ option > < option value = \"Fest\u00e9s\" > Fest\u00e9s </ option > < option value = \"Burkol\u00e1s\" > Burkol\u00e1s </ option > < option value = \"Homlokzati szigetel\u00e9s, fel\u00faj\u00edt\u00e1s\" > Homlokzati szigetel\u00e9s, fel\u00faj\u00edt\u00e1s </ option > < option value = \"Tet\u0151fel\u00faj\u00edt\u00e1s\" > Tet\u0151fel\u00faj\u00edt\u00e1s </ option > < option value = \"Villanyszerel\u00e9s\" > Villanyszerel\u00e9s </ option > < option value = \"\u00c1cs-\u00e1llv\u00e1nyoz\u00e1s\" > \u00c1cs-\u00e1llv\u00e1nyoz\u00e1s </ option > < option value = \"Takar\u00edt\u00e1s\" > Takar\u00edt\u00e1s </ option > < option value = \"Egy\u00e9b\" > Egy\u00e9b </ option > </ select > </ div > </ div > </ div > </ div > < div class = \"\" > < div class = \"form-group\" > < textarea name = \"uzenet\" id = \"\" cols = \"30\" rows = \"4\" class = \"form-control\" placeholder = \"\u00dczenet\" ></ textarea > </ div > < div class = \"form-group\" > < input type = \"submit\" value = \"Elk\u00fcld\u00e9s\" class = \"btn btn-primary py-3 px-4\" > </ div > </ div > </ form > </ div >","title":"Email sender php"},{"location":"scripts/pre-commit/","text":"Setup Git Hooks It's need to every commit run the lint and test. 1 git config --local core.hooksPath .githooks/ Pre-commit file, futtat\u00e1si jogot kell r\u00e1 adni. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 #!/bin/bash docker ps | grep container-name >/dev/null 2 > & 1 \u200b if [ \" $? \" -eq \"0\" ] ; then echo \"Lint start `date`\" docker exec container-name npm run lint 2 >error-lint.txt 1 >/dev/null if [ \" $? \" -eq \"0\" ] ; then echo \"Lint ok `date`\" else echo \"Lint error `date`\" exit 1 fi \u200b echo \"Test start `date`\" docker exec container-name npm run test 2 >error-test.txt 1 >/dev/null if [ \" $? \" -eq \"0\" ] ; then echo \"Test ok `date`\" else echo \"Test error `date`\" exit 1 fi else echo \"Docker container not running...\" echo \"Try run node and npm\" \u200b node -v 2 >/dev/null if [ \" $? \" -ne \"0\" ] ; then echo \"node not found\" exit 1 fi \u200b npm -v 2 >/dev/null if [ \" $? \" -ne \"0\" ] ; then echo \"npm not found\" exit 1 fi \u200b echo \"Lint start `date`\" npm run lint 2 >error-lint.txt 1 >/dev/null if [ \" $? \" -eq \"0\" ] ; then echo \"Lint ok `date`\" else echo \"Lint error `date`\" exit 1 fi \u200b echo \"Test start `date`\" npm run test 2 >error-test.txt 1 >/dev/null if [ \" $? \" -eq \"0\" ] ; then echo \"Test ok `date`\" else echo \"Test error `date`\" exit 1 fi \u200b fi","title":"Setup Git Hooks"},{"location":"scripts/pre-commit/#setup-git-hooks","text":"It's need to every commit run the lint and test. 1 git config --local core.hooksPath .githooks/ Pre-commit file, futtat\u00e1si jogot kell r\u00e1 adni. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 #!/bin/bash docker ps | grep container-name >/dev/null 2 > & 1 \u200b if [ \" $? \" -eq \"0\" ] ; then echo \"Lint start `date`\" docker exec container-name npm run lint 2 >error-lint.txt 1 >/dev/null if [ \" $? \" -eq \"0\" ] ; then echo \"Lint ok `date`\" else echo \"Lint error `date`\" exit 1 fi \u200b echo \"Test start `date`\" docker exec container-name npm run test 2 >error-test.txt 1 >/dev/null if [ \" $? \" -eq \"0\" ] ; then echo \"Test ok `date`\" else echo \"Test error `date`\" exit 1 fi else echo \"Docker container not running...\" echo \"Try run node and npm\" \u200b node -v 2 >/dev/null if [ \" $? \" -ne \"0\" ] ; then echo \"node not found\" exit 1 fi \u200b npm -v 2 >/dev/null if [ \" $? \" -ne \"0\" ] ; then echo \"npm not found\" exit 1 fi \u200b echo \"Lint start `date`\" npm run lint 2 >error-lint.txt 1 >/dev/null if [ \" $? \" -eq \"0\" ] ; then echo \"Lint ok `date`\" else echo \"Lint error `date`\" exit 1 fi \u200b echo \"Test start `date`\" npm run test 2 >error-test.txt 1 >/dev/null if [ \" $? \" -eq \"0\" ] ; then echo \"Test ok `date`\" else echo \"Test error `date`\" exit 1 fi \u200b fi","title":"Setup Git Hooks"},{"location":"scripts/sorszam/","text":"sorszam 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 at /usr/local/bin/test.sh #!/bin/bash function hello (){ echo \"Create a new project: $1 \" } hello $1 echo -e \"\\nIFS megv\u00e1ltoztatva\" sorszam = 1 IFS_old = \" $IFS \" IFS = $'\\n' for i in ` ls / ` ; do echo \" ${ sorszam } . ${ i } \" let \"sorszam+=1\" done echo -e \"\\nRossz for\" sorszam = 1 IFS = \" $IFS_old \" for i in ` ls / ` ; do echo \" ${ sorszam } . ${ i } \" let \"sorszam+=1\" done echo -e \"\\nWhile\" sorszam = 1 while IFS = $'\\n' read -r i ; do echo \" ${ sorszam } . ${ i } \" let \"sorszam+=1\" done < < ( ls / ) echo -e \"\\nEgy sorban a parancs\" sorszam = 1 while read i ; do echo \" $sorszam . ${ i } \" ; let \"sorszam+=1\" ; done < < ( ls / )","title":"sorszam"},{"location":"scripts/sorszam/#sorszam","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 at /usr/local/bin/test.sh #!/bin/bash function hello (){ echo \"Create a new project: $1 \" } hello $1 echo -e \"\\nIFS megv\u00e1ltoztatva\" sorszam = 1 IFS_old = \" $IFS \" IFS = $'\\n' for i in ` ls / ` ; do echo \" ${ sorszam } . ${ i } \" let \"sorszam+=1\" done echo -e \"\\nRossz for\" sorszam = 1 IFS = \" $IFS_old \" for i in ` ls / ` ; do echo \" ${ sorszam } . ${ i } \" let \"sorszam+=1\" done echo -e \"\\nWhile\" sorszam = 1 while IFS = $'\\n' read -r i ; do echo \" ${ sorszam } . ${ i } \" let \"sorszam+=1\" done < < ( ls / ) echo -e \"\\nEgy sorban a parancs\" sorszam = 1 while read i ; do echo \" $sorszam . ${ i } \" ; let \"sorszam+=1\" ; done < < ( ls / )","title":"sorszam"},{"location":"scripts/while/","text":"While 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #!/bin/bash echo $# exit 12 i = 1 while [ $i -lt 10 ] do echo $i i = $(( i + 1 )) done i = 1 until [ $i -gt 10 ] do echo $i i = $(( i + 1 )) done","title":"While"},{"location":"scripts/while/#while","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #!/bin/bash echo $# exit 12 i = 1 while [ $i -lt 10 ] do echo $i i = $(( i + 1 )) done i = 1 until [ $i -gt 10 ] do echo $i i = $(( i + 1 )) done","title":"While"},{"location":"swarm/Teleport/","text":"Teleport Coudban \u00faj g\u00e9pet ind\u00edtunk a swarmon k\u00edv\u00fcl Teleport telep\u00edt\u0151 file Telep\u00edt\u00f3 docs Let\u00f6ltj\u00fck a megfelel\u0151t, jelen esetben a 64-es debi\u00e1nt 1 curl -O https://get.gravitational.com/teleport_4.3.2_amd64.deb kibont\u00e1s 1 tar -xvf file neve 1 cd teleport futtat\u00e1s 1 ./install Elind\u00edtjuk 1 teleport start User l\u00e9trehoz\u00e1sa rootk\u00e9nt 1 tctl users add keikami root Futtatjuk 1 dpkg teleport_4.3.2_amd64.deb Elind\u00edtjuk 1 teleport start User l\u00e9trehoz\u00e1sa rootk\u00e9nt 1 tctl users add keikami root L\u00e9trehoz egy regisztr\u00e1ci\u00f3s url-t, abban a bels\u0151 ip-t cser\u00e9lj\u00fck k\u00fcls\u0151re \u00e9s regisztr\u00e1ljunk. Sz\u00fcks\u00e9g lesz m\u00e9g egy telefonos appra: Google hiteles\u00edt\u0151-re QR-k\u00f3dot beolvassuk, weben megadjuk a kapott 6 tag\u00fa k\u00f3dott Kliens hozz\u00e1ad\u00e1si url cre\u00e1l\u00e1sa 1 tctl nodes add --ttl = 5m --roles = node,proxy --token = secret-value","title":"Teleport"},{"location":"swarm/Teleport/#teleport","text":"Coudban \u00faj g\u00e9pet ind\u00edtunk a swarmon k\u00edv\u00fcl Teleport telep\u00edt\u0151 file Telep\u00edt\u00f3 docs Let\u00f6ltj\u00fck a megfelel\u0151t, jelen esetben a 64-es debi\u00e1nt 1 curl -O https://get.gravitational.com/teleport_4.3.2_amd64.deb kibont\u00e1s 1 tar -xvf file neve 1 cd teleport futtat\u00e1s 1 ./install Elind\u00edtjuk 1 teleport start User l\u00e9trehoz\u00e1sa rootk\u00e9nt 1 tctl users add keikami root Futtatjuk 1 dpkg teleport_4.3.2_amd64.deb Elind\u00edtjuk 1 teleport start User l\u00e9trehoz\u00e1sa rootk\u00e9nt 1 tctl users add keikami root L\u00e9trehoz egy regisztr\u00e1ci\u00f3s url-t, abban a bels\u0151 ip-t cser\u00e9lj\u00fck k\u00fcls\u0151re \u00e9s regisztr\u00e1ljunk. Sz\u00fcks\u00e9g lesz m\u00e9g egy telefonos appra: Google hiteles\u00edt\u0151-re QR-k\u00f3dot beolvassuk, weben megadjuk a kapott 6 tag\u00fa k\u00f3dott Kliens hozz\u00e1ad\u00e1si url cre\u00e1l\u00e1sa 1 tctl nodes add --ttl = 5m --roles = node,proxy --token = secret-value","title":"Teleport"},{"location":"swarm/swarm/","text":"swarm Swarm start Cloudban l\u00e9trehozzuk a g\u00e9peket L\u00e9tre hozzuk a swarmot az egyik g\u00e9pen 1 docker swarm init --advertise-addr 'bels\u0151 ip c\u00edm' K\u00e9r\u00fcnk manager tokent, mert alapb\u00f3l workert add 1 docker swarm join-token manager Ezt a tokent haszn\u00e1ljuk a t\u00f6bbi g\u00e9pen m\u00edg minimum 3 manager nincs, t\u00f6bbi lehet sim\u00e1n worker Ellen\u0151rizhetj\u00fck a swarban l\u00e9v\u0151 tagokat 1 docker node ls visualizer Run in swarm. 1 2 3 4 5 6 docker service create \\ --name = viz \\ --publish = 8080 :8080/tcp \\ --constraint = node.role == manager \\ --mount = type = bind,src = /var/run/docker.sock,dst = /var/run/docker.sock \\ dockersamples/visualizer Atseashop Github repo. 1 git clone https://github.com/dockersamples/atsea-sample-shop-app.git Deploy command. 1 docker stack deploy -c docker-stack.yml atsea Ha sz\u00fcks\u00e9ges akkor nano nginx.conf 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 user nginx ; worker_processes 1 ; error_log /var/log/nginx/error.log warn ; pid /var/run/nginx.pid ; events { worker_connections 1024 ; } http { include /etc/nginx/mime.types ; default_type application/octet-stream ; log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"' ; access_log /var/log/nginx/access.log main ; sendfile on ; #tcp_nopush on; keepalive_timeout 65 ; gzip on ; include /etc/nginx/conf.d/*.conf ; server { listen 80 ; server_name atseashop.com ; return 301 https:// $host$request_uri ; } server { listen 443 ssl ; ssl_certificate /run/secrets/revprox_cert ; ssl_certificate_key /run/secrets/revprox_key ; server_name atseashop.com ; access_log /dev/stdout ; error_log /dev/stderr ; location / { proxy_pass http://appserver:8080 ; } } } nano Dockerfile 1 2 FROM dockersamples/atseasampleshopapp_reverse_proxy ADD nginx.conf /etc/nginx/nginx.conf buildelj\u00fck, push, login kell 1 docker build -t keikami/demo:atsea . 1 docker push keikami/demo:atsea 1 docker login keikami nano docker-stack.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 version: \"3.2\" services: reverse_proxy: image: keikami/demo:atsea ports: - \"80:80\" - \"443:443\" secrets: - source: revprox_cert target: revprox_cert - source: revprox_key target: revprox_key networks: - front-tier database: image: dockersamples/atsea_db environment: POSTGRES_USER: gordonuser POSTGRES_DB_PASSWORD_FILE: /run/secrets/postgres_password POSTGRES_DB: atsea networks: - back-tier secrets: - postgres_password deploy: placement: constraints: - 'node.role == manager' appserver: image: dockersamples/atsea_app networks: - front-tier - back-tier - payment deploy: replicas: 2 update_config: parallelism: 2 failure_action: rollback placement: constraints: - 'node.role == manager' restart_policy: condition: on-failure delay: 5s max_attempts: 3 window: 120s secrets: - postgres_password visualizer: image: dockersamples/visualizer:stable ports: - \"8001:8080\" stop_grace_period: 1m30s volumes: - \"/var/run/docker.sock:/var/run/docker.sock\" deploy: update_config: failure_action: rollback placement: constraints: - 'node.role == manager' payment_gateway: image: dockersamples/atseasampleshopapp_payment_gateway secrets: - source: staging_token target: payment_token networks: - payment deploy: update_config: failure_action: rollback placement: constraints: - 'node.role == manager' - 'node.labels.pcidss == yes' networks: front-tier: back-tier: payment: driver: overlay driver_opts: encrypted: 'yes' secrets: postgres_password: external: true staging_token: external: true revprox_key: external: true revprox_cert: external: true V\u00e9g\u00fcl ism\u00e9t deploy. MySQL Create, egy webes kezel\u0151 fel\u00fcletett is tartalmaz. nano stack.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 version: '3.1' services: db: image: mysql command: --default-authentication-plugin = mysql_native_password restart: always environment: MYSQL_ROOT_PASSWORD: titok123 adminer: image: adminer restart: always ports: - 8080 :8080 Depololtatjuk: 1 docker stack deploy -c stack.yml mysql User \u00e9s jelsz\u00f3, example: titok123 1 mysql -u root -p MySQL-ben adatb\u00e1zis, t\u00e1bla, oszlopok \u00e9s tartalom hozz\u00e1 ad\u00e1sa. Adminerben t\u00f6k\u00e9ltes, vagy add ki a mysql kont\u00e9ner\u00e9n bel\u00fcl. 1 2 3 4 create database irdmeg ; use irdmeg ; create table data ( id INT ( 6 ) NOT NULL auto_increment, nev VARCHAR ( 20 ) , PRIMARY KEY ( id )) ; insert into irdmeg.data ( nev ) values ( 'Hello irdmeg' ) ; PHP script \u00edrja ki: host nev\u00e9t server ip c\u00edm\u00e9t cliens ip c\u00edm\u00e9t nano index.php 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 <?php echo gethostname () ; echo $_SERVER [ 'SERVER_ADDR' ] ; if ( !empty ( $_SERVER [ 'HTTP_CLIENT_IP' ])) { $ip_address = $_SERVER [ 'HTTP_CLIENT_IP' ] ; } //whether ip is from proxy elseif ( !empty ( $_SERVER [ 'HTTP_X_FORWARDED_FOR' ])) { $ip_address = $_SERVER [ 'HTTP_X_FORWARDED_FOR' ] ; } //whether ip is from remote address else { $ip_address = $_SERVER [ 'REMOTE_ADDR' ] ; } echo $ip_address ; $servername = \"db\" ; $username = \"root\" ; $password = \"titok123\" ; $dbname = \"irdmeg\" ; // Create connection $conn = new mysqli ( $servername , $username , $password , $dbname ) ; // Check connection if ( $conn ->connect_error ) { die ( \"Connection failed: \" . $conn ->connect_error ) ; } $sql = \"SELECT id, nev FROM data\" ; $result = $conn ->query ( $sql ) ; if ( $result ->num_rows > 0 ) { // output data of each row while ( $row = $result ->fetch_assoc ()) { echo \"id: \" . $row [ \"id\" ] . \" - Name: \" . $row [ \"nev\" ] . \"<br>\" ; } } else { echo \"0 results\" ; } $conn ->close () ; ?> Ez elhelyezi az index. php-t a '/var/www/html/' mapp\u00e1ba. Telep\u00edti majd enged\u00e9lyezi a mysqli-t. nano Dockerfile 1 2 3 4 5 FROM php:7.4-apache ADD index.php /var/www/html/index.php RUN docker-php-ext-install mysqli RUN docker-php-ext-enable mysqli #RUN rm /var/www/html/index.html Buildelj\u00fck, pusholjuk. 1 docker build -t keikami/demo:php . 1 docker push keikami/demo:php Ha sz\u00fcks\u00e9ges akkor loginoljunk be ex: 1 docker login keikami Glob\u00e1lban fusson a swarm minden tagj\u00e1ban. stack.yml-t kieg\u00e9sz\u00edtj\u00fck. 1 2 3 4 5 6 7 8 app: image: keikami/demo:php restart: always deploy: mode: global ports: - 80 :80 Futtatjuk a deploy parancsot: 1 docker stack deploy -c stack.yml mysql Portainer Ind\u00edt\u00e1sa swarmon bel\u00fcl: 1 curl -L https://downloads.portainer.io/portainer-agent-stack.yml -o portainer-agent-stack.yml 1 docker stack deploy --compose-file = portainer-agent-stack.yml portainer Egy\u00e9bb telep\u00edt\u00e9si lehet\u0151s\u00e9gek","title":"swarm"},{"location":"swarm/swarm/#swarm","text":"","title":"swarm"},{"location":"swarm/swarm/#swarm-start","text":"Cloudban l\u00e9trehozzuk a g\u00e9peket L\u00e9tre hozzuk a swarmot az egyik g\u00e9pen 1 docker swarm init --advertise-addr 'bels\u0151 ip c\u00edm' K\u00e9r\u00fcnk manager tokent, mert alapb\u00f3l workert add 1 docker swarm join-token manager Ezt a tokent haszn\u00e1ljuk a t\u00f6bbi g\u00e9pen m\u00edg minimum 3 manager nincs, t\u00f6bbi lehet sim\u00e1n worker Ellen\u0151rizhetj\u00fck a swarban l\u00e9v\u0151 tagokat 1 docker node ls","title":"Swarm start"},{"location":"swarm/swarm/#visualizer","text":"Run in swarm. 1 2 3 4 5 6 docker service create \\ --name = viz \\ --publish = 8080 :8080/tcp \\ --constraint = node.role == manager \\ --mount = type = bind,src = /var/run/docker.sock,dst = /var/run/docker.sock \\ dockersamples/visualizer","title":"visualizer"},{"location":"swarm/swarm/#atseashop","text":"Github repo. 1 git clone https://github.com/dockersamples/atsea-sample-shop-app.git Deploy command. 1 docker stack deploy -c docker-stack.yml atsea Ha sz\u00fcks\u00e9ges akkor nano nginx.conf 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 user nginx ; worker_processes 1 ; error_log /var/log/nginx/error.log warn ; pid /var/run/nginx.pid ; events { worker_connections 1024 ; } http { include /etc/nginx/mime.types ; default_type application/octet-stream ; log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"' ; access_log /var/log/nginx/access.log main ; sendfile on ; #tcp_nopush on; keepalive_timeout 65 ; gzip on ; include /etc/nginx/conf.d/*.conf ; server { listen 80 ; server_name atseashop.com ; return 301 https:// $host$request_uri ; } server { listen 443 ssl ; ssl_certificate /run/secrets/revprox_cert ; ssl_certificate_key /run/secrets/revprox_key ; server_name atseashop.com ; access_log /dev/stdout ; error_log /dev/stderr ; location / { proxy_pass http://appserver:8080 ; } } } nano Dockerfile 1 2 FROM dockersamples/atseasampleshopapp_reverse_proxy ADD nginx.conf /etc/nginx/nginx.conf buildelj\u00fck, push, login kell 1 docker build -t keikami/demo:atsea . 1 docker push keikami/demo:atsea 1 docker login keikami nano docker-stack.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 version: \"3.2\" services: reverse_proxy: image: keikami/demo:atsea ports: - \"80:80\" - \"443:443\" secrets: - source: revprox_cert target: revprox_cert - source: revprox_key target: revprox_key networks: - front-tier database: image: dockersamples/atsea_db environment: POSTGRES_USER: gordonuser POSTGRES_DB_PASSWORD_FILE: /run/secrets/postgres_password POSTGRES_DB: atsea networks: - back-tier secrets: - postgres_password deploy: placement: constraints: - 'node.role == manager' appserver: image: dockersamples/atsea_app networks: - front-tier - back-tier - payment deploy: replicas: 2 update_config: parallelism: 2 failure_action: rollback placement: constraints: - 'node.role == manager' restart_policy: condition: on-failure delay: 5s max_attempts: 3 window: 120s secrets: - postgres_password visualizer: image: dockersamples/visualizer:stable ports: - \"8001:8080\" stop_grace_period: 1m30s volumes: - \"/var/run/docker.sock:/var/run/docker.sock\" deploy: update_config: failure_action: rollback placement: constraints: - 'node.role == manager' payment_gateway: image: dockersamples/atseasampleshopapp_payment_gateway secrets: - source: staging_token target: payment_token networks: - payment deploy: update_config: failure_action: rollback placement: constraints: - 'node.role == manager' - 'node.labels.pcidss == yes' networks: front-tier: back-tier: payment: driver: overlay driver_opts: encrypted: 'yes' secrets: postgres_password: external: true staging_token: external: true revprox_key: external: true revprox_cert: external: true V\u00e9g\u00fcl ism\u00e9t deploy.","title":"Atseashop"},{"location":"swarm/swarm/#mysql","text":"Create, egy webes kezel\u0151 fel\u00fcletett is tartalmaz. nano stack.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 version: '3.1' services: db: image: mysql command: --default-authentication-plugin = mysql_native_password restart: always environment: MYSQL_ROOT_PASSWORD: titok123 adminer: image: adminer restart: always ports: - 8080 :8080 Depololtatjuk: 1 docker stack deploy -c stack.yml mysql User \u00e9s jelsz\u00f3, example: titok123 1 mysql -u root -p MySQL-ben adatb\u00e1zis, t\u00e1bla, oszlopok \u00e9s tartalom hozz\u00e1 ad\u00e1sa. Adminerben t\u00f6k\u00e9ltes, vagy add ki a mysql kont\u00e9ner\u00e9n bel\u00fcl. 1 2 3 4 create database irdmeg ; use irdmeg ; create table data ( id INT ( 6 ) NOT NULL auto_increment, nev VARCHAR ( 20 ) , PRIMARY KEY ( id )) ; insert into irdmeg.data ( nev ) values ( 'Hello irdmeg' ) ; PHP script \u00edrja ki: host nev\u00e9t server ip c\u00edm\u00e9t cliens ip c\u00edm\u00e9t nano index.php 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 <?php echo gethostname () ; echo $_SERVER [ 'SERVER_ADDR' ] ; if ( !empty ( $_SERVER [ 'HTTP_CLIENT_IP' ])) { $ip_address = $_SERVER [ 'HTTP_CLIENT_IP' ] ; } //whether ip is from proxy elseif ( !empty ( $_SERVER [ 'HTTP_X_FORWARDED_FOR' ])) { $ip_address = $_SERVER [ 'HTTP_X_FORWARDED_FOR' ] ; } //whether ip is from remote address else { $ip_address = $_SERVER [ 'REMOTE_ADDR' ] ; } echo $ip_address ; $servername = \"db\" ; $username = \"root\" ; $password = \"titok123\" ; $dbname = \"irdmeg\" ; // Create connection $conn = new mysqli ( $servername , $username , $password , $dbname ) ; // Check connection if ( $conn ->connect_error ) { die ( \"Connection failed: \" . $conn ->connect_error ) ; } $sql = \"SELECT id, nev FROM data\" ; $result = $conn ->query ( $sql ) ; if ( $result ->num_rows > 0 ) { // output data of each row while ( $row = $result ->fetch_assoc ()) { echo \"id: \" . $row [ \"id\" ] . \" - Name: \" . $row [ \"nev\" ] . \"<br>\" ; } } else { echo \"0 results\" ; } $conn ->close () ; ?> Ez elhelyezi az index. php-t a '/var/www/html/' mapp\u00e1ba. Telep\u00edti majd enged\u00e9lyezi a mysqli-t. nano Dockerfile 1 2 3 4 5 FROM php:7.4-apache ADD index.php /var/www/html/index.php RUN docker-php-ext-install mysqli RUN docker-php-ext-enable mysqli #RUN rm /var/www/html/index.html Buildelj\u00fck, pusholjuk. 1 docker build -t keikami/demo:php . 1 docker push keikami/demo:php Ha sz\u00fcks\u00e9ges akkor loginoljunk be ex: 1 docker login keikami Glob\u00e1lban fusson a swarm minden tagj\u00e1ban. stack.yml-t kieg\u00e9sz\u00edtj\u00fck. 1 2 3 4 5 6 7 8 app: image: keikami/demo:php restart: always deploy: mode: global ports: - 80 :80 Futtatjuk a deploy parancsot: 1 docker stack deploy -c stack.yml mysql","title":"MySQL"},{"location":"swarm/swarm/#portainer","text":"Ind\u00edt\u00e1sa swarmon bel\u00fcl: 1 curl -L https://downloads.portainer.io/portainer-agent-stack.yml -o portainer-agent-stack.yml 1 docker stack deploy --compose-file = portainer-agent-stack.yml portainer Egy\u00e9bb telep\u00edt\u00e9si lehet\u0151s\u00e9gek","title":"Portainer"},{"location":"szerver/backup/","text":"BacupPC on Ubuntu Installing BackupPC https://upcloud.com/community/tutorials/get-started-backuppc-ubuntu/ Helyi 8888-as port a cloud 80-as porthoz kapcsol\u00e1sa 1 ssh -L 8888 :localhost:80 root@<your-server-ip> T\u00e1rhely be\u00e1ll\u00edt\u00e1s 1 echo \"if [[ -e /dev/vdb ]]; then mkfs.ext4 /dev/vdb; mkdir -p /srv/backuppc/cpool; echo '/dev/vdb /srv/backuppc/cpool ext4 defaults 0 0' >> /etc/fstab; mount -a; fi\" | bash Let\u00f6lt\u0151 link \u00e9s futtat\u00e1sa 1 wget -q -O - https://gitlab.molnix.com/molnix-open-source/backuppc-ubuntu-installer/-/raw/master/backuppc-ubuntu-installer | bash user: backuppc 1 cat password 1 cat /var/lib/backuppc/.ssh/id_rsa.pub Fentebi user jelsz\u00f3 ide sz\u00fcks\u00e9ges http://localhost:8888/BackupPC_Admin Edit Config -> Xfer \u2013 XferMethod: rsync. -> save Upcloud weboldalr\u00f3l a szerver root jelsz\u00f3 sz\u00fcks\u00e9ges a k\u00f6vetkez\u0151 parancshoz ssh kulcs m\u00e1sol\u00e1sa 1 ssh-copy-id -i /var/lib/backuppc/.ssh/id_rsa.pub root@<client-hostname> Client hozz\u00e1 ad\u00e1sa a hosts f\u00e1jlban 1 echo \"<client-hostname> 0 backuppc\" >> /etc/BackupPC/hosts apache2 \u00fajraind\u00edt\u00e1sa sz\u00fcks\u00e9ges 1 systemctl restart apache2 Ha nem indul a backup mag\u00e1t\u00f3l akkor weboldalon kiv\u00e1lasztjuk az ip-t \u00e9s a browse backups-ra kattintunk. https://fossies.org/linux/BackupPC/systemd/README Ellen\u0151rizd a backup st\u00e1tus\u00e1t, ha nem megy a backup. 1 systemctl status backuppc.service","title":"BacupPC on Ubuntu"},{"location":"szerver/backup/#bacuppc-on-ubuntu","text":"","title":"BacupPC on Ubuntu"},{"location":"szerver/backup/#installing-backuppc","text":"https://upcloud.com/community/tutorials/get-started-backuppc-ubuntu/ Helyi 8888-as port a cloud 80-as porthoz kapcsol\u00e1sa 1 ssh -L 8888 :localhost:80 root@<your-server-ip> T\u00e1rhely be\u00e1ll\u00edt\u00e1s 1 echo \"if [[ -e /dev/vdb ]]; then mkfs.ext4 /dev/vdb; mkdir -p /srv/backuppc/cpool; echo '/dev/vdb /srv/backuppc/cpool ext4 defaults 0 0' >> /etc/fstab; mount -a; fi\" | bash Let\u00f6lt\u0151 link \u00e9s futtat\u00e1sa 1 wget -q -O - https://gitlab.molnix.com/molnix-open-source/backuppc-ubuntu-installer/-/raw/master/backuppc-ubuntu-installer | bash user: backuppc 1 cat password 1 cat /var/lib/backuppc/.ssh/id_rsa.pub Fentebi user jelsz\u00f3 ide sz\u00fcks\u00e9ges http://localhost:8888/BackupPC_Admin Edit Config -> Xfer \u2013 XferMethod: rsync. -> save Upcloud weboldalr\u00f3l a szerver root jelsz\u00f3 sz\u00fcks\u00e9ges a k\u00f6vetkez\u0151 parancshoz ssh kulcs m\u00e1sol\u00e1sa 1 ssh-copy-id -i /var/lib/backuppc/.ssh/id_rsa.pub root@<client-hostname> Client hozz\u00e1 ad\u00e1sa a hosts f\u00e1jlban 1 echo \"<client-hostname> 0 backuppc\" >> /etc/BackupPC/hosts apache2 \u00fajraind\u00edt\u00e1sa sz\u00fcks\u00e9ges 1 systemctl restart apache2 Ha nem indul a backup mag\u00e1t\u00f3l akkor weboldalon kiv\u00e1lasztjuk az ip-t \u00e9s a browse backups-ra kattintunk. https://fossies.org/linux/BackupPC/systemd/README Ellen\u0151rizd a backup st\u00e1tus\u00e1t, ha nem megy a backup. 1 systemctl status backuppc.service","title":"Installing BackupPC"},{"location":"szerver/bash/","text":"PATH glob\u00e1lisan futatthat\u00f3 f\u00e1jl /usr/local/bin vagy /usr/bin mapp\u00e1ba elhelyezni,alap\u00e9rtelmezet PATH hely 1 mkdir $HOME /bin 1 export PATH = $PATH : $HOME /bin 1 echo $PATH 1 mv bashscriptneve.sh $HOME /bin bash neve a futatt\u00e1shoz bashscriptneve.sh","title":"PATH"},{"location":"szerver/bash/#path","text":"","title":"PATH"},{"location":"szerver/bash/#globalisan-futatthato-fajl","text":"/usr/local/bin vagy /usr/bin mapp\u00e1ba elhelyezni,alap\u00e9rtelmezet PATH hely 1 mkdir $HOME /bin 1 export PATH = $PATH : $HOME /bin 1 echo $PATH 1 mv bashscriptneve.sh $HOME /bin","title":"glob\u00e1lisan futatthat\u00f3 f\u00e1jl"},{"location":"szerver/bash/#bash-neve-a-futattashoz","text":"bashscriptneve.sh","title":"bash neve a futatt\u00e1shoz"},{"location":"szerver/crontab/","text":"cron crontab.guru ellen\u0151rz\u0151 weboldal /etc/cron.daily/ itt vannak a be\u00e1ll\u00edtott id\u0151z\u00edt\u0151k crontab futat\u00e1sa -e -vel ez felhaszn\u00e1l\u00f3 specifikus 1 crontab -e glob\u00e1lis crontab 1 sudo nano /etc/crontab list\u00e1za a be\u00e1ll\u00edtott crontabokat 1 crontab -l vas\u00e1rnapra a 0-\u00e1t \u00e1ll\u00edtani, hib\u00e1t dev nullba vezetni 1 22 2 * * 0 root bash /root/wpbackup.sh 2 > & 1 /dev/null","title":"cron"},{"location":"szerver/crontab/#cron","text":"","title":"cron"},{"location":"szerver/crontab/#crontabguru-ellenorzo-weboldal","text":"","title":"crontab.guru  ellen\u0151rz\u0151 weboldal"},{"location":"szerver/crontab/#etccrondaily-itt-vannak-a-beallitott-idozitok","text":"","title":"/etc/cron.daily/ itt vannak a be\u00e1ll\u00edtott id\u0151z\u00edt\u0151k"},{"location":"szerver/crontab/#crontab-futatasa-e-vel-ez-felhasznalo-specifikus","text":"1 crontab -e","title":"crontab futat\u00e1sa -e -vel ez felhaszn\u00e1l\u00f3 specifikus"},{"location":"szerver/crontab/#globalis-crontab","text":"1 sudo nano /etc/crontab","title":"glob\u00e1lis crontab"},{"location":"szerver/crontab/#listaza-a-beallitott-crontabokat","text":"1 crontab -l","title":"list\u00e1za a be\u00e1ll\u00edtott crontabokat"},{"location":"szerver/crontab/#vasarnapra-a-0-at-allitani-hibat-dev-nullba-vezetni","text":"1 22 2 * * 0 root bash /root/wpbackup.sh 2 > & 1 /dev/null","title":"vas\u00e1rnapra a 0-\u00e1t \u00e1ll\u00edtani, hib\u00e1t dev nullba vezetni"},{"location":"szerver/disk/","text":"Disk management list\u00e1zza a diskekeket 1 lsblk 1 fdisk -l | grep '^Disk' 1 sudo fdisk \u2013l /dev/vdb partici\u00f3 l\u00e9trehoz\u00e1sa 1 sudo fdisk /dev/vdb disk form\u00e1z\u00e1sa 1 sudo mkfs -t ext4 /dev/vdb f\u00e1jl rendszerhez csatol\u00e1s 1 mount /dev/vdb /home lecsatol\u00e1s 1 umount /dev/vdb f\u00e1jl l\u00e9trehoz\u00e1sa, felcsatol\u00e1sa a disk1nek 1 mkdir /disk1 1 mount /dev/vdb /disk1 felcsatolt diskek m\u00e9ret\u00e9t kilist\u00e1zza 1 df -H disken a particio m\u00e9ret\u00e9t n\u00f6veli 1 growpart /dev/vda 1 \u00e1tm\u00e9retezed a particiot a m\u00e9ret\u00e9re 1 resize2fs /dev/vda1 disk m\u00e9retet nem lehet cs\u00f6kenteni -","title":"Disk management"},{"location":"szerver/disk/#disk-management","text":"","title":"Disk management"},{"location":"szerver/disk/#listazza-a-diskekeket","text":"1 lsblk 1 fdisk -l | grep '^Disk' 1 sudo fdisk \u2013l /dev/vdb","title":"list\u00e1zza a diskekeket"},{"location":"szerver/disk/#particio-letrehozasa","text":"1 sudo fdisk /dev/vdb","title":"partici\u00f3 l\u00e9trehoz\u00e1sa"},{"location":"szerver/disk/#disk-formazasa","text":"1 sudo mkfs -t ext4 /dev/vdb","title":"disk form\u00e1z\u00e1sa"},{"location":"szerver/disk/#fajl-rendszerhez-csatolas","text":"1 mount /dev/vdb /home","title":"f\u00e1jl rendszerhez csatol\u00e1s"},{"location":"szerver/disk/#lecsatolas","text":"1 umount /dev/vdb","title":"lecsatol\u00e1s"},{"location":"szerver/disk/#fajl-letrehozasa-felcsatolasa-a-disk1nek","text":"1 mkdir /disk1 1 mount /dev/vdb /disk1","title":"f\u00e1jl l\u00e9trehoz\u00e1sa, felcsatol\u00e1sa a disk1nek"},{"location":"szerver/disk/#felcsatolt-diskek-meretet-kilistazza","text":"1 df -H","title":"felcsatolt diskek m\u00e9ret\u00e9t kilist\u00e1zza"},{"location":"szerver/disk/#disken-a-particio-meretet-noveli","text":"1 growpart /dev/vda 1","title":"disken a particio m\u00e9ret\u00e9t n\u00f6veli"},{"location":"szerver/disk/#atmeretezed-a-particiot-a-meretere","text":"1 resize2fs /dev/vda1","title":"\u00e1tm\u00e9retezed a particiot a m\u00e9ret\u00e9re"},{"location":"szerver/disk/#disk-meretet-nem-lehet-csokenteni-","text":"","title":"disk m\u00e9retet nem lehet cs\u00f6kenteni -"},{"location":"szerver/gitinterm/","text":"git git alap git bet\u00f6lt\u00e9se readme hozz\u00e1 ad\u00e1sa commit origin\u00e1lk\u00e9nt val\u00f3 felt\u00fclt\u00e9se git config git init 1 2 3 4 5 6 git add README.md git commit -m \"first commit\" git remote add origin https://github.com/KeiKami/demo.git git config --global user.email \"m.peti@irdmeg.hu\" git config --global user.name \"Your Name\" git config --global user.name \"KeiKami\" git config ellen\u0151rz\u00e9se 1 cat .gitconfig status lek\u00e9r\u00e9s 1 git status v\u00e1ltoz\u00e1s lek\u00e9rdez\u00e9s 1 git diff git push in terminal git bet\u00f6lt\u00e9se 1 git init hozz\u00e1adjuk a filet 1 git add README.md commitoljuk 1 git commit -m \"ls bash sh by ati\" hozz\u00e1 adjuk a megfelel\u0151 r\u00e9szhez 1 git remote add origin git@github.com:irdmeg/learning.git pusholjuk 1 git push -u origin master \u00faj branch l\u00e9trehozz\u00e1sa vagy/vagy 1 2 git branch test git checkout -b test branch v\u00e1lt\u00e1s 1 git checkout test v\u00e1ltoz\u00e1sok \u00f6ssze mergel\u00e9se 1 git merge origin/main branch t\u00f6rl\u00e9se lok\u00e1lisan 1 git branch -d test branch t\u00f6rl\u00e9se gitr\u0151l is 1 git push origin --delete test gites adatok szinkroniz\u00e1l\u00e1sa lok\u00e1lis git branch list\u00e1val -p kapcsol\u00f3val t\u00f6rli a neked nem l\u00e9tez\u0151 brancheket gitr\u0151l 1 git fetch -p branch lista 1 git branch -a ellen\u0151rizheted a git repo origint 1 git remote -v t\u00f6rli a git branch inform\u00e1ci\u00f3kat \u00e9s \u00fajra tudod csatlakoztatni a githez 1 rm -rf .git T\u00f6r\u00f6lt file de nincs kommitolva 1 git checkout HEAD <filename> T\u00f6r\u00f6lt file \u00e9s fel is van kommitolva 1 git reset --hard HEAD~1 T\u00f6bb kommital fel\u00fcl \u00edrt, t\u00f6r\u00f6lt file 1 2 3 git log -- <filename> git checkout <commit hash> -- <filename> git checkout <deletion commit hash>~1 -- <filename> example pre-hook 1 cd .git/hooks Ezeket a f\u00e1jlokat lehet haszn\u00e1lni. A .sample kiterjeszt\u00e9s t\u00f6rl\u00e9se ut\u00e1n l\u00e9pnek \u00e9letbe. P\u00e9ld\u00e1ul: 1 pre-commmit example pre-commit file: 1 2 3 #!/bin/sh echo \"Hello test!\" exit 1 A szerkesztett f\u00e1jlra futatt\u00e1si jogot kell adni. 1 chmode +x pre-commit Ha m\u00e1s felhaszn\u00e1l\u00f3 g\u00e9p\u00e9n is futtatni szeretn\u00e9d a hookot 1 git config --local core.hooksPath .githooks/","title":"git"},{"location":"szerver/gitinterm/#git","text":"","title":"git"},{"location":"szerver/gitinterm/#git-alap","text":"git bet\u00f6lt\u00e9se readme hozz\u00e1 ad\u00e1sa commit origin\u00e1lk\u00e9nt val\u00f3 felt\u00fclt\u00e9se git config git init 1 2 3 4 5 6 git add README.md git commit -m \"first commit\" git remote add origin https://github.com/KeiKami/demo.git git config --global user.email \"m.peti@irdmeg.hu\" git config --global user.name \"Your Name\" git config --global user.name \"KeiKami\"","title":"git alap"},{"location":"szerver/gitinterm/#git-config-ellenorzese","text":"1 cat .gitconfig","title":"git config ellen\u0151rz\u00e9se"},{"location":"szerver/gitinterm/#status-lekeres","text":"1 git status","title":"status lek\u00e9r\u00e9s"},{"location":"szerver/gitinterm/#valtozas-lekerdezes","text":"1 git diff","title":"v\u00e1ltoz\u00e1s lek\u00e9rdez\u00e9s"},{"location":"szerver/gitinterm/#git-push-in-terminal","text":"","title":"git push in terminal"},{"location":"szerver/gitinterm/#git-betoltese","text":"1 git init","title":"git bet\u00f6lt\u00e9se"},{"location":"szerver/gitinterm/#hozzaadjuk-a-filet","text":"1 git add README.md","title":"hozz\u00e1adjuk a filet"},{"location":"szerver/gitinterm/#commitoljuk","text":"1 git commit -m \"ls bash sh by ati\"","title":"commitoljuk"},{"location":"szerver/gitinterm/#hozza-adjuk-a-megfelelo-reszhez","text":"1 git remote add origin git@github.com:irdmeg/learning.git","title":"hozz\u00e1 adjuk a megfelel\u0151 r\u00e9szhez"},{"location":"szerver/gitinterm/#pusholjuk","text":"1 git push -u origin master","title":"pusholjuk"},{"location":"szerver/gitinterm/#uj-branch-letrehozzasa-vagyvagy","text":"1 2 git branch test git checkout -b test","title":"\u00faj branch l\u00e9trehozz\u00e1sa vagy/vagy"},{"location":"szerver/gitinterm/#branch-valtas","text":"1 git checkout test","title":"branch v\u00e1lt\u00e1s"},{"location":"szerver/gitinterm/#valtozasok-ossze-mergelese","text":"1 git merge origin/main","title":"v\u00e1ltoz\u00e1sok \u00f6ssze mergel\u00e9se"},{"location":"szerver/gitinterm/#branch-torlese","text":"lok\u00e1lisan 1 git branch -d test branch t\u00f6rl\u00e9se gitr\u0151l is 1 git push origin --delete test gites adatok szinkroniz\u00e1l\u00e1sa lok\u00e1lis git branch list\u00e1val -p kapcsol\u00f3val t\u00f6rli a neked nem l\u00e9tez\u0151 brancheket gitr\u0151l 1 git fetch -p branch lista 1 git branch -a ellen\u0151rizheted a git repo origint 1 git remote -v t\u00f6rli a git branch inform\u00e1ci\u00f3kat \u00e9s \u00fajra tudod csatlakoztatni a githez 1 rm -rf .git T\u00f6r\u00f6lt file de nincs kommitolva 1 git checkout HEAD <filename> T\u00f6r\u00f6lt file \u00e9s fel is van kommitolva 1 git reset --hard HEAD~1 T\u00f6bb kommital fel\u00fcl \u00edrt, t\u00f6r\u00f6lt file 1 2 3 git log -- <filename> git checkout <commit hash> -- <filename> git checkout <deletion commit hash>~1 -- <filename>","title":"branch t\u00f6rl\u00e9se"},{"location":"szerver/gitinterm/#example-pre-hook","text":"1 cd .git/hooks Ezeket a f\u00e1jlokat lehet haszn\u00e1lni. A .sample kiterjeszt\u00e9s t\u00f6rl\u00e9se ut\u00e1n l\u00e9pnek \u00e9letbe. P\u00e9ld\u00e1ul: 1 pre-commmit example pre-commit file: 1 2 3 #!/bin/sh echo \"Hello test!\" exit 1 A szerkesztett f\u00e1jlra futatt\u00e1si jogot kell adni. 1 chmode +x pre-commit Ha m\u00e1s felhaszn\u00e1l\u00f3 g\u00e9p\u00e9n is futtatni szeretn\u00e9d a hookot 1 git config --local core.hooksPath .githooks/","title":"example pre-hook"},{"location":"szerver/init/","text":"rendszerrel indulok scriptek A 0. fut\u00e1si szint a rendszer le\u00e1ll\u00edt\u00e1s\u00e1t jelenti Az 1. fut\u00e1si szint egyfelhaszn\u00e1l\u00f3 ment\u00e9si m\u00f3dot jelent Az 5. fut\u00e1si szint t\u00f6bb felhaszn\u00e1l\u00f3t, h\u00e1l\u00f3zati enged\u00e9lyt, grafikus m\u00f3dot jelent A 6. szint a rendszer \u00fajraind\u00edt\u00e1s\u00e1hoz sz\u00fcks\u00e9ges \u00c1ltal\u00e1ban a 2., 3. \u00e9s 4. fut\u00e1si szint azt az \u00e1llapotot jelenti, ahol a Linux t\u00f6bb felhaszn\u00e1l\u00f3, h\u00e1l\u00f3zati enged\u00e9lyez\u00e9ssel, sz\u00f6veges m\u00f3dban indult. Amikor enged\u00e9lyezz\u00fck a szolg\u00e1ltat\u00e1s automatikus indul\u00e1s\u00e1t, val\u00f3j\u00e1ban hozz\u00e1adjuk azt egy fut\u00e1si szinthez. alapb\u00f3l indul\u00f3 f\u00e1jlok helye /etc/init.d, list\u00e1z\u00e1sa 1 ls -l /etc/rc2.d indit\u00e1s ut\u00e1n indul\u00f3 program enged\u00e9lyez\u00e9se bash sudo update-rc.d programneve enable","title":"rendszerrel indulok scriptek"},{"location":"szerver/init/#rendszerrel-indulok-scriptek","text":"A 0. fut\u00e1si szint a rendszer le\u00e1ll\u00edt\u00e1s\u00e1t jelenti Az 1. fut\u00e1si szint egyfelhaszn\u00e1l\u00f3 ment\u00e9si m\u00f3dot jelent Az 5. fut\u00e1si szint t\u00f6bb felhaszn\u00e1l\u00f3t, h\u00e1l\u00f3zati enged\u00e9lyt, grafikus m\u00f3dot jelent A 6. szint a rendszer \u00fajraind\u00edt\u00e1s\u00e1hoz sz\u00fcks\u00e9ges \u00c1ltal\u00e1ban a 2., 3. \u00e9s 4. fut\u00e1si szint azt az \u00e1llapotot jelenti, ahol a Linux t\u00f6bb felhaszn\u00e1l\u00f3, h\u00e1l\u00f3zati enged\u00e9lyez\u00e9ssel, sz\u00f6veges m\u00f3dban indult. Amikor enged\u00e9lyezz\u00fck a szolg\u00e1ltat\u00e1s automatikus indul\u00e1s\u00e1t, val\u00f3j\u00e1ban hozz\u00e1adjuk azt egy fut\u00e1si szinthez.","title":"rendszerrel indulok scriptek"},{"location":"szerver/init/#alapbol-indulo-fajlok-helye-etcinitd-listazasa","text":"1 ls -l /etc/rc2.d","title":"alapb\u00f3l indul\u00f3 f\u00e1jlok helye /etc/init.d, list\u00e1z\u00e1sa"},{"location":"szerver/init/#inditas-utan-indulo-program-engedelyezese","text":"bash sudo update-rc.d programneve enable","title":"indit\u00e1s ut\u00e1n indul\u00f3 program enged\u00e9lyez\u00e9se"},{"location":"szerver/psql/","text":"Psql psql database dump pg_dump -Fp -h127.0.0.1 -UUSERNAME db -f db.sql ssh tunneling ssh -L 5432:127.0.0.1:5432 prod psql import sql psql -h 127.0.0.1 -U USERNAME db < db.sql psql install files Create user with encrypted pass create user USER with encrypted password 'PASSWORD'; Add all permission to table GRANT ALL ON TABLE public.\"SequelizeMeta\" TO USER;","title":"Psql"},{"location":"szerver/psql/#psql","text":"","title":"Psql"},{"location":"szerver/psql/#psql-database-dump","text":"pg_dump -Fp -h127.0.0.1 -UUSERNAME db -f db.sql","title":"psql database dump"},{"location":"szerver/psql/#ssh-tunneling","text":"ssh -L 5432:127.0.0.1:5432 prod","title":"ssh tunneling"},{"location":"szerver/psql/#psql-import-sql","text":"psql -h 127.0.0.1 -U USERNAME db < db.sql","title":"psql import sql"},{"location":"szerver/psql/#psql-install-files","text":"","title":"psql install files"},{"location":"szerver/psql/#create-user-with-encrypted-pass","text":"create user USER with encrypted password 'PASSWORD';","title":"Create user with encrypted pass"},{"location":"szerver/psql/#add-all-permission-to-table","text":"GRANT ALL ON TABLE public.\"SequelizeMeta\" TO USER;","title":"Add all permission to table"},{"location":"szerver/rsa/","text":"RSA L\u00e9tre hozza az RSA kulcsot 1 ssh-keygen -t rsa Kulcs m\u00e1sol\u00e1sa 1 ssh-copy-id demo@198.51.100.0 kulcs beileszt\u00e9se sshval 1 cat ~/.ssh/id_rsa.pub | ssh demo@198.51.100.0 \"mkdir -p ~/.ssh && chmod 700 ~/.ssh && cat >> ~/.ssh/authorized_keys\" root jelsz\u00f3 letilt\u00e1sa konfig megnyit\u00e1sa \u00e9s jelsz\u00f3 k\u00e9r\u00e9s\u00e9nek letilt\u00e1sa 1 sudo nano /etc/ssh/sshd_config PermitRootLogint lekapcsolni PermitRootLogin without-password be\u00e1llit\u00e1st \u00e9letbe l\u00e9ptetni 1 sudo systemctl reload sshd.service","title":"RSA"},{"location":"szerver/rsa/#rsa","text":"","title":"RSA"},{"location":"szerver/rsa/#letre-hozza-az-rsa-kulcsot","text":"1 ssh-keygen -t rsa","title":"L\u00e9tre hozza az RSA kulcsot"},{"location":"szerver/rsa/#kulcs-masolasa","text":"1 ssh-copy-id demo@198.51.100.0","title":"Kulcs m\u00e1sol\u00e1sa"},{"location":"szerver/rsa/#kulcs-beilesztese-sshval","text":"1 cat ~/.ssh/id_rsa.pub | ssh demo@198.51.100.0 \"mkdir -p ~/.ssh && chmod 700 ~/.ssh && cat >> ~/.ssh/authorized_keys\"","title":"kulcs beileszt\u00e9se sshval"},{"location":"szerver/rsa/#root-jelszo-letiltasa","text":"","title":"root jelsz\u00f3 letilt\u00e1sa"},{"location":"szerver/rsa/#konfig-megnyitasa-es-jelszo-keresenek-letiltasa","text":"1 sudo nano /etc/ssh/sshd_config","title":"konfig megnyit\u00e1sa \u00e9s jelsz\u00f3 k\u00e9r\u00e9s\u00e9nek letilt\u00e1sa"},{"location":"szerver/rsa/#permitrootlogint-lekapcsolni","text":"","title":"PermitRootLogint lekapcsolni"},{"location":"szerver/rsa/#permitrootlogin-without-password","text":"","title":"PermitRootLogin without-password"},{"location":"szerver/rsa/#beallitast-eletbe-leptetni","text":"1 sudo systemctl reload sshd.service","title":"be\u00e1llit\u00e1st \u00e9letbe l\u00e9ptetni"},{"location":"szerver/varnish/","text":"Varnish https://varnish-cache.org/ 1 2 3 4 5 6 7 8 9 10 11 12 13 varnish: build: context: . dockerfile: ./varnish/Dockerfile ports: - \"80:80\" depends_on: - nginx links: - nginx volumes: - ./varnish/default.vcl:/etc/varnish/default.vcl restart: unless-stopped 1 2 environment: VIRTUAL_HOST: URL,www.URL 1 2 3 4 nginx: container_name: nginx volumes: - code:/code","title":"Varnish"},{"location":"szerver/varnish/#varnish","text":"https://varnish-cache.org/ 1 2 3 4 5 6 7 8 9 10 11 12 13 varnish: build: context: . dockerfile: ./varnish/Dockerfile ports: - \"80:80\" depends_on: - nginx links: - nginx volumes: - ./varnish/default.vcl:/etc/varnish/default.vcl restart: unless-stopped 1 2 environment: VIRTUAL_HOST: URL,www.URL 1 2 3 4 nginx: container_name: nginx volumes: - code:/code","title":"Varnish"}]}